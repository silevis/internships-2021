{"version":3,"sources":["utils/supabase.ts","components/UserContext.tsx","utils/utils.ts","components/SVGRatingIcon.tsx","components/Rating.tsx","components/BorrowBook.tsx","components/Book.tsx","components/Sidebar.tsx","views/BookListView.tsx","components/ModalDialog.tsx","components/LoginButton.tsx","components/UserDropdown.tsx","components/RegisterButton.tsx","hooks/useUserInfo.ts","components/Navigation.tsx","components/SpecificationTable.tsx","components/Tablist.tsx","components/BookInfo.tsx","views/BookInfoView.tsx","components/DeleteBook.tsx","components/OwnedBook.tsx","views/BookListViewAdminOwned.tsx","components/UpdateBook.tsx","components/AddBook.tsx","components/StoreBook.tsx","views/BookListViewAdminStore.tsx","components/PrivateRoute.tsx","components/NoMatch404.tsx","components/Avatar.tsx","components/ChangeAvatarComponent.tsx","components/EditUserComponent.tsx","views/UserpageView.tsx","components/Slide.tsx","components/Slider.tsx","views/SliderDemo.tsx","components/BorrowedBook.tsx","views/BorrowedBooksView.tsx","components/Router.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["supabaseUrl","String","process","supabaseKey","supabase","createClient","UserContext","React","createContext","UserUpdateContext","loggedUser","auth","user","getUserInfo","uId","a","from","select","eq","data","isAdmin","isLoggedIn","useUser","useContext","useUserUpdate","getUserAvatarURL","undefined","storage","createSignedUrl","id","UserProvider","children","useState","setUser","then","response","testUser","firstName","lastName","email","avatarUrl","Provider","value","newUser","DefaultImageUrl","getBookImage","book","imageLinks","length","featuredImageId","SVGRatingIcon","urlBlank","urlFull","fillingPercent","fullIconStyle","clipPath","className","src","alt","style","RatingIconURL","RatingIconFilledURL","Rating","bare","votesAmount","avgRating","icons","scoreRemaining","i","push","Math","floor","max","min","round","BorrowBook","bookId","profileId","date","returnDate","quantity","AddOrNotify","insert","update","match","toast","error","toastId","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warn","type","onClick","Book","to","title","authors","join","categories","description","Date","setMonth","getMonth","Sidebar","setValue","query","setQuery","toggle","setToggled","history","useHistory","htmlFor","placeholder","onChange","event","target","defaultValue","Number","replace","BookListView","setData","params","useParams","rating","useEffect","q","ilike","gte","books","getAllBooks","map","ModalDialog","okButtonLabel","onVisibilityChange","onOkButtonClick","LoginButton","loginModalShown","setLoginModalShown","status","setStatus","formikLogin","useFormik","initialValues","emailAdress","password","onSubmit","values","signIn","message","signedURL","checkEmail","submitForm","handleSubmit","name","handleChange","onBlur","UserDropdown","items","logOut","open","setOpen","item","link","label","RegisterButton","modalVisibility","setModalVisibility","formikRegister","signUp","resp","statusText","useUserInfo","getUser","Navigation","userInfo","setItems","signOut","SpecificationTable","tableRows","key","Tablist","tabs","defaultTab","currTabID","setCurrTabID","tabTitleElements","gridTemplateRows","content","BookInfo","publishedDate","isbn","specsTabList","tabList","window","scrollTo","enlarged","setEnlarged","BookInfoPage","setBook","DeleteBook","onBookDelete","modal","setModal","err","setErr","Delete","delete","OwnedBook","image","BookListViewAdmin","dataSupabase","setDataSupabase","UpdateBook","onQuantityUpdate","Update","AddBook","globalUser","addToStore","random","addedById","addedDate","StoreBook","quantityInput","setQuantityInput","setQuantity","bookData","getBookData","BookListViewAdminStore","dataAPI","setDataAPI","setError","filter","setFilter","formikFilter","axios","get","res","fetchData","volumeInfo","thumbnail","industryIdentifiers","identifier","PrivateRoute","path","exact","NoMatch404","location","useLocation","pathname","Avatar","url","EditUserComponent","usr","useRef","fileInput","avatarLink","setAvatarLink","upload","f","FileType","arrayBuffer","fromBuffer","mime","remove","catch","JSON","stringify","accept","ref","required","current","files","ChangeAvatarComponent","UserpageView","backgroundImage","Slide","author","Slider","entryCount","entries","index","setIndex","timer","setTimer","clearTimeout","newTimer","setTimeout","old","changeSlide","dir","newIndex","SliderDemo","BorrowedBook","BorrowedBooksView","info","setInfo","getBorrowedBooks","AddRouter","basename","BookListViewAdminOwned","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","transition","newestOnTop","rtl","pauseOnFocusLoss","document","getElementById"],"mappings":"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","file":"static/js/main.4e00c44d.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = String(process.env.REACT_APP_SUPABASE_URL);\nconst supabaseKey = String(process.env.REACT_APP_SUPABASE_TOKEN);\nexport const supabase = createClient(supabaseUrl, supabaseKey);\n\n// REACT_APP_SUPABASE_URL=xxx REACT_APP_SUPABASE_TOKEN=xxx npm run start\n\nexport default supabase;\n","import React, { FC, useContext, useState } from 'react';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\nimport { IProfile } from '../interfaces/IProfile.interface';\nimport supabase from '../utils/supabase';\n\nconst UserContext = React.createContext<IBasicUserInfo | null>(null);\nconst UserUpdateContext = React.createContext<((newUser: IBasicUserInfo) => void) | null>(null);\nlet loggedUser = supabase.auth.user() ?? null;\n\nexport const getUserInfo = async (uId: string) => {\n  const { data } = await supabase\n    .from<IProfile>('profiles')\n    .select(`\n      *\n    `).eq('id', uId ?? '');\n  return data;\n};\n\nexport const isAdmin = (user: IProfile | null) => {\n  return user?.isAdmin;\n};\n\nexport const isLoggedIn = () => {\n  return supabase.auth.user();\n};\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n\nexport const useUserUpdate = () => {\n  return useContext(UserUpdateContext);\n};\n\nexport const getUserAvatarURL = async () => {\n  if (!loggedUser) {\n    return undefined;\n  }\n  return supabase\n    .storage\n    .from('images/avatars')\n    .createSignedUrl(`${loggedUser?.id}`, 43200);\n};\n\nexport const UserProvider: FC = ({ children }) => {\n  const [user, setUser] = useState<IBasicUserInfo | null>(null);\n  loggedUser = supabase.auth.user();\n\n  if (!user) {\n    getUserInfo(loggedUser?.id ?? '').then((response) => {\n      const testUser = response?.[0];\n      setUser({\n        id: testUser?.id ?? '',\n        firstName: testUser?.firstName ?? '',\n        lastName: testUser?.lastName ?? '',\n        email: testUser?.email ?? '',\n        avatarUrl: '',\n      });\n    });\n  }\n\n  const toggleUser = (newUser: IBasicUserInfo) => {\n    setUser(newUser);\n  };\n\n  return (\n    <UserContext.Provider value={user}>\n      <UserUpdateContext.Provider value={toggleUser}>\n        {children}\n      </UserUpdateContext.Provider>\n    </UserContext.Provider>\n  );\n};\n","import { IBook } from '../interfaces/IBook.interface';\n\nconst DefaultImageUrl = `${process.env.PUBLIC_URL}/image-not-found.png`;\n\nexport default function getBookImage(book: IBook): string {\n  if (book?.imageLinks?.length <= book.featuredImageId) return DefaultImageUrl;\n  return book.imageLinks[book.featuredImageId];\n}\n","import React, { FC } from 'react';\n\ninterface SVGRatingIconProps {\n  urlFull: string\n  urlBlank: string\n  fillingPercent: number\n}\n\nconst SVGRatingIcon: FC<SVGRatingIconProps> = ({ urlBlank, urlFull, fillingPercent }) => {\n  const fullIconStyle = {\n    clipPath: `polygon(0 0, ${fillingPercent}% 0, ${fillingPercent}% 100%, 0 100%)`,\n  };\n\n  return (\n    <div className=\"w-full h-full\">\n      {fillingPercent === 100 ? <img src={urlFull} alt=\"Filled ranking icon\" className=\"w-full h-full\" /> : (\n        <div className=\"grid grid-cols-1 grid-rows-1 w-full h-full\">\n          {fillingPercent !== 0\n          && (\n          <img\n            src={urlFull}\n            style={fullIconStyle}\n            alt=\"Blank ranking icon\"\n            className=\"col-start-1 col-end-2 row-start-1 row-end-2 w-full h-full\"\n          />\n)}\n          <img\n            src={urlBlank}\n            alt=\"Blank ranking icon\"\n            className=\"col-start-1 col-end-2 row-start-1 row-end-2 w-full h-full\"\n          />\n        </div>\n)}\n    </div>\n  );\n};\n\nexport default SVGRatingIcon;\n","import React, { FC } from 'react';\nimport SVGRatingIcon from './SVGRatingIcon';\n\nconst IconsAmount = 5;\nexport const MaxScoreFromAPI = 10;\nconst RatingIconURL = `${process.env.PUBLIC_URL}/star_border_black.svg`;\nconst RatingIconFilledURL = `${process.env.PUBLIC_URL}/star_black.svg`;\n\ninterface RatingProps {\n  bare: boolean\n  votesAmount: number | null\n  avgRating: number\n}\n\nconst Rating: FC<RatingProps> = ({ bare, votesAmount, avgRating }) => {\n  const icons = [];\n  const scorePerIcon = 100 / IconsAmount;\n\n  let scoreRemaining = (avgRating / MaxScoreFromAPI) * 100;\n  for (let i = 0; i < IconsAmount; i++) {\n    icons.push(<SVGRatingIcon\n      key={i}\n      urlBlank={RatingIconURL}\n      urlFull={RatingIconFilledURL}\n      fillingPercent={Math.floor(Math.max(0, Math.min(100, scoreRemaining * IconsAmount)))}\n    />);\n    scoreRemaining -= scorePerIcon;\n  }\n\n  return (\n    <div className=\"flex flex-wrap justify-center items-center flex-col\">\n      <div className=\"flex justify-between w-full h-full\">\n        {icons}\n      </div>\n      {!bare && <span className=\"text-gray-600 text-xs mt-1\">Ilosc głosów: {votesAmount}</span>}\n      {!bare && <span className=\"text-gray-600 text-xs mt-1\">Srednia ocena: {Math.round(avgRating * 100) / 100}</span>}\n    </div>\n  );\n};\n\nexport default Rating;\n","import React, { FC } from 'react';\nimport { toast } from 'react-toastify';\nimport supabase from '../utils/supabase';\nimport { IBookBorrow } from '../interfaces/IBookBorrow.interface';\nimport { IBook } from '../interfaces/IBook.interface';\n\ninterface IBookBorrowProps {\n  bookId: string;\n  profileId?: string;\n  date: Date;\n  returnDate: Date;\n  quantity: number;\n}\nconst BorrowBook: FC<IBookBorrowProps> = ({ bookId, profileId, date, returnDate, quantity }) => {\n  const AddOrNotify = async () => {\n    if (supabase.auth.user()) {\n      if (quantity >= 0) {\n        await supabase.from<IBookBorrow>('borrowedBooks').insert({\n          bookId,\n          profileId,\n          date,\n          returnDate,\n        });\n        await supabase.from<IBook>('books')\n          .update({ quantity })\n          .match({ id: bookId });\n      } else {\n        toast.error('We don\\'t have this book in stock right now', {\n          toastId: 'borrow-book-warning',\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: false,\n          progress: undefined,\n      });\n    }\n  } else {\n      toast.warn('You must be logged in to borrow a book!', {\n        toastId: 'borrow-book-warning',\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: false,\n        progress: undefined,\n      });\n    }\n  };\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"btn-page\"\n        onClick={AddOrNotify}\n      >\n        Borrow a book\n      </button>\n    </div>\n  );\n};\n\nexport default BorrowBook;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { IBook } from '../interfaces/IBook.interface';\nimport getBookImage from '../utils/utils';\nimport Rating from './Rating';\nimport './Book.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport BorrowBook from './BorrowBook';\nimport { useUser } from './UserContext';\n\ninterface IBookProps {\n  book: IBook;\n}\n\nconst Book: FC<IBookProps> = ({\n  book,\n}) => {\n  const loggedUser = useUser();\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-50 shadow p-3 m-3 mx-6\">\n      <div className=\"m-3 flex justify-center\">\n        <Link to={`/book/${book.id}`}>\n          <img\n            src={getBookImage(book)}\n            alt={`Zdjecie okladki ${book.title ?? 'N/D'}`}\n            className=\"transform hover:scale-110 cursor-pointer w-32\n            transition duration-400 ease-in-out hover:-translate-y-1\"\n          />\n        </Link>\n      </div>\n      <div className=\"ml-2 mb-4 md:mb-0 w-full\">\n        <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">\n          <Link to={`/book/${book.id}`}>{book.title ?? 'N/D'}</Link>\n        </span>\n        <div className=\"text-gray-400 flex flex-col\">\n          <span>{book.authors?.join(' ') ?? 'N/D'}</span>\n          <span>{book.categories ?? 'N/D'}</span>\n          <div className=\"overflow-hidden max-h-20 book-desc\">{book.description ?? 'N/D'}</div>\n          <div className=\"flex h-4 mt-2\">\n            <Rating votesAmount={book.votesAmount} avgRating={book.avgRating} bare />\n          </div>\n        </div>\n      </div>\n      <div>\n        <BorrowBook\n          bookId={book.id}\n          profileId={loggedUser?.id}\n          date={new Date()}\n          returnDate={new Date(new Date().setMonth(new Date().getMonth() + 1))}\n          quantity={book.quantity ? book.quantity - 1 : -1}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Sidebar = () => {\n  const [value, setValue] = useState(0);\n  const [query, setQuery] = useState('*');\n  const handleSlideChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(Number(event?.target?.value));\n  };\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (String(event?.target?.value).length > 0) setQuery(String(event?.target?.value));\n    else setQuery('*');\n  };\n  const [toggle, setToggled] = useState(true);\n  const history = useHistory();\n\n  return (\n    <div className=\"flex justify-between bg-white\">\n      <div className={`bg-white inline z-40 ${toggle ? 'hidden' : 'fixed lg:static'}`}>\n        <button\n          type=\"button\"\n          className=\"btn-sidebar lg:hidden\"\n          onClick={() => setToggled(!toggle)}\n        >\n          ⮜\n        </button>\n      </div>\n      <div\n        className={`lg:block z-30 inset-0 flex-none min-h-screen h-full lg:h-auto bg-white ml-6 lg:mt-0 lg:ml-0 pb-10 lg:pt-0\n        w-72 shadow-sm dark:bg-gray-800 overflow-y-auto lg:overflow-y-visible ${toggle ? 'hidden' : 'fixed lg:static'}`}\n      >\n        <div className=\"items-center justify-between scrolling-touch fixed top-14 max-h-screen overflow-y-auto pb-8\">\n          <div className=\"border-b border-gray-400 mx-4 my-5 pl-2 text-l font-bold\">\n            Filters\n          </div>\n          <nav className=\"mx-4 my-3\">\n            <div className=\"border-b border-gray-200 mx-1 pb-5 mt-5\">\n              <label htmlFor=\"searchbar\" className=\"mr-2\">Search</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter book name\"\n                id=\"searchbar\"\n                className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none\n                  transition duration-300 ease-in-out focus:ring-2 ring-gray-200\"\n                onChange={handleQueryChange}\n              />\n            </div>\n            <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n              <ul className=\"list-disc\">\n                <li>Fiction</li>\n                <li>Literature of fact, journalism</li>\n                <li>Popular science literature</li>\n                <li>Children&apos;s literature</li>\n                <li>Comics</li>\n                <li>Poetry, drama satire</li>\n                <li>Other</li>\n              </ul>\n            </div>\n            <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n              <input type=\"range\" min=\"0\" max=\"10\" defaultValue=\"0\" onChange={handleSlideChange} />\n              <span className=\"ml-2\" id=\"range\">{value > 0 ? value : 'All'}</span>\n            </div>\n            <div className=\"flex border-b border-gray-200 mx-1 pl-4 pb-5 mt-5 place-content-center\">\n              <button\n                className=\"btn-page w-2/3\"\n                type=\"button\"\n                onClick={() => history.replace(`/books-list/${query}/${value}`)}\n              >\n                Filter\n              </button>\n            </div>\n          </nav>\n        </div>\n      </div>\n      <div className={`inline z-40 ${toggle ? 'fixed' : 'hidden'}`}>\n        <button\n          type=\"button\"\n          className=\"btn-sidebar lg:hidden\"\n          onClick={() => { setToggled(!toggle); }}\n        >\n          ⮞\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { IBook } from '../interfaces/IBook.interface';\nimport supabase from '../utils/supabase';\nimport Book from '../components/Book';\nimport Sidebar from '../components/Sidebar';\n\ninterface IParams {\n  q: string;\n  rating: string;\n}\n\nconst BookListView = () => {\n  const [data, setData] = useState<IBook[] | null>([]);\n  const params: IParams = useParams();\n  const { rating } = params;\n  useEffect(() => {\n    if (params?.q?.length < 1) params.q = '*';\n    const getAllBooks = async () => {\n      const q = `%${params.q ? params.q : '*'}%`;\n      const { data: books } = await supabase\n        .from<IBook>('books')\n        .select('*')\n        .ilike('title', q)\n        .gte('avgRating', rating);\n      if (books !== null) {\n        setData(books);\n      }\n    };\n    getAllBooks();\n  }, [params, rating]);\n  return (\n    <div className=\"content-container\">\n      <Sidebar />\n      <div className=\"mt-3 w-full shadow-inner\">\n        {data && data?.map((book) => (\n          <Book key={book.id} book={book} />\n        ))}\n        {data && data?.length < 1 && (\n          <div className=\"flex justify-center italic\">No results</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BookListView;\n","import React, { FC } from 'react';\n\ninterface IModalDialogProps {\n  title: string;\n  okButtonLabel: string;\n  onVisibilityChange: () => void;\n  onOkButtonClick: () => void;\n}\n\nconst ModalDialog: FC<IModalDialogProps> = ({ title, okButtonLabel, onVisibilityChange, onOkButtonClick, children }) => {\n  return (\n    <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\">\n      <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n        <div className=\"flex justify-between\">\n          <h1 className=\"font-bold\">{title}</h1>\n          <button type=\"button\" onClick={() => onVisibilityChange()} className=\"btn-exit\">\n            X\n          </button>\n        </div>\n        <div>\n          {children}\n        </div>\n        <button type=\"submit\" className=\"btn-page\" onClick={() => onOkButtonClick()}>\n          {okButtonLabel}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalDialog;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { getUserAvatarURL, useUserUpdate, getUserInfo } from './UserContext';\nimport ModalDialog from './ModalDialog';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\n\nconst LoginButton = () => {\n  const setUser = useUserUpdate();\n  const [loginModalShown, setLoginModalShown] = useState(false);\n  const [status, setStatus] = useState<string>();\n\n  const formikLogin = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n    },\n    onSubmit: async (values) => {\n      const { user, error } = await supabase.auth.signIn({\n        email: values.emailAdress,\n        password: values.password,\n      });\n      if (error) {\n        setStatus(error.message);\n        return;\n      }\n\n      if (user && setUser) {\n        // TODO: get the default avatar directly from the supabase avatar store\n        getUserInfo(user?.id).then(async (response) => {\n          const testUser = response?.[0];\n\n          setUser({\n            id: testUser?.id ?? '',\n            firstName: testUser?.firstName ?? 'unknown',\n            lastName: testUser?.lastName ?? 'unknown',\n            email: testUser?.email ?? 'no email',\n            avatarUrl: (await getUserAvatarURL())?.signedURL\n              ?? `${process.env.PUBLIC_URL}/image-not-found.png`,\n          });\n        });\n        setLoginModalShown(!loginModalShown);\n        setStatus('');\n      }\n    },\n  });\n\n  const checkEmail = async () => {\n    const { data } = await supabase\n      .from<IBasicUserInfo>('profiles')\n      .select('email')\n      .eq('email', formikLogin.values.emailAdress);\n    if (!data?.length) {\n      setStatus('There\\'s no user associated with this email');\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"btn-nav text-left relative\">\n        <button\n          type=\"button\"\n          onClick={() => setLoginModalShown(!loginModalShown)}\n        >\n          Sign In\n        </button>\n      </div>\n      {loginModalShown && (\n        <ModalDialog\n          title=\"Login\"\n          okButtonLabel=\"Sign In\"\n          onOkButtonClick={() => formikLogin.submitForm()}\n          onVisibilityChange={() => setLoginModalShown(!loginModalShown)}\n        >\n          <form onSubmit={formikLogin.handleSubmit}>\n            <div className=\"flex content-between\">\n              <div className=\"mr-1 flex-auto\">\n                <label htmlFor=\"email-adress\" className=\"text-xs block\">Email adress:</label>\n                <input\n                  id=\"emailAdress\"\n                  name=\"emailAdress\"\n                  type=\"email\"\n                  placeholder=\"Email-adress\"\n                  onChange={formikLogin.handleChange}\n                  onBlur={checkEmail}\n                  value={formikLogin.values.emailAdress}\n                  className=\"input-pri\"\n                />\n              </div>\n              <div className=\"flex flex-auto flex-col items-end\">\n                <div>\n                  <label htmlFor=\"password\" className=\"text-xs block\">Password:</label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={formikLogin.handleChange}\n                    value={formikLogin.values.password}\n                    className=\"input-pri\"\n                  />\n                </div>\n              </div>\n            </div>\n            <p className=\"text-red-500 mb-4\">{status}</p>\n          </form>\n        </ModalDialog>\n      )}\n    </div>\n  );\n};\n\nexport default LoginButton;\n","import React, { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface DropdownItem {\n  link: string;\n  label: string;\n}\n\ninterface UserDropdownProps {\n  title: string | undefined;\n  items: DropdownItem[];\n  logOut: () => void;\n}\n\nconst UserDropdown: FC<UserDropdownProps> = ({ title, items, logOut }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"relative btn-nav-end\">\n      <button\n        type=\"button\"\n        className=\"navbar-nav text-left relative\"\n        onClick={() => setOpen(!open)}\n      >\n        {title}\n      </button>\n\n      {open && (\n        <>\n          <div\n            className=\"hidden md:flex md:fixed left-0 top-0 pin z-40 overflow-auto bg-white bg-opacity-0 h-screen w-screen\"\n            onClick={() => setOpen(!open)}\n          >\n            &nbsp;\n          </div>\n          <div\n            className=\"dropdown block md:absolute top-0 left-0 w-auto overflow-hidden md:-translate-y-0 z-50 bg-gray-700\n          md:bg-gray-600 text-white border-none md:border border-gray-400 md:border-gray-800 rounded-sm\"\n          >\n            {items.map((item) => (\n              <div className=\"menu-item border-b border-gray-400 md:border-gray-700\">\n                <button type=\"button\">\n                  <Link\n                    to={`${item.link}`}\n                    className=\"cursor-pointer transition duration-400 ease-in-out hover:text-indigo-500\"\n                  >\n                    {item.label}\n                  </Link>\n                </button>\n              </div>\n            ))}\n\n            <div className=\"menu-item\">\n              <button\n                type=\"button\"\n                onClick={logOut}\n                className=\"cursor-pointer transition duration-400 ease-in-out hover:text-indigo-500\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n\n    </div>\n  );\n};\n\nexport default UserDropdown;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport ModalDialog from './ModalDialog';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\n\nconst RegisterButton = () => {\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [status, setStatus] = useState<string>();\n  const formikRegister = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n    },\n    onSubmit: async (values) => {\n      const { user, error } = await supabase.auth.signUp({\n        email: values.emailAdress,\n        password: values.password,\n      });\n      if (error) {\n        setStatus(error.message);\n        return;\n      }\n      if (user) {\n        await supabase.from<IBasicUserInfo>('profiles').insert({\n          id: user.id,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          email: values.emailAdress,\n        }).then((resp) => {\n          setStatus(resp.statusText);\n        });\n        setModalVisibility(!modalVisibility);\n      }\n    },\n  });\n  const checkEmail = async () => {\n    const { data } = await supabase\n      .from<IBasicUserInfo>('profiles')\n      .select('email')\n      .eq('email', formikRegister.values.emailAdress);\n    if (!data?.length) {\n      setStatus('A user with this email address has already been registered');\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"btn-nav-end text-left relative\">\n        <button\n          type=\"button\"\n          onClick={() => setModalVisibility(!modalVisibility)}\n        >Sign Up\n        </button>\n      </div>\n      {modalVisibility\n        && (\n          <ModalDialog\n            title=\"Register\"\n            okButtonLabel=\"Sign Up\"\n            onOkButtonClick={() => formikRegister.submitForm()}\n            onVisibilityChange={() => setModalVisibility(!modalVisibility)}\n          >\n            <form onSubmit={formikRegister.handleSubmit}>\n              <div className=\"flex justify-between\">\n                <div>\n                  <label htmlFor=\"firstName\" className=\"text-xs block\">First Name:</label>\n                  <input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.firstName}\n                    className=\"input-pri\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"lastName\" className=\"text-xs block\">Last Name:</label>\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.lastName}\n                    className=\"input-pri\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex justify-between\">\n                <div>\n                  <label htmlFor=\"email-adress\" className=\"text-xs block\">Email adress:</label>\n                  <input\n                    id=\"emailAdress\"\n                    name=\"emailAdress\"\n                    type=\"email\"\n                    placeholder=\"Email-adress\"\n                    onChange={formikRegister.handleChange}\n                    onBlur={checkEmail}\n                    value={formikRegister.values.emailAdress}\n                    className=\"input-pri\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"password\" className=\"text-xs block\">Password:</label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.password}\n                    className=\"input-pri\"\n                  />\n                </div>\n              </div>\n              <p className=\"text-red-500 mb-4\">{status}</p>\n            </form>\n          </ModalDialog>\n        )}\n    </div>\n  );\n};\n\nexport default RegisterButton;\n","import { useState, useEffect } from 'react';\nimport supabase from '../utils/supabase';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst useUserInfo = (id: string | null) => {\n  const [data, setData] = useState<IProfile[] | null>();\n  useEffect(() => {\n    if (!id) return;\n    const getUser = async () => {\n      const { data: user } = await supabase\n        .from<IProfile>('profiles')\n        .select(`\n      *\n    `).eq('id', id);\n      setData(user);\n    };\n    getUser();\n  }, [id]);\n\n  if (data?.[0]?.id !== id) {\n    return null;\n  }\n\n  return id ? data?.[0] : null;\n};\n\nexport default useUserInfo;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport LoginButton from './LoginButton';\nimport UserDropdown from './UserDropdown';\nimport RegisterButton from './RegisterButton';\nimport { isLoggedIn, useUser, useUserUpdate, isAdmin } from './UserContext';\nimport supabase from '../utils/supabase';\nimport useUserInfo from '../hooks/useUserInfo';\n\nconst Navigation = () => {\n  const loggedUser = useUser();\n\n  const setUser = useUserUpdate();\n  const [toggle, setToggled] = useState(false);\n  const history = useHistory();\n  const userInfo = useUserInfo(loggedUser?.id ?? null);\n  const [items, setItems] = useState([{ link: '/user', label: 'User Profile' }, { link: '/user/books', label: 'User Books' }]);\n\n  useEffect(() => {\n    if (isAdmin(userInfo)) {\n      setItems([{ link: '/user', label: 'User Profile' }, { link: '/user/books', label: 'User Books' },\n      { link: '/admin/owned', label: 'Owned' }, { link: '/admin/store', label: 'Store' }]);\n    } else {\n      setItems([{ link: '/user', label: 'User Profile' }, { link: '/user/books', label: 'User Books' }]);\n    }\n  }, [userInfo]);\n\n  const logout = () => {\n    if (setUser) {\n      setUser({\n        id: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        avatarUrl: '',\n      });\n    }\n    supabase.auth.signOut();\n    history.push('/');\n  };\n\n  return (\n    <nav className=\"bg-gray-700 shadow dark:bg-gray-800\">\n      <div className=\"container px-6 py-3 mx-auto md:flex md:justify-between md:items-center\">\n        <div className=\"flex items-center justify-between\">\n          <Link to=\"/\">\n            <div>\n              <span className=\"text-xl font-bold text-white dark:text-white md:text-2xl\">\n                Books\n              </span>\n            </div>\n          </Link>\n          <button\n            type=\"button\"\n            className=\"border-gray-400 text-gray-200 rounded-md border max-h-full px-1\n            transition duration-500 ease-in-out hover:bg-gray-200 hover:text-gray-700 md:hidden\"\n            onClick={() => setToggled(!toggle)}\n          >\n            ☰\n          </button>\n        </div>\n\n        <div className={toggle ? 'block items-center md:flex' : 'hidden md:block items-center'}>\n          <div className=\"flex flex-col md:flex-row my-2 md:my-0 md:mx-6\">\n            <button\n              type=\"button\"\n              className=\"btn-nav text-left relative\"\n            >\n              <Link\n                to=\"/\"\n              >\n                Home\n              </Link>\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn-nav text-left relative\"\n            >\n              <Link\n                to=\"/books-list\"\n              >\n                Book List\n              </Link>\n            </button>\n\n            {isLoggedIn() ? (\n              <UserDropdown\n                title={loggedUser?.email}\n                items={items}\n                logOut={logout}\n              />\n            ) : (\n              <>\n                <LoginButton />\n                <RegisterButton />\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { FC } from 'react';\n\ninterface ISpecsTableProps {\n  items: ISpecsItem[]\n}\n\ninterface ISpecsItem {\n  key: string\n  value: string\n}\n\nconst SpecificationTable: FC<ISpecsTableProps> = ({ items }) => {\n  const tableRows = [];\n  for (let i = 0; i < items.length; i++) {\n      tableRows.push(\n        <div className=\"flex flex-wrap flex-col md:flex-row justify-between border-b\">\n          <div className=\"max-w-1/2 md:text-right p-2 mr-10 text-gray-500\">{items[i].key}</div>\n          <div className=\"max-w-1/2 p-2\">{items[i].value}</div>\n        </div>\n);\n  }\n  return (\n    <div>\n      {tableRows}\n    </div>\n  );\n};\n\nexport default SpecificationTable;\n","import { FC, useState } from 'react';\nimport { ITab } from '../interfaces/ITab.interface';\n\ninterface ITablistProps {\n  tabs: ITab[],\n  defaultTab: number\n}\n\nconst Tablist: FC<ITablistProps> = ({ tabs, defaultTab }) => {\n  const [currTabID, setCurrTabID] = useState(defaultTab);\n\n  const tabChangeHandler = (newTabId: number) => {\n    setCurrTabID(newTabId);\n  };\n\n  const tabTitleElements = [];\n  for (let i = 0; i < tabs.length; i++) {\n    tabTitleElements.push(\n      <button\n        type=\"button\"\n        className=\"flex-initial p-4 cursor-pointer auto-rows-min border-r border-gray-300\"\n        onClick={() => tabChangeHandler(i)}\n      >\n        {tabs[i].title}\n      </button>\n);\n  }\n\n  // todo: set the height of the tablist to the maximum height of a tab content\n  return (\n    <div\n      className=\"grid grid-rows-2 grid-cols-1 shadow-md border border-gray-400\"\n      style={{ gridTemplateRows: 'min-content auto' }}\n    >\n      <div className=\"flex border-b border-gray-300\">\n        {tabTitleElements}\n      </div>\n      <div className=\"p-1 md:p-4\">\n        {tabs[currTabID].content}\n      </div>\n    </div>\n  );\n};\n\nexport default Tablist;\n","import { useState, FC, useEffect } from 'react';\nimport { IBook } from '../interfaces/IBook.interface';\nimport getBookImage from '../utils/utils';\nimport BorrowBook from './BorrowBook';\nimport Rating from './Rating';\nimport SpecificationTable from './SpecificationTable';\nimport Tablist from './Tablist';\nimport { useUser } from './UserContext';\n\ninterface IBookInfoProps {\n  book: IBook\n}\n\nconst BookInfo: FC<IBookInfoProps> = ({ book }) => {\n  const [specsTabList] = useState([{\n    key: 'Rok wydania',\n    value: book.publishedDate,\n  }, {\n    key: 'ID',\n    value: book.id,\n  }, {\n    key: 'Tytul',\n    value: book.title,\n  }, {\n    key: 'ISBN',\n    value: book.isbn,\n  }, {\n    key: 'Autorzy',\n    value: book.authors?.join(', '),\n  }, {\n    key: 'Kategorie',\n    value: book.categories?.join(', '),\n  }]);\n\n  const [tabList] = useState([{\n    title: 'Szczegóły',\n    content:\n  <div className=\"flex justify-center p-1 md:p-4\">\n    <SpecificationTable items={specsTabList} />\n  </div>,\n  }]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const [enlarged, setEnlarged] = useState(false);\n  const loggedUser = useUser();\n\n  return (\n    <div className=\"w-11/12 m-auto mt-8\">\n      <div className=\"md:w-11/12 m-auto flex flex-wrap flex-col md:flex-row items-start\">\n        <div className=\"m-auto flex flex-wrap flex-col items-start md:flex-row md:w-2/6\">\n          <img\n            onClick={() => setEnlarged(true)}\n            src={book.imageLinks[0]}\n            alt=\"A book.\"\n            className=\"m-auto md:w-1/3 max-h-56 object-scale-down\n            transform hover:scale-110 cursor-pointer w-32 pr-2\n            transition duration-400 ease-in-out hover:-translate-y-1\"\n          />\n        </div>\n        <div className=\"lg:w-2/3 flex-col lg:flex-row flex flex-wrap\">\n          <div className=\"lg:w-6/12 flex flex-auto flex-col\">\n            <span className=\"text-xl\">{book.title}</span> <br />\n            <div className=\"flex\">\n              <div className=\"w-1/2 text-gray-600\">{book.categories?.join(', ')}</div>\n              <div className=\"w-1/2 text-right text-gray-600\">{book.authors?.join(', ')}</div>\n            </div>\n            <div className=\"mt-12 text-sm text-gray-700 text-justify\">\n              {book.description}\n            </div>\n          </div>\n          <div className=\"lg:w-2/12 mt-4 lg:ml-4\">\n            <Rating bare={false} votesAmount={book.votesAmount} avgRating={book.avgRating} />\n            <BorrowBook\n              bookId={book.id}\n              profileId={loggedUser?.id}\n              date={new Date()}\n              returnDate={new Date(new Date().setMonth(new Date().getMonth() + 1))}\n              quantity={book.quantity ? book.quantity - 1 : -1}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"w-full md:w-2/3 mt-8 m-auto\">\n        <Tablist tabs={tabList} defaultTab={0} />\n      </div>\n      {enlarged && (\n        <div\n          className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\"\n          onClick={() => setEnlarged(false)}\n        >\n          <div className=\"relative m-auto flex-col flex rounded-md shadow-xl transform scale-150\">\n            <img src={getBookImage(book)} alt=\"A book.\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookInfo;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BookInfo from '../components/BookInfo';\nimport Sidebar from '../components/Sidebar';\nimport { IBook } from '../interfaces/IBook.interface';\nimport supabase from '../utils/supabase';\n\ninterface BookInfoURLParams {\n  id: string\n}\n\nconst BookInfoPage = () => {\n  const params = useParams<BookInfoURLParams>();\n  const [book, setBook] = useState<IBook>();\n\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const { data } = await supabase\n        .from<IBook>('books')\n        .select('*')\n        .eq('id', params.id);\n      if (data !== null) {\n        setBook(data[0]);\n      }\n    };\n    getAllBooks();\n  }, [params]);\n  return book ? (\n    <div className=\"content-container\">\n      <Sidebar />\n      <div className=\"mt-16 w-full\">\n        <BookInfo book={book} />\n      </div>\n    </div>\n) : <span>Book doesn&apos;t exist</span>;\n};\n\nexport default BookInfoPage;\n","import { PostgrestError } from '@supabase/supabase-js';\nimport React, { FC, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { supabase } from '../utils/supabase';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  onBookDelete: () => void;\n}\nconst DeleteBook: FC<IBookProps> = ({ id, onBookDelete, title }) => {\n  const [modal, setModal] = useState(false);\n  const [err, setErr] = useState<PostgrestError | null>();\n  const Delete = async () => {\n    const { error } = await supabase\n      .from('books')\n      .delete()\n      .match({ id });\n      setErr(error);\n    onBookDelete();\n  };\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"btn-page\"\n        onClick={() => setModal(true)}\n      >\n        - Delete book\n      </button>\n      {modal && (\n        <div\n          className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\"\n          onClick={() => setModal(false)}\n        >\n          <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n            <p>Are you sure you want to delete this book from the stock: &quot;{title}&quot;?</p>\n            <button\n              type=\"button\"\n              className=\"btn-page\"\n              onClick={Delete}\n            >\n              - Delete book from stock\n            </button>\n          </div>\n        </div>\n      )}\n      {err && (\n        toast.error('There was a problem with deleting this book!', {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          })\n      )}\n    </div>\n  );\n};\n\nexport default DeleteBook;\n","import React, { FC } from 'react';\nimport DeleteBook from './DeleteBook';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  image: string;\n  isbn: string;\n  authors?: string[];\n  categories?: string[];\n  quantity?: number;\n  onBookDelete: () => void;\n}\n\nconst OwnedBook: FC<IBookProps> = ({\n  id,\n  title,\n  authors,\n  image,\n  categories,\n  quantity,\n  onBookDelete,\n}) => {\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-100 shadow-md p-3 m-3 mx-6\">\n      <img\n        src={image}\n        alt=\"A book.\"\n        className=\"m-3 w-32\"\n      />\n      <div className=\"ml-2 w-full flex flex-col\">\n        {/* <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">{title}</span> */}\n        {title}\n        <span className=\"text-gray-400\">{authors?.join(' ')}</span>\n        <span className=\"text-gray-400\">{categories}</span>\n        <span className=\"text-gray-400\">Quantity of books in stock: {quantity}</span>\n      </div>\n      <div>\n        <DeleteBook\n          id={id}\n          title={title}\n          onBookDelete={onBookDelete}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default OwnedBook;\n","import React, { useState, useEffect } from 'react';\nimport { IBook } from '../interfaces/IBook.interface';\nimport supabase from '../utils/supabase';\nimport OwnedBook from '../components/OwnedBook';\n\nconst BookListViewAdmin = () => {\n  const [dataSupabase, setDataSupabase] = useState<IBook[] | null>([]);\n  const getAllBooks = async () => {\n    const { data: books } = await supabase\n      .from<IBook>('books')\n      .select('*');\n    if (books !== null) {\n      setDataSupabase(books);\n    }\n  };\n  useEffect(() => {\n    getAllBooks();\n  }, []);\n  return (\n    <div className=\"container w-full h-full max-w-8xl mx-auto flex mt-3\">\n      <div className=\"min-w-0 w-full pt-3 flex-auto lg:static lg:max-h-full lg:overflow-visible shadow-inner\">\n        {dataSupabase && dataSupabase?.map((book) => (\n          <OwnedBook\n            key={book.id}\n            id={book.id}\n            title={book.title}\n            image={book.imageLinks[0]}\n            isbn={book.isbn}\n            authors={book.authors}\n            publishedDate={book.publishedDate}\n            categories={book.categories}\n            description={book.description}\n            quantity={book.quantity}\n            onBookDelete={getAllBooks}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default BookListViewAdmin;\n","import React, { FC } from 'react';\nimport { supabase } from '../utils/supabase';\nimport { IBook } from '../interfaces/IBook.interface';\n\ninterface IBookProps {\n  id?: string;\n  quantity?: number;\n  onQuantityUpdate: (quantity: number) => void;\n}\n\nconst UpdateBook: FC<IBookProps> = ({ id, quantity, onQuantityUpdate }) => {\n  const Update = async () => {\n    await supabase.from<IBook>('books')\n      .update({ quantity })\n      .match({ id });\n    onQuantityUpdate(quantity ?? 0);\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"btn-page\"\n        onClick={Update}\n      >\n        + Add books to the stock\n      </button>\n    </div>\n  );\n};\n\nexport default UpdateBook;\n","import React, { FC, useState } from 'react';\nimport { PostgrestError } from '@supabase/supabase-js';\nimport { toast } from 'react-toastify';\nimport { supabase } from '../utils/supabase';\nimport { IBook } from '../interfaces/IBook.interface';\nimport { useUser } from './UserContext';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  image: string;\n  isbn: string;\n  authors?: string[];\n  categories?: string[];\n  quantity: number;\n}\n\nconst AddBook: FC<IBookProps> = ({ id, title, authors, image, description, isbn, publishedDate, categories, quantity }) => {\n  const globalUser = useUser();\n  const [err, setErr] = useState<PostgrestError | null>();\n  const addToStore = async () => {\n    const { error } = await supabase\n      .from<IBook>('books')\n      .insert({\n        id,\n        title,\n        description,\n        publishedDate,\n        categories,\n        isbn,\n        imageLinks: [image],\n        authors,\n        votesAmount: Math.floor(Math.random() * 1000) + 1,\n        avgRating: Math.floor(Math.random() * 10) + 1,\n        addedById: globalUser?.id,\n        addedDate: new Date(),\n        quantity,\n      });\n    setErr(error);\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"btn-page\"\n        onClick={addToStore}\n      >\n        + Add books to the stock\n      </button>\n      {err && (\n        toast.error(err.message, {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n      )}\n    </div>\n  );\n};\n\nexport default AddBook;\n","import React, { FC, useState, useEffect } from 'react';\nimport UpdateBook from './UpdateBook';\nimport supabase from '../utils/supabase';\nimport AddBook from './AddBook';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  image: string;\n  isbn: string;\n  authors?: string[];\n  categories?: string[];\n  quantity?: number;\n}\n\nconst StoreBook: FC<IBookProps> = ({\n  id,\n  title,\n  authors,\n  image,\n  publishedDate,\n  categories,\n  description,\n  isbn,\n}) => {\n  const [quantityInput, setQuantityInput] = useState('1');\n  const [quantity, setQuantity] = useState<number | null>(null);\n  const [data, setData] = useState<IBookProps[] | null>([]);\n\n  useEffect(() => {\n    const getBookData = async () => {\n      const { data: bookData } = await supabase\n        .from<IBookProps>('books')\n        .select(`\n      id, quantity\n    `).eq('id', id);\n      if (bookData !== null) {\n        setData(bookData);\n        setQuantity(bookData[0]?.quantity ?? 0);\n      }\n    };\n    getBookData();\n  }, [id]);\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-100 shadow-md p-3 m-3 mx-6\">\n      <img\n        src={image}\n        alt=\"A book.\"\n        className=\"transform m-3 w-32\"\n      />\n      <div className=\"ml-2 w-full flex flex-col\">\n        {/* <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">{title}</span> */}\n        {title}\n        <span className=\"text-gray-400\">{authors?.join(' ')}</span>\n        <span className=\"text-gray-400\">{categories}</span>\n      </div>\n      <div>\n        <p>Quantity:</p>\n        <input\n          id=\"quantity\"\n          name=\"quantity\"\n          type=\"number\"\n          onChange={(event) => setQuantityInput(event.target.value)}\n        />\n        {data?.length !== 0 && (\n          <div>\n            <div className=\"bg-red-500 text-white\">In a stock: {quantity} </div>\n            <UpdateBook\n              id={id}\n              quantity={Number(quantityInput) + (quantity ?? 0)}\n              onQuantityUpdate={(q) => setQuantity(q)}\n            />\n          </div>\n        )}\n        {data?.length === 0 && (\n          <AddBook\n            id={id}\n            title={title}\n            authors={authors}\n            image={image}\n            description={description}\n            isbn={isbn}\n            publishedDate={publishedDate}\n            categories={categories}\n            quantity={Number(quantityInput)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StoreBook;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { IGoogleBooksAPIVolumes } from '../interfaces/IGoogleBooksAPIVolumes.interface';\nimport StoreBook from '../components/StoreBook';\n\nconst BookListViewAdminStore = () => {\n  const [dataAPI, setDataAPI] = useState<IGoogleBooksAPIVolumes>();\n  const [error, setError] = useState<boolean>();\n  const [filter, setFilter] = useState('book');\n  const formikFilter = useFormik({\n    initialValues: {\n      filter: '',\n    },\n    onSubmit: (values) => {\n      setFilter(values.filter);\n    },\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setError(false);\n        const res = await axios.get(`https://www.googleapis.com/books/v1/volumes?q=${filter}`);\n        setDataAPI(res.data);\n      } catch (e) {\n        setError(true);\n      }\n    };\n    fetchData();\n  }, [filter]);\n  return (\n    <div className=\"container mx-auto mt-3 shadow-inner\">\n      <form onSubmit={formikFilter.handleSubmit}>\n        <input\n          id=\"filter\"\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={formikFilter.handleChange}\n          className=\"input-pri mt-3 mx-6\"\n        />\n      </form>\n      <div>\n        {dataAPI && dataAPI?.items.map((book) => (\n          <StoreBook\n            key={book.id ?? 'N/D'}\n            id={book.id ?? 'N/D'}\n            title={book.volumeInfo.title ?? 'N/D'}\n            description={book.volumeInfo.description ?? 'N/D'}\n            publishedDate={book.volumeInfo.publishedDate ?? 'N/D'}\n            image={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : `${process.env.PUBLIC_URL}/image-not-found.png`}\n            authors={book.volumeInfo.authors}\n            categories={book.volumeInfo.categories ?? ['N/D']}\n            isbn={(book.volumeInfo.industryIdentifiers ? book.volumeInfo.industryIdentifiers[0].identifier : 'N/D')}\n          />\n        ))}\n        {error && <p className=\"text-red-600\">There was an error while trying to fetch data!</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default BookListViewAdminStore;\n","import React from 'react';\nimport {\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { IProfile } from '../interfaces/IProfile.interface';\nimport { isAdmin, isLoggedIn } from './UserContext';\n\ninterface IPrivateRouteProps {\n  path: string;\n  exact: boolean;\n  user: IProfile | null;\n}\n\nconst PrivateRoute: React.FC<IPrivateRouteProps> = ({ path, exact, user, children }) => {\n    if (!user && isLoggedIn()) {\n      return <div>Loading...</div>;\n    }\n\n    return isAdmin(user) ? (<Route path={path} exact={exact}> {children} </Route>)\n    : (<Redirect to=\"/\" />);\n  };\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { useLocation } from 'react-router';\n\nconst NoMatch404 = () => {\n  const location = useLocation();\n\n  return (\n    <div className=\"flex flex-col items-center w-full\">\n      <h1 className=\"text-9xl tracking-wider\">404</h1>\n      <h3 className=\"text-3xl\">\n        No match for path: <code className=\"font-black\">{location.pathname}</code>\n      </h3>\n    </div>\n  );\n};\n\nexport default NoMatch404;\n","import React, { FC } from 'react';\n\ninterface IAvatarProps {\n    url: string\n    className: string\n}\n\nconst Avatar: FC<IAvatarProps> = ({ url, className }) => {\n    return (\n      <img\n        className={`w-32 h-32 rounded-full object-cover ${className}`}\n        src={url}\n        alt=\"Zdjęcie użytkownika\"\n      />\n    );\n};\n\nexport default Avatar;\n","import React, { useEffect, useRef, useState } from 'react';\n// To jest nasze rozwiazanie - Cezary Bula 2021\n// eslint-disable-next-line\nimport FileType from 'file-type';\nimport supabase from '../utils/supabase';\nimport { getUserAvatarURL, useUser } from './UserContext';\nimport Avatar from './Avatar';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\n\nconst EditUserComponent = () => {\n    const usr: IBasicUserInfo | null = useUser();\n    const [fileInput] = useState(useRef<HTMLInputElement>(null));\n    const [status, setStatus] = useState<string>();\n    const [avatarLink, setAvatarLink] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      await getUserAvatarURL().then((data) => {\n        if (data?.signedURL) {\n          setAvatarLink(data?.signedURL);\n        }\n      });\n    })();\n  }, [avatarLink]);\n\n  const upload = async (f: File | undefined) => {\n    if (f === undefined) {\n      setStatus('File not found.');\n      return;\n    }\n    if (!usr || !usr.id) {\n      setStatus('Unknown user');\n      return;\n    }\n    // type checking\n    const type = await FileType.fromBuffer(await f.arrayBuffer());\n    if (type?.mime !== 'image/jpeg' && type?.mime !== 'image/png') {\n      setStatus('Invalid file type. Supported types: jpg, png.');\n      return;\n    }\n\n    setStatus('Uploading...');\n    await supabase\n      .storage.from('images')\n      .remove([`avatars/${usr?.id}`]);\n\n    supabase\n      .storage.from('images/avatars')\n      .upload(`${usr?.id}`, f)\n      .then(async (data) => {\n        if (data.error !== null) {\n          throw data.error;\n        }\n        setStatus('Upload successful.');\n        const avatarUrl = await getUserAvatarURL();\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript#other_types\n        if (avatarUrl?.signedURL) {\n          setAvatarLink(avatarUrl?.signedURL);\n        }\n      }).catch((error) => {\n        setStatus(`Upload error (${JSON.stringify(error)})`);\n      });\n  };\n\n  const onUploadButtonClickHandler = () => {\n    if (fileInput?.current?.files && fileInput?.current?.files.length > 0) {\n      upload(fileInput?.current?.files[0]);\n    } else {\n      setStatus('File not selected.');\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl\">Zmiana zdjęcia użytkownika</h1>\n      <div className=\"flex flex-wrap\">\n        <Avatar url={avatarLink} className=\"\" />\n        <div className=\"flex flex-col flex-wrap place-content-end m-2\">\n          <input type=\"file\" accept=\"image/jpeg, image/png\" ref={fileInput} required />\n          <div className=\"mt-4\">\n            <button type=\"button\" onClick={onUploadButtonClickHandler}>Upload file</button>\n            <div className=\"text-xs h-4\"><label className=\"text-gray-500\">Status: </label>{status}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUserComponent;\n","import ChangeAvatarComponent from './ChangeAvatarComponent';\n\nconst EditUserComponent = () => {\n    return (\n      <div className=\"m-4\">\n        <ChangeAvatarComponent />\n      </div>\n    );\n};\n\nexport default EditUserComponent;\n","import React, { useEffect, useState } from 'react';\nimport Avatar from '../components/Avatar';\nimport EditUserComponent from '../components/EditUserComponent';\nimport { getUserAvatarURL, useUser } from '../components/UserContext';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\nimport './UserpageView.css';\n// guard urla\n\nconst UserpageView = () => {\n  const usr: IBasicUserInfo | null = useUser();\n  const [avatarUrl, setAvatarLink] = useState('');\n  const styleBg = {\n    // eslint-disable-next-line max-len\n    backgroundImage: 'url(https://image.freepik.com/free-photo/hand-painted-watercolor-background-with-sky-clouds-shape_24972-1095.jpg)',\n  };\n\n  useEffect(() => {\n    (async () => {\n      await getUserAvatarURL().then((data) => {\n        if (data?.signedURL) {\n          setAvatarLink(data?.signedURL);\n        }\n      });\n    })();\n  }, []);\n\n  return (\n    <div className=\"container mx-auto mt-3\">\n      <div className=\"h-32 bg-gray-500 bg-no-repeat bg-center\" style={styleBg} />\n      <div className=\"mx-16 bg-white relative -top-4 z-30\">\n        <div className=\"shadow-md\">\n          <div className=\"flex flex-col md:flex-row\">\n            <div className=\"w-1/4 relative h-24\">\n              <Avatar url={avatarUrl} className=\"relative -top-16 left-2\" />\n            </div>\n            <div className=\"mt-2 w-1/2\">\n              <div className=\"flex uppercase\">\n                <div className=\"w-min md:mr-2 first-l\">{usr?.firstName}</div>\n                <div className=\"w-min first-l\">{usr?.lastName}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"p-2\">\n            <EditUserComponent />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserpageView;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Slide = ({ id = '', title = '', author = '', image = '' }) => {\n  return (\n    <Link to={`/book/${id}`} className=\"flex flex-col justify-center items-center text-center h-72 w-64 \">\n      <img src={image} alt={title} className=\"w-48 h-64 overflow-hidden\" />\n      {`${title}\\n`}\n      <span className=\"text-gray-500 text-sm\">{author}</span>\n    </Link>\n  );\n};\n\nexport default Slide;\n","import { useState, useEffect, FC } from 'react';\nimport Slide from './Slide';\n\ninterface ISliderProps {\n  entryCount: number;\n  entries: {\n    id: string;\n    title: string;\n    authors: string[];\n    image: string;\n  }[];\n}\n\nconst Slider: FC<ISliderProps> = ({ entryCount, entries }) => {\n  const [index, setIndex] = useState(0);\n  // eslint-disable-next-line\n  const [timer, setTimer] = useState<any>();\n  const delay = 2200;\n\n  useEffect(() => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    const newTimer = setTimeout(() => {\n      const changeIndex = () => {\n        if (index === entryCount - 1) return setIndex(0);\n        return setIndex((old) => old + 1);\n      };\n      changeIndex();\n    }, delay);\n    setTimer(newTimer);\n    // eslint-disable-next-line\n  }, [index]);\n\n  const changeSlide = (dir = 0) => {\n    const newIndex = index + dir;\n\n    if (newIndex >= entryCount) return setIndex(0);\n    if (newIndex <= -1) return setIndex(entryCount - 1);\n\n    return setIndex(newIndex);\n  };\n\n  return (\n    <div className=\"flex place-content-start mt-2 ml-6\">\n      <div className=\"flex flex-col items-center bg-gray-50 shadow p-2\">\n        <Slide\n          id={entries[index]?.id}\n          title={entries[index]?.title}\n          author={entries[index]?.authors?.join(' ')}\n          image={entries[index]?.image}\n        />\n        <div className=\"flex flex-row\">\n          <button\n            className=\"btn-page px-2\"\n            type=\"button\"\n            onClick={() => changeSlide(-1)}\n          >\n            ⮜\n          </button>\n          <div className=\"w-80\" />\n          <button\n            className=\"btn-page px-2\"\n            type=\"button\"\n            onClick={() => changeSlide(1)}\n          >\n            ⮞\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useEffect, useState } from 'react';\nimport Slider from '../components/Slider';\nimport { IBook } from '../interfaces/IBook.interface';\nimport { ISupplierBook } from '../interfaces/ISupplierBook.interface';\nimport supabase from '../utils/supabase';\n\nconst SliderDemo = () => {\n  const [data, setData] = useState<IBook[] | null>([]);\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const { data: books } = await supabase\n        .from<IBook>('books')\n        .select(`\n      *\n    `);\n      setData(books);\n    };\n    getAllBooks();\n  }, []);\n\n  if (data) {\n    return (\n      <Slider\n        entries={data?.map((book: ISupplierBook) => {\n          return {\n            id: book.id,\n            title: book.title,\n            authors: book.authors,\n            image: book.imageLinks[0],\n          };\n        })}\n        entryCount={data.length}\n      />\n    );\n  }\n  return <p>Loading...</p>;\n};\n\nexport default SliderDemo;\n","import React, { FC } from 'react';\nimport { IBook } from '../interfaces/IBook.interface';\nimport getBookImage from '../utils/utils';\nimport Rating from './Rating';\nimport './Book.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\ninterface IBookProps {\n  book: IBook;\n  returnDate: Date;\n  date: Date;\n}\n\nconst BorrowedBook: FC<IBookProps> = ({\n  book,\n  returnDate,\n  date,\n}) => {\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-50 shadow p-3 m-3 mx-6\">\n      <div className=\"m-3 flex justify-center flex-wrap flex-col\">\n        <div>\n          <img\n            src={getBookImage(book)}\n            alt={`Zdjecie okladki ${book.title ?? 'N/D'}`}\n            className=\"transform hover:scale-110 cursor-pointer w-32\n            transition duration-400 ease-in-out hover:-translate-y-1\"\n          />\n        </div>\n      </div>\n      <div className=\"ml-2 mb-4 md:mb-0 w-full\">\n        <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">\n          {book.title ?? 'N/D'}\n        </span>\n        <div className=\"text-gray-400 flex flex-col\">\n          <span>{book.authors?.join(' ') ?? 'N/D'}</span>\n          <span>{book.categories ?? 'N/D'}</span>\n          <div className=\"overflow-hidden max-h-20 book-desc\">{book.description ?? 'N/D'}</div>\n          <div className=\"flex h-4 mt-2\">\n            <Rating votesAmount={book.votesAmount} avgRating={book.avgRating} bare />\n          </div>\n        </div>\n        <p className=\"text-right\">Date: {date}</p>\n        <p className=\"text-right\">Return date: {returnDate}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BorrowedBook;\n","import React, { useState, useEffect } from 'react';\nimport supabase from '../utils/supabase';\nimport { useUser } from '../components/UserContext';\nimport { IBook } from '../interfaces/IBook.interface';\nimport BorrowedBook from '../components/BorrowedBook';\n\ninterface IBookProfileId {\n  book: IBook;\n  date: Date;\n  returnDate: Date;\n  profileId: string | undefined;\n}\nconst BorrowedBooksView = () => {\n  const [info, setInfo] = useState<null | IBookProfileId[]>([]);\n  const loggedUser = useUser();\n\n  useEffect(() => {\n    const getBorrowedBooks = async () => {\n      const { data } = await supabase\n        .from<IBookProfileId>('borrowedBooks')\n        .select('date, returnDate, book:books(*)')\n        .eq('profileId', loggedUser?.id);\n      if (data !== null) {\n        setInfo(data);\n      }\n    };\n    getBorrowedBooks();\n  }, [loggedUser]);\n\n  return (\n    <div className=\"container mx-auto mt-3 py-1 shadow-inner\">\n      {info && info?.map((book) => (\n        <BorrowedBook key={book.book.id} book={book.book} returnDate={book.returnDate} date={book.date} />\n      ))}\n      {info && info?.length < 1 && (\n        <div> NIE MA </div>\n      )}\n    </div>\n  );\n};\n\nexport default BorrowedBooksView;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport BookListView from '../views/BookListView';\nimport Navigation from './Navigation';\nimport BookInfoPage from '../views/BookInfoView';\nimport BookListViewAdminOwned from '../views/BookListViewAdminOwned';\nimport BookListViewAdminStore from '../views/BookListViewAdminStore';\nimport PrivateRoute from './PrivateRoute';\nimport { useUser } from './UserContext';\nimport useUserInfo from '../hooks/useUserInfo';\nimport NoMatch404 from './NoMatch404';\nimport UserpageView from '../views/UserpageView';\nimport SliderDemo from '../views/SliderDemo';\nimport BorrowedBooksView from '../views/BorrowedBooksView';\n\nconst AddRouter = () => {\n  const loggedUser = useUser();\n  const userInfo = useUserInfo(loggedUser?.id ?? null);\n\n  return (\n    <div className=\"h-full\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <header className=\"sticky top-0 w-full h-10 z-50\">\n          <Navigation />\n        </header>\n        <Switch>\n          <Route path=\"/internships-2021\" exact>\n            <Redirect to=\"/\" />\n          </Route>\n          <Route path=\"/\" exact>\n            <SliderDemo />\n          </Route>\n          <Route path=\"/user\" exact>\n            <UserpageView />\n          </Route>\n          <Route path=\"/user/books\" exact>\n            <BorrowedBooksView />\n          </Route>\n          <PrivateRoute path=\"/admin/owned\" exact user={userInfo}>\n            <BookListViewAdminOwned />\n          </PrivateRoute>\n          <PrivateRoute path=\"/admin/store\" exact user={userInfo}>\n            <BookListViewAdminStore />\n          </PrivateRoute>\n          <Route path=\"/books-list\" exact>\n            <Redirect to=\"/books-list/*/0\" />\n          </Route>\n          <Route path=\"/books-list/:q?/:rating?\">\n            <BookListView />\n          </Route>\n          <Route path=\"/book/:id\" exact>\n            <BookInfoPage />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch404 />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default AddRouter;\n","import { UserProvider } from './UserContext';\nimport AddRouter from './Router';\n\nconst App = () => {\n  return (\n    <UserProvider>\n      <AddRouter />\n    </UserProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Slide, ToastContainer } from 'react-toastify';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastContainer\n      position=\"top-right\"\n      transition={Slide}\n      autoClose={6000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n    />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}