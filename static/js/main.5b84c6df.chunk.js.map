{"version":3,"sources":["utils/supabase.ts","components/UserContext.tsx","utils/utils.ts","components/SVGRatingIcon.tsx","components/Rating.tsx","components/BorrowBook.tsx","components/Book.tsx","components/Sidebar.tsx","views/BookListView.tsx","components/ModalDialog.tsx","components/LoginButton.tsx","components/UserDropdown.tsx","components/RegisterButton.tsx","hooks/useUserInfo.ts","components/Navigation.tsx","components/SpecificationTable.tsx","components/Tablist.tsx","components/BookInfo.tsx","views/BookInfoView.tsx","components/DeleteBook.tsx","components/OwnedBook.tsx","components/SidebarAdmin.tsx","views/BookListViewAdminOwned.tsx","components/UpdateBook.tsx","components/AddBook.tsx","components/StoreBook.tsx","views/BookListViewAdminStore.tsx","components/PrivateRoute.tsx","components/NoMatch404.tsx","components/Avatar.tsx","components/ChangeAvatarComponent.tsx","components/EditUserComponent.tsx","views/UserpageView.tsx","components/Slide.tsx","components/Slider.tsx","views/SliderDemo.tsx","components/BorrowedBook.tsx","views/BorrowedBooksView.tsx","components/Router.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["supabaseUrl","String","process","supabaseKey","supabase","createClient","UserContext","React","createContext","UserUpdateContext","loggedUser","auth","user","isAdmin","useUser","useContext","useUserUpdate","getUserAvatarURL","a","undefined","storage","from","createSignedUrl","id","UserProvider","children","useState","firstName","lastName","email","avatarUrl","setUser","Provider","value","newUser","DefaultImageUrl","getBookImage","book","imageLinks","length","featuredImageId","SVGRatingIcon","urlBlank","urlFull","fillingPercent","fullIconStyle","clipPath","className","src","alt","style","RatingIconURL","RatingIconFilledURL","Rating","bare","votesAmount","avgRating","icons","scoreRemaining","i","push","Math","floor","max","min","round","BorrowBook","bookId","profileId","date","returnDate","AddOrNotify","insert","toast","warn","toastId","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","type","onClick","Book","to","title","authors","join","categories","description","Date","setMonth","getMonth","Sidebar","setValue","query","setQuery","toggle","setToggled","history","useHistory","htmlFor","placeholder","onChange","event","target","defaultValue","Number","replace","BookListView","data","setData","params","useParams","rating","useEffect","q","select","ilike","gte","books","getAllBooks","map","ModalDialog","okButtonLabel","onVisibilityChange","onOkButtonClick","LoginButton","loginModalShown","setLoginModalShown","status","setStatus","formikLogin","useFormik","initialValues","emailAdress","password","onSubmit","values","signIn","error","message","signedURL","checkEmail","eq","submitForm","handleSubmit","name","handleChange","onBlur","UserDropdown","items","logOut","open","setOpen","item","link","label","RegisterButton","modalVisibility","setModalVisibility","formikRegister","signUp","then","resp","statusText","useUserInfo","getUser","Navigation","userInfo","setItems","signOut","SpecificationTable","tableRows","key","Tablist","tabs","defaultTab","currTabID","setCurrTabID","tabTitleElements","gridTemplateRows","content","BookInfo","publishedDate","isbn","specsTabList","tabList","window","scrollTo","enlarged","setEnlarged","BookInfoPage","setBook","DeleteBook","onBookDelete","modal","setModal","err","setErr","Delete","delete","match","OwnedBook","image","quantity","SidebarAdmin","BookListViewAdmin","dataSupabase","setDataSupabase","UpdateBook","onQuantityUpdate","Update","update","AddBook","globalUser","addToStore","random","addedById","addedDate","StoreBook","quantityInput","setQuantityInput","setQuantity","bookData","getBookData","BookListViewAdminStore","dataAPI","setDataAPI","setError","filter","setFilter","formikFilter","axios","get","res","fetchData","volumeInfo","thumbnail","industryIdentifiers","identifier","PrivateRoute","path","exact","NoMatch404","location","useLocation","pathname","Avatar","url","EditUserComponent","usr","useRef","fileInput","avatarLink","setAvatarLink","upload","f","FileType","arrayBuffer","fromBuffer","mime","remove","catch","JSON","stringify","accept","ref","required","current","files","ChangeAvatarComponent","UserpageView","backgroundImage","Slide","author","Slider","entryCount","entries","index","setIndex","timer","setTimer","clearTimeout","newTimer","setTimeout","old","changeSlide","dir","newIndex","SliderDemo","BorrowedBook","BorrowedBooksView","info","setInfo","getBorrowedBooks","AddRouter","basename","BookListViewAdminOwned","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","transition","newestOnTop","rtl","pauseOnFocusLoss","document","getElementById"],"mappings":"sPAEMA,EAAcC,OAAOC,4CACrBC,EAAcF,OAAOC,uJACdE,EAAWC,YAAaL,EAAaG,GAInCC,I,OCHTE,EAAcC,IAAMC,cAAqC,MACzDC,EAAoBF,IAAMC,cAA0D,MACpFE,EAAU,UAAGN,EAASO,KAAKC,cAAjB,QAA2B,KAE9BC,EAAU,SAACD,GACtB,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAMC,SAOFC,EAAU,WACrB,OAAOC,qBAAWT,IAGPU,EAAgB,WAC3B,OAAOD,qBAAWN,IAGPQ,EAAgB,uCAAG,sBAAAC,EAAA,yDACzBR,EADyB,8CAErBS,GAFqB,gCAIvBf,EACJgB,QACAC,KAAK,kBACLC,gBAHI,iBAGeZ,QAHf,IAGeA,OAHf,EAGeA,EAAYa,IAAM,QAPV,2CAAH,qDAUhBC,EAAmB,SAAC,GAAkB,IAAD,IAAfC,EAAe,EAAfA,SACjC,EAAwBC,mBAAyB,CAC/CH,GAAE,iBAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAYa,UAAd,QAAoB,GACtBI,UAAW,GACXC,SAAU,GACVC,MAAK,iBAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAYmB,aAAd,QAAuB,GAC5BC,UAAW,KALb,mBAAOlB,EAAP,KAAamB,EAAb,KAYA,OACE,cAACzB,EAAY0B,SAAb,CAAsBC,MAAOrB,EAA7B,SACE,cAACH,EAAkBuB,SAAnB,CAA4BC,MANb,SAACC,GAClBH,EAAQG,IAKN,SACGT,O,cCjDHU,EAAe,UAAMjC,oBAAN,wBAEN,SAASkC,EAAaC,GAAsB,IAAD,EACxD,OAAQ,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMC,kBAAN,eAAkBC,SAAUF,EAAKG,gBAAwBL,EACtDE,EAAKC,WAAWD,EAAKG,iBCE9B,IA6BeC,EA7B+B,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAC5DC,EAAgB,CACpBC,SAAS,gBAAD,OAAkBF,EAAlB,gBAAwCA,EAAxC,oBAGV,OACE,qBAAKG,UAAU,gBAAf,SACsB,MAAnBH,EAAyB,qBAAKI,IAAKL,EAASM,IAAI,sBAAsBF,UAAU,kBAC/E,sBAAKA,UAAU,6CAAf,UACsB,IAAnBH,GAED,qBACEI,IAAKL,EACLO,MAAOL,EACPI,IAAI,qBACJF,UAAU,8DAGZ,qBACEC,IAAKN,EACLO,IAAI,qBACJF,UAAU,oECxBhBI,EAAa,UAAMjD,oBAAN,0BACbkD,EAAmB,UAAMlD,oBAAN,mBAkCVmD,EA1BiB,SAAC,GAK/B,IALqE,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC9CC,EAAQ,GAGVC,EAAkBF,EAdO,GAcwB,IAC5CG,EAAI,EAAGA,EAhBE,EAgBeA,IAC/BF,EAAMG,KAAK,cAAC,EAAD,CAETlB,SAAUS,EACVR,QAASS,EACTR,eAAgBiB,KAAKC,MAAMD,KAAKE,IAAI,EAAGF,KAAKG,IAAI,IArBlC,EAqBuCN,MAHhDC,IAKPD,GAVmB,GAarB,OACE,sBAAKX,UAAU,sDAAf,UACE,qBAAKA,UAAU,qCAAf,SACGU,KAEDH,GAAQ,uBAAMP,UAAU,6BAAhB,mCAA4DQ,MACpED,GAAQ,uBAAMP,UAAU,6BAAhB,4BAA6Dc,KAAKI,MAAkB,IAAZT,GAAmB,WCK5FU,G,YAnCqB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACxDC,EAAW,uCAAG,sBAAArD,EAAA,0DACdd,EAASO,KAAKC,OADA,gCAEVR,EAASiB,KAAkB,iBAAiBmD,OAAO,CACvDL,SACAC,YACAC,OACAC,eANc,6BAShBG,IAAMC,KAAK,0CAA2C,CACpDC,QAAS,sBACTC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU/D,IAjBI,2CAAH,qDAqBjB,OACE,8BACE,wBACEgE,KAAK,SACLpC,UAAU,WACVqC,QAASb,EAHX,+BC0BSc,EAzCc,SAAC,GAEvB,IAAD,YADJhD,EACI,EADJA,KAEM3B,EAAaI,IACnB,OACE,sBAAKiC,UAAU,qGAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,IAAD,CAAMuC,GAAE,gBAAWjD,EAAKd,IAAxB,SACE,qBACEyB,IAAKZ,EAAaC,GAClBY,IAAG,oCAAqBZ,EAAKkD,aAA1B,QAAmC,OACtCxC,UAAU,+GAKhB,sBAAKA,UAAU,2BAAf,UACE,sBAAMA,UAAU,qFAAhB,SACE,cAAC,IAAD,CAAMuC,GAAE,gBAAWjD,EAAKd,IAAxB,mBAA+Bc,EAAKkD,aAApC,QAA6C,UAE/C,sBAAKxC,UAAU,8BAAf,UACE,mDAAOV,EAAKmD,eAAZ,aAAO,EAAcC,KAAK,YAA1B,QAAkC,QAClC,yCAAOpD,EAAKqD,kBAAZ,QAA0B,QAC1B,qBAAK3C,UAAU,qCAAf,mBAAqDV,EAAKsD,mBAA1D,QAAyE,QACzE,qBAAK5C,UAAU,gBAAf,SACE,cAAC,EAAD,CAAQQ,YAAalB,EAAKkB,YAAaC,UAAWnB,EAAKmB,UAAWF,MAAI,YAI5E,8BACE,cAAC,EAAD,CACEa,OAAQ9B,EAAKd,GACb6C,UAAS,OAAE1D,QAAF,IAAEA,OAAF,EAAEA,EAAYa,GACvB8C,KAAM,IAAIuB,KACVtB,WAAY,IAAIsB,MAAK,IAAIA,MAAOC,UAAS,IAAID,MAAOE,WAAa,YCuC5DC,EApFC,WACd,MAA0BrE,mBAAS,GAAnC,mBAAOO,EAAP,KAAc+D,EAAd,KACA,EAA0BtE,mBAAS,KAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KAQA,EAA6BxE,oBAAS,GAAtC,mBAAOyE,EAAP,KAAeC,EAAf,KACMC,EAAUC,cAEhB,OACE,sBAAKvD,UAAU,gCAAf,UACE,qBAAKA,UAAS,+BAA0BoD,EAAS,SAAW,mBAA5D,SACE,wBACEhB,KAAK,SACLpC,UAAU,wBACVqC,QAAS,kBAAMgB,GAAYD,IAH7B,sBAQF,qBACEpD,UAAS,mMAC+DoD,EAAS,SAAW,mBAF9F,SAIE,sBAAKpD,UAAU,8FAAf,UACE,qBAAKA,UAAU,2DAAf,qBAGA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,uBAAOwD,QAAQ,YAAYxD,UAAU,OAArC,oBACA,uBACEoC,KAAK,OACLqB,YAAY,kBACZjF,GAAG,YACHwB,UAAU,4HAEV0D,SAnCY,SAACC,GAAgD,IAAD,IACpEzG,OAAM,OAACyG,QAAD,IAACA,GAAD,UAACA,EAAOC,cAAR,aAAC,EAAe1E,OAAOM,OAAS,EAAG2D,EAASjG,OAAM,OAACyG,QAAD,IAACA,GAAD,UAACA,EAAOC,cAAR,aAAC,EAAe1E,QACvEiE,EAAS,WAoCN,qBAAKnD,UAAU,+CAAf,SACE,qBAAIA,UAAU,YAAd,UACE,yCACA,gEACA,4DACA,uDACA,wCACA,sDACA,4CAGJ,sBAAKA,UAAU,+CAAf,UACE,uBAAOoC,KAAK,QAAQnB,IAAI,IAAID,IAAI,KAAK6C,aAAa,IAAIH,SArDxC,SAACC,GAAgD,IAAD,EACxEV,EAASa,OAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAOC,cAAR,aAAC,EAAe1E,WAqDrB,sBAAMc,UAAU,OAAOxB,GAAG,QAA1B,SAAmCU,EAAQ,EAAIA,EAAQ,WAEzD,qBAAKc,UAAU,yEAAf,SACE,wBACEA,UAAU,iBACVoC,KAAK,SACLC,QAAS,kBAAMiB,EAAQS,QAAR,sBAA+Bb,EAA/B,YAAwChE,KAHzD,8BAWR,qBAAKc,UAAS,sBAAiBoD,EAAS,QAAU,UAAlD,SACE,wBACEhB,KAAK,SACLpC,UAAU,wBACVqC,QAAS,WAAQgB,GAAYD,IAH/B,0BC7BOY,EAlCM,WACnB,MAAwBrF,mBAAyB,IAAjD,mBAAOsF,EAAP,KAAaC,EAAb,KACMC,EAAkBC,cAChBC,EAAWF,EAAXE,OAgBR,OAfAC,qBAAU,WAAO,IAAD,GACJ,OAANH,QAAM,IAANA,GAAA,UAAAA,EAAQI,SAAR,eAAW/E,QAAS,IAAG2E,EAAOI,EAAI,KACrB,uCAAG,gCAAApG,EAAA,6DACZoG,EADY,WACJJ,EAAOI,EAAIJ,EAAOI,EAAI,IADlB,cAEYlH,EAC3BiB,KAAY,SACZkG,OAAO,KACPC,MAAM,QAASF,GACfG,IAAI,YAAaL,GANF,gBAOJ,QALAM,EAFI,EAEVV,OAMNC,EAAQS,GARQ,2CAAH,oDAWjBC,KACC,CAACT,EAAQE,IAEV,sBAAKrE,UAAU,oBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACGiE,IAAI,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMY,KAAI,SAACvF,GAAD,OACjB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKd,QAEjByF,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMzE,QAAS,GACtB,qBAAKQ,UAAU,6BAAf,+B,QCTK8E,EArB4B,SAAC,GAA6E,IAA3EtC,EAA0E,EAA1EA,MAAOuC,EAAmE,EAAnEA,cAAeC,EAAoD,EAApDA,mBAAoBC,EAAgC,EAAhCA,gBAAiBvG,EAAe,EAAfA,SACvG,OACE,qBAAKsB,UAAU,6FAAf,SACE,sBAAKA,UAAU,kFAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BwC,IAC3B,wBAAQJ,KAAK,SAASC,QAAS,kBAAM2C,KAAsBhF,UAAU,WAArE,kBAIF,8BACGtB,IAEH,wBAAQ0D,KAAK,SAASpC,UAAU,WAAWqC,QAAS,kBAAM4C,KAA1D,SACGF,UCqFIG,EArGK,WAClB,IAAMlG,EAAUf,IAChB,EAA8CU,oBAAS,GAAvD,mBAAOwG,EAAP,KAAwBC,EAAxB,KACA,EAA4BzG,qBAA5B,mBAAO0G,EAAP,KAAeC,EAAf,KAEMC,EAAcC,YAAU,CAC5BC,cAAe,CACbC,YAAa,GACbC,SAAU,IAEZC,SAAS,WAAD,4BAAE,WAAOC,GAAP,yBAAA1H,EAAA,sEACsBd,EAASO,KAAKkI,OAAO,CACjDhH,MAAO+G,EAAOH,YACdC,SAAUE,EAAOF,WAHX,mBACA9H,EADA,EACAA,OAAMkI,EADN,EACMA,OADN,uBAMNT,EAAUS,EAAMC,SANV,8BAUJnI,IAAQmB,EAVJ,6BAYNA,EAZM,YAaAnB,QAbA,IAaAA,OAbA,EAaAA,EAAMW,GAbN,sBAgBGX,QAhBH,IAgBGA,OAhBH,EAgBGA,EAAMiB,aAhBT,QAgBkB,WAhBlB,UAiBcZ,IAjBd,2JAiBO,EAA4B+H,UAjBnC,+JAkBI9I,oBAlBJ,iDAaJqB,GAbI,KAcJI,UAAW,UACXC,SAAU,UACVC,MAhBI,KAiBJC,UAjBI,sBAoBNqG,GAAoBD,GACpBG,EAAU,IArBJ,4CAAF,mDAAC,KA0BLY,EAAU,uCAAG,8BAAA/H,EAAA,sEACMd,EACpBiB,KAAqB,YACrBkG,OAAO,SACP2B,GAAG,QAASZ,EAAYM,OAAOH,aAJjB,iBAKb,QAJIzB,EADS,EACTA,YAIJ,IAACA,OAAD,EAACA,EAAMzE,SACT8F,EAAU,8CANK,2CAAH,qDAUhB,OACE,gCACE,qBAAKtF,UAAU,6BAAf,SACE,wBACEoC,KAAK,SACLC,QAAS,kBAAM+C,GAAoBD,IAFrC,uBAODA,GACC,cAAC,EAAD,CACE3C,MAAM,QACNuC,cAAc,UACdE,gBAAiB,kBAAMM,EAAYa,cACnCpB,mBAAoB,kBAAMI,GAAoBD,IAJhD,SAME,uBAAMS,SAAUL,EAAYc,aAA5B,UACE,sBAAKrG,UAAU,uBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOwD,QAAQ,eAAexD,UAAU,gBAAxC,2BACA,uBACExB,GAAG,cACH8H,KAAK,cACLlE,KAAK,QACLqB,YAAY,eACZC,SAAU6B,EAAYgB,aACtBC,OAAQN,EACRhH,MAAOqG,EAAYM,OAAOH,YAC1B1F,UAAU,iBAGd,qBAAKA,UAAU,oCAAf,SACE,gCACE,uBAAOwD,QAAQ,WAAWxD,UAAU,gBAApC,uBACA,uBACExB,GAAG,WACH8H,KAAK,WACLlE,KAAK,WACLqB,YAAY,WACZC,SAAU6B,EAAYgB,aACtBrH,MAAOqG,EAAYM,OAAOF,SAC1B3F,UAAU,sBAKlB,mBAAGA,UAAU,oBAAb,SAAkCqF,aC/B/BoB,EAvD6B,SAAC,GAA8B,IAA5BjE,EAA2B,EAA3BA,MAAOkE,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC3D,EAAwBhI,oBAAS,GAAjC,mBAAOiI,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAK7G,UAAU,uBAAf,UACE,wBACEoC,KAAK,SACLpC,UAAU,gCACVqC,QAAS,kBAAMwE,GAASD,IAH1B,SAKGpE,IAGFoE,GACC,qCACE,qBACE5G,UAAU,sGACVqC,QAAS,kBAAMwE,GAASD,IAF1B,kBAMA,sBACE5G,UAAU,kMADZ,UAIG0G,EAAM7B,KAAI,SAACiC,GAAD,OACT,qBAAK9G,UAAU,wDAAf,SACE,wBAAQoC,KAAK,SAAb,SACE,cAAC,IAAD,CACEG,GAAE,UAAKuE,EAAKC,MACZ/G,UAAU,2EAFZ,SAIG8G,EAAKE,eAMd,qBAAKhH,UAAU,YAAf,SACE,wBACEoC,KAAK,SACLC,QAASsE,EACT3G,UAAU,2EAHZ,gCC0ECiH,EAzHQ,WACrB,MAA8CtI,oBAAS,GAAvD,mBAAOuI,EAAP,KAAwBC,EAAxB,KACA,EAA4BxI,qBAA5B,mBAAO0G,EAAP,KAAeC,EAAf,KACM8B,EAAiB5B,YAAU,CAC/BC,cAAe,CACbC,YAAa,GACbC,SAAU,GACV/G,UAAW,GACXC,SAAU,IAEZ+G,SAAS,WAAD,4BAAE,WAAOC,GAAP,mBAAA1H,EAAA,sEACsBd,EAASO,KAAKyJ,OAAO,CACjDvI,MAAO+G,EAAOH,YACdC,SAAUE,EAAOF,WAHX,mBACA9H,EADA,EACAA,OAAMkI,EADN,EACMA,OADN,uBAMNT,EAAUS,EAAMC,SANV,8BASJnI,EATI,kCAUAR,EAASiB,KAAqB,YAAYmD,OAAO,CACrDjD,GAAIX,EAAKW,GACTI,UAAWiH,EAAOjH,UAClBC,SAAUgH,EAAOhH,SACjBC,MAAO+G,EAAOH,cACb4B,MAAK,SAACC,GACPjC,EAAUiC,EAAKC,eAhBX,QAkBNL,GAAoBD,GAlBd,4CAAF,mDAAC,KAsBLhB,EAAU,uCAAG,8BAAA/H,EAAA,sEACMd,EACpBiB,KAAqB,YACrBkG,OAAO,SACP2B,GAAG,QAASiB,EAAevB,OAAOH,aAJpB,iBAKb,QAJIzB,EADS,EACTA,YAIJ,IAACA,OAAD,EAACA,EAAMzE,SACT8F,EAAU,8DANK,2CAAH,qDAUhB,OACE,gCACE,qBAAKtF,UAAU,iCAAf,SACE,wBACEoC,KAAK,SACLC,QAAS,kBAAM8E,GAAoBD,IAFrC,uBAMDA,GAEG,cAAC,EAAD,CACE1E,MAAM,WACNuC,cAAc,UACdE,gBAAiB,kBAAMmC,EAAehB,cACtCpB,mBAAoB,kBAAMmC,GAAoBD,IAJhD,SAME,uBAAMtB,SAAUwB,EAAef,aAA/B,UACE,sBAAKrG,UAAU,uBAAf,UACE,gCACE,uBAAOwD,QAAQ,YAAYxD,UAAU,gBAArC,yBACA,uBACExB,GAAG,YACH8H,KAAK,YACLlE,KAAK,OACLqB,YAAY,aACZC,SAAU0D,EAAeb,aACzBrH,MAAOkI,EAAevB,OAAOjH,UAC7BoB,UAAU,iBAGd,gCACE,uBAAOwD,QAAQ,WAAWxD,UAAU,gBAApC,wBACA,uBACExB,GAAG,WACH8H,KAAK,WACLlE,KAAK,OACLqB,YAAY,YACZC,SAAU0D,EAAeb,aACzBrH,MAAOkI,EAAevB,OAAOhH,SAC7BmB,UAAU,oBAIhB,sBAAKA,UAAU,uBAAf,UACE,gCACE,uBAAOwD,QAAQ,eAAexD,UAAU,gBAAxC,2BACA,uBACExB,GAAG,cACH8H,KAAK,cACLlE,KAAK,QACLqB,YAAY,eACZC,SAAU0D,EAAeb,aACzBC,OAAQN,EACRhH,MAAOkI,EAAevB,OAAOH,YAC7B1F,UAAU,iBAGd,gCACE,uBAAOwD,QAAQ,WAAWxD,UAAU,gBAApC,uBACA,uBACExB,GAAG,WACH8H,KAAK,WACLlE,KAAK,WACLqB,YAAY,WACZC,SAAU0D,EAAeb,aACzBrH,MAAOkI,EAAevB,OAAOF,SAC7B3F,UAAU,oBAIhB,mBAAGA,UAAU,oBAAb,SAAkCqF,aC7FjCoC,EAtBK,SAACjJ,GAAuB,IAAD,EACzC,EAAwBG,qBAAxB,mBAAOsF,EAAP,KAAaC,EAAb,KAcA,OAbAI,qBAAU,WACH9F,GACQ,uCAAG,8BAAAL,EAAA,sEACed,EAC1BiB,KAAe,YACfkG,OAF0B,mBAI5B2B,GAAG,KAAM3H,GALI,gBACAX,EADA,EACNoG,KAKRC,EAAQrG,GANM,2CAAH,oDAQb6J,KACC,CAAClJ,KAEI,OAAJyF,QAAI,IAAJA,GAAA,UAAAA,EAAO,UAAP,eAAWzF,MAAOA,EACb,KAGFA,EAAE,OAAGyF,QAAH,IAAGA,OAAH,EAAGA,EAAO,GAAK,MCkFX0D,EAhGI,WAAO,IAAD,EACjBhK,EAAaI,IAEbiB,EAAUf,IAChB,EAA6BU,oBAAS,GAAtC,mBAAOyE,EAAP,KAAeC,EAAf,KACMC,EAAUC,cACVqE,EAAWH,EAAW,iBAAC9J,QAAD,IAACA,OAAD,EAACA,EAAYa,UAAb,QAAmB,MAC/C,EAA0BG,mBAAS,CAAC,CAAEoI,KAAM,QAASC,MAAO,gBAAkB,CAAED,KAAM,cAAeC,MAAO,gBAA5G,mBAAON,EAAP,KAAcmB,EAAd,KAEAvD,qBAAU,WACJxG,EAAQ8J,GACVC,EAAS,CAAC,CAAEd,KAAM,QAASC,MAAO,gBAAkB,CAAED,KAAM,cAAeC,MAAO,cAClF,CAAED,KAAM,eAAgBC,MAAO,SAAW,CAAED,KAAM,eAAgBC,MAAO,WAEzEa,EAAS,CAAC,CAAEd,KAAM,QAASC,MAAO,gBAAkB,CAAED,KAAM,cAAeC,MAAO,kBAEnF,CAACY,IAgBJ,OACE,qBAAK5H,UAAU,sCAAf,SACE,sBAAKA,UAAU,yEAAf,UACE,sBAAKA,UAAU,oCAAf,UACE,cAAC,IAAD,CAAMuC,GAAG,IAAT,SACE,8BACE,sBAAMvC,UAAU,2DAAhB,uBAKJ,wBACEoC,KAAK,SACLpC,UAAU,sJAEVqC,QAAS,kBAAMgB,GAAYD,IAJ7B,uBAUF,qBAAKpD,UAAWoD,EAAS,6BAA+B,+BAAxD,SACE,sBAAKpD,UAAU,iDAAf,UACE,wBACEoC,KAAK,SACLpC,UAAU,6BAFZ,SAIE,cAAC,IAAD,CACEuC,GAAG,IADL,oBAOF,wBACEH,KAAK,SACLpC,UAAU,6BAFZ,SAIE,cAAC,IAAD,CACEuC,GAAG,cADL,yBbjELlF,EAASO,KAAKC,OayET,cAAC,EAAD,CACE2E,MAAK,OAAE7E,QAAF,IAAEA,OAAF,EAAEA,EAAYmB,MACnB4H,MAAOA,EACPC,OA/DC,WACT3H,GACFA,EAAQ,CACNR,GAAI,GACJI,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,UAAW,KAGf1B,EAASO,KAAKkK,UACdxE,EAAQzC,KAAK,QAuDH,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,kBCnEDkH,EAjBkC,SAAC,GAEhD,IAF+D,IAAbrB,EAAY,EAAZA,MAC5CsB,EAAY,GACTpH,EAAI,EAAGA,EAAI8F,EAAMlH,OAAQoB,IAC9BoH,EAAUnH,KACR,sBAAKb,UAAU,+DAAf,UACE,qBAAKA,UAAU,kDAAf,SAAkE0G,EAAM9F,GAAGqH,MAC3E,qBAAKjI,UAAU,gBAAf,SAAgC0G,EAAM9F,GAAG1B,YAIjD,OACE,8BACG8I,KCqBQE,EApCoB,SAAC,GAQlC,IAR4D,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAC1C,EAAkCzJ,mBAASyJ,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAmB,GAPkC,WAQlD3H,GACP2H,EAAiB1H,KACf,wBACEuB,KAAK,SACLpC,UAAU,yEACVqC,QAAS,WATbiG,EASoC1H,IAHlC,SAKGuH,EAAKvH,GAAG4B,UAPN5B,EAAI,EAAGA,EAAIuH,EAAK3I,OAAQoB,IAAM,EAA9BA,GAaT,OACE,sBACEZ,UAAU,gEACVG,MAAO,CAAEqI,iBAAkB,oBAF7B,UAIE,qBAAKxI,UAAU,gCAAf,SACGuI,IAEH,qBAAKvI,UAAU,aAAf,SACGmI,EAAKE,GAAWI,cC+DVC,EAxFsB,SAAC,GAAc,IAAD,QAAXpJ,EAAW,EAAXA,KACtC,EAAuBX,mBAAS,CAAC,CAC/BsJ,IAAK,cACL/I,MAAOI,EAAKqJ,eACX,CACDV,IAAK,KACL/I,MAAOI,EAAKd,IACX,CACDyJ,IAAK,QACL/I,MAAOI,EAAKkD,OACX,CACDyF,IAAK,OACL/I,MAAOI,EAAKsJ,MACX,CACDX,IAAK,UACL/I,MAAK,UAAEI,EAAKmD,eAAP,aAAE,EAAcC,KAAK,OACzB,CACDuF,IAAK,YACL/I,MAAK,UAAEI,EAAKqD,kBAAP,aAAE,EAAiBD,KAAK,SAjBxBmG,EAAP,oBAoBA,EAAkBlK,mBAAS,CAAC,CAC1B6D,MAAO,oBACPiG,QACF,qBAAKzI,UAAU,iCAAf,SACE,cAAC,EAAD,CAAoB0G,MAAOmC,SAJtBC,EAAP,oBAQAxE,qBAAU,WACRyE,OAAOC,SAAS,EAAG,KAClB,IAEH,MAAgCrK,oBAAS,GAAzC,mBAAOsK,EAAP,KAAiBC,EAAjB,KACMvL,EAAaI,IAEnB,OACE,sBAAKiC,UAAU,sBAAf,UACE,sBAAKA,UAAU,oEAAf,UACE,qBAAKA,UAAU,kEAAf,SACE,qBACEqC,QAAS,kBAAM6G,GAAY,IAC3BjJ,IAAKX,EAAKC,WAAW,GACrBW,IAAI,UACJF,UAAU,6JAKd,sBAAKA,UAAU,+CAAf,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAMA,UAAU,UAAhB,SAA2BV,EAAKkD,QADlC,IACgD,uBAC9C,sBAAKxC,UAAU,OAAf,UACE,qBAAKA,UAAU,sBAAf,mBAAsCV,EAAKqD,kBAA3C,aAAsC,EAAiBD,KAAK,QAC5D,qBAAK1C,UAAU,iCAAf,mBAAiDV,EAAKmD,eAAtD,aAAiD,EAAcC,KAAK,WAEtE,qBAAK1C,UAAU,2CAAf,SACGV,EAAKsD,iBAGV,sBAAK5C,UAAU,yBAAf,UACE,cAAC,EAAD,CAAQO,MAAM,EAAOC,YAAalB,EAAKkB,YAAaC,UAAWnB,EAAKmB,YACpE,cAAC,EAAD,CACEW,OAAQ9B,EAAKd,GACb6C,UAAS,OAAE1D,QAAF,IAAEA,OAAF,EAAEA,EAAYa,GACvB8C,KAAM,IAAIuB,KACVtB,WAAY,IAAIsB,MAAK,IAAIA,MAAOC,UAAS,IAAID,MAAOE,WAAa,eAKzE,qBAAK/C,UAAU,8BAAf,SACE,cAAC,EAAD,CAASmI,KAAMW,EAASV,WAAY,MAErCa,GACC,qBACEjJ,UAAU,6FACVqC,QAAS,kBAAM6G,GAAY,IAF7B,SAIE,qBAAKlJ,UAAU,yEAAf,SACE,qBAAKC,IAAKZ,EAAaC,GAAOY,IAAI,oBCxD/BiJ,EA1BM,WACnB,IAAMhF,EAASC,cACf,EAAwBzF,qBAAxB,mBAAOW,EAAP,KAAa8J,EAAb,KAcA,OAZA9E,qBAAU,YACS,uCAAG,8BAAAnG,EAAA,sEACKd,EACpBiB,KAAY,SACZkG,OAAO,KACP2B,GAAG,KAAMhC,EAAO3F,IAJD,gBAKL,QAJLyF,EADU,EACVA,OAKNmF,EAAQnF,EAAK,IANG,2CAAH,qDASjBW,KACC,CAACT,IACG7E,EACL,sBAAKU,UAAU,oBAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAUV,KAAMA,SAGpB,uDC4BW+J,EApDoB,SAAC,GAAiC,IAA/B7K,EAA8B,EAA9BA,GAAI8K,EAA0B,EAA1BA,aAAc9G,EAAY,EAAZA,MACtD,EAA0B7D,oBAAS,GAAnC,mBAAO4K,EAAP,KAAcC,EAAd,KACA,EAAsB7K,qBAAtB,mBAAO8K,EAAP,KAAYC,EAAZ,KACMC,EAAM,uCAAG,8BAAAxL,EAAA,sEACWd,EACrBiB,KAAK,SACLsL,SACAC,MAAM,CAAErL,OAJE,gBACLuH,EADK,EACLA,MAIN2D,EAAO3D,GACTuD,IANa,2CAAH,qDAQZ,OACE,gCACE,wBACElH,KAAK,SACLpC,UAAU,WACVqC,QAAS,kBAAMmH,GAAS,IAH1B,2BAOCD,GACC,qBACEvJ,UAAU,6FACVqC,QAAS,kBAAMmH,GAAS,IAF1B,SAIE,sBAAKxJ,UAAU,kFAAf,UACE,4FAAoEwC,EAApE,QACA,wBACEJ,KAAK,SACLpC,UAAU,WACVqC,QAASsH,EAHX,2CAULF,GACC/H,IAAMqE,MAAM,+CAAgD,CAC1DlE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU/D,QCLL0L,EAlCmB,SAAC,GAQ5B,IAPLtL,EAOI,EAPJA,GACAgE,EAMI,EANJA,MACAC,EAKI,EALJA,QACAsH,EAII,EAJJA,MACApH,EAGI,EAHJA,WACAqH,EAEI,EAFJA,SACAV,EACI,EADJA,aAEA,OACE,sBAAKtJ,UAAU,yGAAf,UACE,qBACEC,IAAK8J,EACL7J,IAAI,UACJF,UAAU,aAEZ,sBAAKA,UAAU,4BAAf,UAEGwC,EACD,sBAAMxC,UAAU,gBAAhB,gBAAiCyC,QAAjC,IAAiCA,OAAjC,EAAiCA,EAASC,KAAK,OAC/C,sBAAM1C,UAAU,gBAAhB,SAAiC2C,IACjC,uBAAM3C,UAAU,gBAAhB,yCAA6DgK,QAE/D,8BACE,cAAC,EAAD,CACExL,GAAIA,EACJgE,MAAOA,EACP8G,aAAcA,UCSTW,EAjDM,WACnB,MAA6BtL,oBAAS,GAAtC,mBAAOyE,EAAP,KAAeC,EAAf,KAEA,OACE,sBAAKrD,UAAU,gCAAf,UACE,qBAAKA,UAAS,+BAA0BoD,EAAS,SAAW,mBAA5D,SACE,wBACEhB,KAAK,SACLpC,UAAU,cACVqC,QAAS,kBAAMgB,GAAYD,IAH7B,sBAQF,qBACEpD,UAAS,sLAC+DoD,EAAS,SAAW,mBAF9F,SAIE,sBAAKpD,UAAU,8FAAf,UACE,qBAAKA,UAAU,2DAAf,2BAGA,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMuC,GAAG,eAAT,SACE,qBAAKvC,UAAU,+CAAf,wBAIF,cAAC,IAAD,CAAMuC,GAAG,eAAT,SACE,qBAAKvC,UAAU,+CAAf,iCAOR,qBAAKA,UAAS,sBAAiBoD,EAAS,QAAU,UAAlD,SACE,wBACEhB,KAAK,SACLpC,UAAU,cACVqC,QAAS,kBAAMgB,GAAYD,IAH7B,0BCEO8G,EApCW,WACxB,MAAwCvL,mBAAyB,IAAjE,mBAAOwL,EAAP,KAAqBC,EAArB,KACMxF,EAAW,uCAAG,8BAAAzG,EAAA,sEACYd,EAC3BiB,KAAY,SACZkG,OAAO,KAHQ,gBAIJ,QAHAG,EADI,EACVV,OAINmG,EAAgBzF,GALA,2CAAH,qDAWjB,OAHAL,qBAAU,WACRM,MACC,IAED,sBAAK5E,UAAU,4DAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,8FAAf,SACGmK,IAAY,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAActF,KAAI,SAACvF,GAAD,OACjC,cAAC,EAAD,CAEEd,GAAIc,EAAKd,GACTgE,MAAOlD,EAAKkD,MACZuH,MAAOzK,EAAKC,WAAW,GACvBqJ,KAAMtJ,EAAKsJ,KACXnG,QAASnD,EAAKmD,QACdkG,cAAerJ,EAAKqJ,cACpBhG,WAAYrD,EAAKqD,WACjBC,YAAatD,EAAKsD,YAClBoH,SAAU1K,EAAK0K,SACfV,aAAc1E,GAVTtF,EAAKd,c,oBCMP6L,GArBoB,SAAC,GAAwC,IAAtC7L,EAAqC,EAArCA,GAAIwL,EAAiC,EAAjCA,SAAUM,EAAuB,EAAvBA,iBAC5CC,EAAM,uCAAG,sBAAApM,EAAA,sEACPd,EAASiB,KAAY,SACxBkM,OAAO,CAAER,aACTH,MAAM,CAAErL,OAHE,OAIb8L,EAAgB,OAACN,QAAD,IAACA,IAAY,GAJhB,2CAAH,qDAOZ,OACE,8BACE,wBACE5H,KAAK,SACLpC,UAAU,WACVqC,QAASkI,EAHX,yCC+CSE,GAhDiB,SAAC,GAA2F,IAAzFjM,EAAwF,EAAxFA,GAAIgE,EAAoF,EAApFA,MAAOC,EAA6E,EAA7EA,QAASsH,EAAoE,EAApEA,MAAOnH,EAA6D,EAA7DA,YAAagG,EAAgD,EAAhDA,KAAMD,EAA0C,EAA1CA,cAAehG,EAA2B,EAA3BA,WAAYqH,EAAe,EAAfA,SACpGU,EAAa3M,IACnB,EAAsBY,qBAAtB,mBAAO8K,EAAP,KAAYC,EAAZ,KACMiB,EAAU,uCAAG,8BAAAxM,EAAA,sEACOd,EACvBiB,KAAY,SACZmD,OAAO,CACNjD,KACAgE,QACAI,cACA+F,gBACAhG,aACAiG,OACArJ,WAAY,CAACwK,GACbtH,UACAjC,YAAaM,KAAKC,MAAsB,IAAhBD,KAAK8J,UAAmB,EAChDnK,UAAWK,KAAKC,MAAsB,GAAhBD,KAAK8J,UAAiB,EAC5CC,UAAS,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAYlM,GACvBsM,UAAW,IAAIjI,KACfmH,aAhBe,gBACTjE,EADS,EACTA,MAiBR2D,EAAO3D,GAlBU,2CAAH,qDAqBhB,OACE,gCACE,wBACE3D,KAAK,SACLpC,UAAU,WACVqC,QAASsI,EAHX,wDAOClB,GACC/H,IAAMqE,MAAM0D,EAAIzD,QAAS,CACzBnE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU/D,QCkCH2M,GA7EmB,SAAC,GAS5B,IARLvM,EAQI,EARJA,GACAgE,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAsH,EAKI,EALJA,MACApB,EAII,EAJJA,cACAhG,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAgG,EACI,EADJA,KAEA,EAA0CjK,mBAAS,KAAnD,mBAAOqM,EAAP,KAAsBC,EAAtB,KACA,EAAgCtM,mBAAwB,MAAxD,mBAAOqL,EAAP,KAAiBkB,EAAjB,KACA,EAAwBvM,mBAA8B,IAAtD,mBAAOsF,EAAP,KAAaC,EAAb,KAgBA,OAdAI,qBAAU,YACS,uCAAG,kCAAAnG,EAAA,sEACed,EAC9BiB,KAAiB,SACjBkG,OAF8B,8BAIhC2B,GAAG,KAAM3H,GALQ,gBAMD,QALH2M,EADI,EACVlH,QAMNC,EAAQiH,GACRD,EAAW,oBAACC,EAAS,UAAV,aAAC,EAAanB,gBAAd,QAA0B,IARrB,2CAAH,qDAWjBoB,KACC,CAAC5M,IAEF,sBAAKwB,UAAU,yGAAf,UACE,qBACEC,IAAK8J,EACL7J,IAAI,UACJF,UAAU,uBAEZ,sBAAKA,UAAU,4BAAf,UAEGwC,EACD,sBAAMxC,UAAU,gBAAhB,gBAAiCyC,QAAjC,IAAiCA,OAAjC,EAAiCA,EAASC,KAAK,OAC/C,sBAAM1C,UAAU,gBAAhB,SAAiC2C,OAEnC,gCACE,0CACA,uBACEnE,GAAG,WACH8H,KAAK,WACLlE,KAAK,SACLsB,SAAU,SAACC,GAAD,OAAWsH,EAAiBtH,EAAMC,OAAO1E,UAEnC,KAAb,OAAJ+E,QAAI,IAAJA,OAAA,EAAAA,EAAMzE,SACL,gCACE,sBAAKQ,UAAU,wBAAf,yBAAoDgK,EAApD,OACA,cAAC,GAAD,CACExL,GAAIA,EACJwL,SAAUlG,OAAOkH,IAAP,OAAyBhB,QAAzB,IAAyBA,IAAY,GAC/CM,iBAAkB,SAAC/F,GAAD,OAAO2G,EAAY3G,SAIzB,KAAb,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMzE,SACL,cAAC,GAAD,CACEhB,GAAIA,EACJgE,MAAOA,EACPC,QAASA,EACTsH,MAAOA,EACPnH,YAAaA,EACbgG,KAAMA,EACND,cAAeA,EACfhG,WAAYA,EACZqH,SAAUlG,OAAOkH,YCxBdK,GAxDgB,WAC7B,MAA8B1M,qBAA9B,mBAAO2M,EAAP,KAAgBC,EAAhB,KACA,EAA0B5M,qBAA1B,mBAAOoH,EAAP,KAAcyF,EAAd,KACA,EAA4B7M,mBAAS,QAArC,mBAAO8M,EAAP,KAAeC,EAAf,KACMC,EAAenG,YAAU,CAC7BC,cAAe,CACbgG,OAAQ,IAEZ7F,SAAU,SAACC,GACT6F,EAAU7F,EAAO4F,WAenB,OAZAnH,qBAAU,YACO,uCAAG,4BAAAnG,EAAA,sEAEdqN,GAAS,GAFK,SAGII,KAAMC,IAAN,wDAA2DJ,IAH/D,OAGRK,EAHQ,OAIdP,EAAWO,EAAI7H,MAJD,gDAMduH,GAAS,GANK,yDAAH,qDASfO,KACC,CAACN,IAEF,gCACE,sBAAM7F,SAAU+F,EAAatF,aAA7B,SACE,uBACE7H,GAAG,SACH8H,KAAK,SACLlE,KAAK,OACLqB,YAAY,SACZC,SAAUiI,EAAapF,aACvBvG,UAAU,gBAGd,gCACGsL,IAAO,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAS5E,MAAM7B,KAAI,SAACvF,GAAD,uBAC7B,cAAC,GAAD,CAEEd,GAAE,UAAEc,EAAKd,UAAP,QAAa,MACfgE,MAAK,UAAElD,EAAK0M,WAAWxJ,aAAlB,QAA2B,MAChCI,YAAW,UAAEtD,EAAK0M,WAAWpJ,mBAAlB,QAAiC,MAC5C+F,cAAa,UAAErJ,EAAK0M,WAAWrD,qBAAlB,QAAmC,MAChDoB,MAAOzK,EAAK0M,WAAWzM,WAAaD,EAAK0M,WAAWzM,WAAW0M,UAAxD,UAAuE9O,oBAAvE,wBACPsF,QAASnD,EAAK0M,WAAWvJ,QACzBE,WAAU,UAAErD,EAAK0M,WAAWrJ,kBAAlB,QAAgC,CAAC,OAC3CiG,KAAOtJ,EAAK0M,WAAWE,oBAAsB5M,EAAK0M,WAAWE,oBAAoB,GAAGC,WAAa,OATnG,UACO7M,EAAKd,UADZ,QACkB,WAWnBuH,GAAS,mBAAG/F,UAAU,eAAb,mECrCHoM,GALoC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOzO,EAAqB,EAArBA,KAAMa,EAAe,EAAfA,SACrE,OAAOZ,EAAQD,GAAS,eAAC,IAAD,CAAOwO,KAAMA,EAAMC,MAAOA,EAA1B,cAAmC5N,EAAnC,OACrB,cAAC,IAAD,CAAU6D,GAAG,OCALgK,GAbI,WACjB,IAAMC,EAAWC,cAEjB,OACE,sBAAKzM,UAAU,oCAAf,UACE,oBAAIA,UAAU,0BAAd,iBACA,qBAAIA,UAAU,WAAd,gCACqB,sBAAMA,UAAU,aAAhB,SAA8BwM,EAASE,kBCOnDC,GAVkB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,IAAK5M,EAAgB,EAAhBA,UACrC,OACE,qBACEA,UAAS,8CAAyCA,GAClDC,IAAK2M,EACL1M,IAAI,mC,oBC6EG2M,GAhFW,WACtB,IAAMC,EAA6B/O,IACnC,EAAoBY,mBAASoO,iBAAyB,OAA/CC,EAAP,oBACA,EAA4BrO,qBAA5B,mBAAO0G,EAAP,KAAeC,EAAf,KACA,EAAoC3G,mBAAS,IAA7C,mBAAOsO,EAAP,KAAmBC,EAAnB,KAEF5I,qBAAU,WACR,sBAAC,sBAAAnG,EAAA,sEACOD,IAAmBoJ,MAAK,SAACrD,IAC7B,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMgC,YACRiH,EAAa,OAACjJ,QAAD,IAACA,OAAD,EAACA,EAAMgC,cAHzB,0CAAD,KAOC,CAACgH,IAEJ,IAAME,EAAM,uCAAG,WAAOC,GAAP,eAAAjP,EAAA,8DACHC,IAANgP,EADS,uBAEX9H,EAAU,mBAFC,6BAKRwH,GAAQA,EAAItO,GALJ,uBAMX8G,EAAU,gBANC,sCAUM+H,KAVN,SAUgCD,EAAEE,cAVlC,yCAUeC,WAVf,2BAWM,gBAAX,QADFnL,EAVO,cAWL,IAAJA,OAAA,EAAAA,EAAMoL,OAAwC,eAAX,OAAJpL,QAAI,IAAJA,OAAA,EAAAA,EAAMoL,MAX5B,wBAYXlI,EAAU,iDAZC,kCAgBbA,EAAU,gBAhBG,UAiBPjI,EACHgB,QAAQC,KAAK,UACbmP,OAAO,CAAC,WAAD,cAAYX,QAAZ,IAAYA,OAAZ,EAAYA,EAAKtO,MAnBd,QAqBbnB,EACGgB,QAAQC,KAAK,kBACb6O,OAFH,iBAEaL,QAFb,IAEaA,OAFb,EAEaA,EAAKtO,IAAM4O,GACrB9F,KAHH,uCAGQ,WAAOrD,GAAP,eAAA9F,EAAA,yDACe,OAAf8F,EAAK8B,MADL,sBAEI9B,EAAK8B,MAFT,cAIJT,EAAU,sBAJN,SAKoBpH,IALpB,QAOJ,QAFMa,EALF,cAOJ,IAAIA,OAAJ,EAAIA,EAAWkH,YACbiH,EAAa,OAACnO,QAAD,IAACA,OAAD,EAACA,EAAWkH,WARvB,2CAHR,uDAaKyH,OAAM,SAAC3H,GACRT,EAAU,iBAAD,OAAkBqI,KAAKC,UAAU7H,GAAjC,SAnCA,4CAAH,sDA+CZ,OACE,sBAAK/F,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,kDACA,sBAAKA,UAAU,iBAAf,UACE,cAAC,GAAD,CAAQ4M,IAAKK,EAAYjN,UAAU,KACnC,sBAAKA,UAAU,gDAAf,UACE,uBAAOoC,KAAK,OAAOyL,OAAO,wBAAwBC,IAAKd,EAAWe,UAAQ,IAC1E,sBAAK/N,UAAU,OAAf,UACE,wBAAQoC,KAAK,SAASC,QAhBG,WAAO,IAAD,IACgC,GAA1D,OAAT2K,QAAS,IAATA,GAAA,UAAAA,EAAWgB,eAAX,eAAoBC,SAAkB,OAATjB,QAAS,IAATA,GAAA,UAAAA,EAAWgB,eAAX,eAAoBC,MAAMzO,QAAS,EAClE2N,EAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAWgB,eAAZ,aAAC,EAAoBC,MAAM,IAEjC3I,EAAU,uBAYJ,yBACA,sBAAKtF,UAAU,cAAf,UAA6B,uBAAOA,UAAU,gBAAjB,sBAAkDqF,kBCvE5EwH,GARW,WACtB,OACE,qBAAK7M,UAAU,MAAf,SACE,cAACkO,GAAD,OCiDOC,I,OA9CM,WACjB,IAAMrB,EAA6B/O,IACnC,EAAmCY,mBAAS,IAA5C,mBAAOI,EAAP,KAAkBmO,EAAlB,KAgBA,OAVA5I,qBAAU,WACR,sBAAC,sBAAAnG,EAAA,sEACSD,IAAmBoJ,MAAK,SAACrD,IAC3B,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMgC,YACRiH,EAAa,OAACjJ,QAAD,IAACA,OAAD,EAACA,EAAMgC,cAH7B,0CAAD,KAOD,IAGC,sBAAKjG,UAAU,0BAAf,UACE,qBAAKA,UAAU,0CAA0CG,MAjB7C,CAEZiO,gBAAiB,uHAgBjB,qBAAKpO,UAAU,sCAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,GAAD,CAAQ4M,IAAK7N,EAAWiB,UAAU,8BAEpC,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,wBAAf,gBAAwC8M,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAKlO,YAC7C,qBAAKoB,UAAU,gBAAf,gBAAgC8M,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAKjO,gBAGzC,qBAAKmB,UAAU,2CAAf,2BAIF,qBAAKA,UAAU,MAAf,SACE,cAAC,GAAD,gBCjCCqO,GAVD,SAAC,GAAsD,IAAD,IAAnD7P,UAAmD,MAA9C,GAA8C,MAA1CgE,aAA0C,MAAlC,GAAkC,MAA9B8L,cAA8B,MAArB,GAAqB,MAAjBvE,aAAiB,MAAT,GAAS,EAClE,OACE,eAAC,IAAD,CAAMxH,GAAE,gBAAW/D,GAAMwB,UAAU,mEAAnC,UACE,qBAAKC,IAAK8J,EAAO7J,IAAKsC,EAAOxC,UAAU,8BADzC,UAEMwC,EAFN,MAGE,sBAAMxC,UAAU,wBAAhB,SAAyCsO,QCmEhCC,GA9DkB,SAAC,GAA6B,IAAD,UAA1BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC9C,EAA0B9P,mBAAS,GAAnC,mBAAO+P,EAAP,KAAcC,EAAd,KAEA,EAA0BhQ,qBAA1B,mBAAOiQ,EAAP,KAAcC,EAAd,KAGAvK,qBAAU,WACJsK,GACFE,aAAaF,GAGf,IAAMG,EAAWC,YAAW,WAEaL,EAAjCD,IAAUF,EAAa,EAAmB,EAC9B,SAACS,GAAD,OAASA,EAAM,MAVvB,MAcZJ,EAASE,KAER,CAACL,IAEJ,IAAMQ,EAAc,WAAc,IAAbC,EAAY,uDAAN,EACnBC,EAAWV,EAAQS,EAEzB,OAAmCR,EAA/BS,GAAYZ,EAA4B,EACxCY,IAAa,EAAmBZ,EAAa,EAEjCY,IAGlB,OACE,qBAAKpP,UAAU,qCAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,cAAC,GAAD,CACExB,GAAE,UAAEiQ,EAAQC,UAAV,aAAE,EAAgBlQ,GACpBgE,MAAK,UAAEiM,EAAQC,UAAV,aAAE,EAAgBlM,MACvB8L,OAAM,UAAEG,EAAQC,UAAV,iBAAE,EAAgBjM,eAAlB,aAAE,EAAyBC,KAAK,KACtCqH,MAAK,UAAE0E,EAAQC,UAAV,aAAE,EAAgB3E,QAEzB,sBAAK/J,UAAU,gBAAf,UACE,wBACEA,UAAU,gBACVoC,KAAK,SACLC,QAAS,kBAAM6M,GAAa,IAH9B,oBAOA,qBAAKlP,UAAU,SACf,wBACEA,UAAU,gBACVoC,KAAK,SACLC,QAAS,kBAAM6M,EAAY,IAH7B,6BCxBKG,GAhCI,WACjB,MAAwB1Q,mBAAyB,IAAjD,mBAAOsF,EAAP,KAAaC,EAAb,KAaA,OAZAI,qBAAU,YACS,uCAAG,8BAAAnG,EAAA,sEACYd,EAC3BiB,KAAY,SACZkG,OAF2B,mBADZ,gBACJG,EADI,EACVV,KAKRC,EAAQS,GANU,2CAAH,qDAQjBC,KACC,IAECX,EAEA,cAAC,GAAD,CACEwK,QAAO,OAAExK,QAAF,IAAEA,OAAF,EAAEA,EAAMY,KAAI,SAACvF,GAClB,MAAO,CACLd,GAAIc,EAAKd,GACTgE,MAAOlD,EAAKkD,MACZC,QAASnD,EAAKmD,QACdsH,MAAOzK,EAAKC,WAAW,OAG3BiP,WAAYvK,EAAKzE,SAIhB,4CCcM8P,GApCsB,SAAC,GAI/B,IAAD,YAHJhQ,EAGI,EAHJA,KACAiC,EAEI,EAFJA,WACAD,EACI,EADJA,KAEA,OACE,sBAAKtB,UAAU,qGAAf,UACE,qBAAKA,UAAU,6CAAf,SACE,8BACE,qBACEC,IAAKZ,EAAaC,GAClBY,IAAG,oCAAqBZ,EAAKkD,aAA1B,QAAmC,OACtCxC,UAAU,+GAKhB,sBAAKA,UAAU,2BAAf,UACE,sBAAMA,UAAU,qFAAhB,mBACGV,EAAKkD,aADR,QACiB,QAEjB,sBAAKxC,UAAU,8BAAf,UACE,mDAAOV,EAAKmD,eAAZ,aAAO,EAAcC,KAAK,YAA1B,QAAkC,QAClC,yCAAOpD,EAAKqD,kBAAZ,QAA0B,QAC1B,qBAAK3C,UAAU,qCAAf,mBAAqDV,EAAKsD,mBAA1D,QAAyE,QACzE,qBAAK5C,UAAU,gBAAf,SACE,cAAC,EAAD,CAAQQ,YAAalB,EAAKkB,YAAaC,UAAWnB,EAAKmB,UAAWF,MAAI,SAG1E,oBAAGP,UAAU,aAAb,mBAAiCsB,KACjC,oBAAGtB,UAAU,aAAb,0BAAwCuB,YCFjCgO,GA7BW,WACxB,MAAwB5Q,mBAAkC,IAA1D,mBAAO6Q,EAAP,KAAaC,EAAb,KACM9R,EAAaI,IAenB,OAbAuG,qBAAU,YACc,uCAAG,8BAAAnG,EAAA,sEACAd,EACpBiB,KAAqB,iBACrBkG,OAAO,mCACP2B,GAAG,YAHiB,OAGJxI,QAHI,IAGJA,OAHI,EAGJA,EAAYa,IAJR,gBAKV,QAJLyF,EADe,EACfA,OAKNwL,EAAQxL,GANa,2CAAH,qDAStByL,KACC,CAAC/R,IAGF,gCACG6R,IAAI,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM3K,KAAI,SAACvF,GAAD,OACjB,cAAC,GAAD,CAAiCA,KAAMA,EAAKA,KAAMiC,WAAYjC,EAAKiC,WAAYD,KAAMhC,EAAKgC,MAAvEhC,EAAKA,KAAKd,QAE9BgR,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMhQ,QAAS,GACtB,+CC+BOmQ,GA/CG,WAAO,IAAD,EAChBhS,EAAaI,IACb6J,EAAWH,EAAW,iBAAC9J,QAAD,IAACA,OAAD,EAACA,EAAYa,UAAb,QAAmB,MAE/C,OACE,qBAAKwB,UAAU,SAAf,SACE,eAAC,IAAD,CAAQ4P,SAAUzS,oBAAlB,UACE,wBAAQ6C,UAAU,+BAAlB,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqM,KAAK,oBAAoBC,OAAK,EAArC,SACE,cAAC,IAAD,CAAU/J,GAAG,QAEf,cAAC,IAAD,CAAO8J,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAK,EAAzB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,cAAcC,OAAK,EAA/B,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcD,KAAK,eAAeC,OAAK,EAACzO,KAAM+J,EAA9C,SACE,cAACiI,EAAD,MAEF,cAAC,GAAD,CAAcxD,KAAK,eAAeC,OAAK,EAACzO,KAAM+J,EAA9C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOyE,KAAK,cAAcC,OAAK,EAA/B,SACE,cAAC,IAAD,CAAU/J,GAAG,sBAEf,cAAC,IAAD,CAAO8J,KAAK,2BAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAYC,OAAK,EAA7B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACE,cAAC,GAAD,eC/CGyD,GARH,WACV,OACE,cAAC,EAAD,UACE,cAAC,GAAD,OCQSC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3I,MAAK,YAAkD,IAA/C4I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,CACE5O,SAAS,YACT6O,WAAYrC,IACZvM,UAAW,IACXC,iBAAiB,EACjB4O,aAAa,EACb3O,cAAY,EACZ4O,KAAK,EACLC,kBAAgB,EAChB3O,WAAS,EACTD,cAAY,IAEd,cAAC,GAAD,OAEF6O,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.5b84c6df.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = String(process.env.REACT_APP_SUPABASE_URL);\nconst supabaseKey = String(process.env.REACT_APP_SUPABASE_TOKEN);\nexport const supabase = createClient(supabaseUrl, supabaseKey);\n\n// REACT_APP_SUPABASE_URL=xxx REACT_APP_SUPABASE_TOKEN=xxx npm run start\n\nexport default supabase;\n","import React, { FC, useContext, useState } from 'react';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\nimport { IProfile } from '../interfaces/IProfile.interface';\nimport supabase from '../utils/supabase';\n\nconst UserContext = React.createContext<IBasicUserInfo | null>(null);\nconst UserUpdateContext = React.createContext<((newUser: IBasicUserInfo) => void) | null>(null);\nconst loggedUser = supabase.auth.user() ?? null;\n\nexport const isAdmin = (user: IProfile | null) => {\n  return user?.isAdmin;\n};\n\nexport const isLoggedIn = () => {\n  return supabase.auth.user();\n};\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n\nexport const useUserUpdate = () => {\n  return useContext(UserUpdateContext);\n};\n\nexport const getUserAvatarURL = async () => {\n  if (!loggedUser) {\n    return undefined;\n  }\n  return supabase\n    .storage\n    .from('images/avatars')\n    .createSignedUrl(`${loggedUser?.id}`, 43200);\n};\n\nexport const UserProvider: FC = ({ children }) => {\n  const [user, setUser] = useState<IBasicUserInfo>({\n    id: loggedUser?.id ?? '',\n    firstName: '',\n    lastName: '',\n    email: loggedUser?.email ?? '',\n    avatarUrl: '',\n  });\n\n  const toggleUser = (newUser: IBasicUserInfo) => {\n    setUser(newUser);\n  };\n\n  return (\n    <UserContext.Provider value={user}>\n      <UserUpdateContext.Provider value={toggleUser}>\n        {children}\n      </UserUpdateContext.Provider>\n    </UserContext.Provider>\n  );\n};\n","import { IBook } from '../interfaces/IBook.interface';\n\nconst DefaultImageUrl = `${process.env.PUBLIC_URL}/image-not-found.png`;\n\nexport default function getBookImage(book: IBook): string {\n  if (book?.imageLinks?.length <= book.featuredImageId) return DefaultImageUrl;\n  return book.imageLinks[book.featuredImageId];\n}\n","import React, { FC } from 'react';\n\ninterface SVGRatingIconProps {\n  urlFull: string\n  urlBlank: string\n  fillingPercent: number\n}\n\nconst SVGRatingIcon: FC<SVGRatingIconProps> = ({ urlBlank, urlFull, fillingPercent }) => {\n  const fullIconStyle = {\n    clipPath: `polygon(0 0, ${fillingPercent}% 0, ${fillingPercent}% 100%, 0 100%)`,\n  };\n\n  return (\n    <div className=\"w-full h-full\">\n      {fillingPercent === 100 ? <img src={urlFull} alt=\"Filled ranking icon\" className=\"w-full h-full\" /> : (\n        <div className=\"grid grid-cols-1 grid-rows-1 w-full h-full\">\n          {fillingPercent !== 0\n          && (\n          <img\n            src={urlFull}\n            style={fullIconStyle}\n            alt=\"Blank ranking icon\"\n            className=\"col-start-1 col-end-2 row-start-1 row-end-2 w-full h-full\"\n          />\n)}\n          <img\n            src={urlBlank}\n            alt=\"Blank ranking icon\"\n            className=\"col-start-1 col-end-2 row-start-1 row-end-2 w-full h-full\"\n          />\n        </div>\n)}\n    </div>\n  );\n};\n\nexport default SVGRatingIcon;\n","import React, { FC } from 'react';\nimport SVGRatingIcon from './SVGRatingIcon';\n\nconst IconsAmount = 5;\nexport const MaxScoreFromAPI = 10;\nconst RatingIconURL = `${process.env.PUBLIC_URL}/star_border_black.svg`;\nconst RatingIconFilledURL = `${process.env.PUBLIC_URL}/star_black.svg`;\n\ninterface RatingProps {\n  bare: boolean\n  votesAmount: number | null\n  avgRating: number\n}\n\nconst Rating: FC<RatingProps> = ({ bare, votesAmount, avgRating }) => {\n  const icons = [];\n  const scorePerIcon = 100 / IconsAmount;\n\n  let scoreRemaining = (avgRating / MaxScoreFromAPI) * 100;\n  for (let i = 0; i < IconsAmount; i++) {\n    icons.push(<SVGRatingIcon\n      key={i}\n      urlBlank={RatingIconURL}\n      urlFull={RatingIconFilledURL}\n      fillingPercent={Math.floor(Math.max(0, Math.min(100, scoreRemaining * IconsAmount)))}\n    />);\n    scoreRemaining -= scorePerIcon;\n  }\n\n  return (\n    <div className=\"flex flex-wrap justify-center items-center flex-col\">\n      <div className=\"flex justify-between w-full h-full\">\n        {icons}\n      </div>\n      {!bare && <span className=\"text-gray-600 text-xs mt-1\">Ilosc głosów: {votesAmount}</span>}\n      {!bare && <span className=\"text-gray-600 text-xs mt-1\">Srednia ocena: {Math.round(avgRating * 100) / 100}</span>}\n    </div>\n  );\n};\n\nexport default Rating;\n","import React, { FC } from 'react';\nimport { toast } from 'react-toastify';\nimport supabase from '../utils/supabase';\nimport { IBookBorrow } from '../interfaces/IBookBorrow.interface';\n\nconst BorrowBook: FC<IBookBorrow> = ({ bookId, profileId, date, returnDate }) => {\n  const AddOrNotify = async () => {\n    if (supabase.auth.user()) {\n      await supabase.from<IBookBorrow>('borrowedBooks').insert({\n        bookId,\n        profileId,\n        date,\n        returnDate,\n      });\n    } else {\n      toast.warn('You must be logged in to borrow a book!', {\n        toastId: 'borrow-book-warning',\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: false,\n        progress: undefined,\n      });\n    }\n  };\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"btn-page\"\n        onClick={AddOrNotify}\n      >\n        Borrow a book\n      </button>\n    </div>\n  );\n};\n\nexport default BorrowBook;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { IBook } from '../interfaces/IBook.interface';\nimport getBookImage from '../utils/utils';\nimport Rating from './Rating';\nimport './Book.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport BorrowBook from './BorrowBook';\nimport { useUser } from './UserContext';\n\ninterface IBookProps {\n  book: IBook;\n}\n\nconst Book: FC<IBookProps> = ({\n  book,\n}) => {\n  const loggedUser = useUser();\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-50 shadow p-3 m-3 mx-6\">\n      <div className=\"m-3 flex justify-center\">\n        <Link to={`/book/${book.id}`}>\n          <img\n            src={getBookImage(book)}\n            alt={`Zdjecie okladki ${book.title ?? 'N/D'}`}\n            className=\"transform hover:scale-110 cursor-pointer w-32\n            transition duration-400 ease-in-out hover:-translate-y-1\"\n          />\n        </Link>\n      </div>\n      <div className=\"ml-2 mb-4 md:mb-0 w-full\">\n        <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">\n          <Link to={`/book/${book.id}`}>{book.title ?? 'N/D'}</Link>\n        </span>\n        <div className=\"text-gray-400 flex flex-col\">\n          <span>{book.authors?.join(' ') ?? 'N/D'}</span>\n          <span>{book.categories ?? 'N/D'}</span>\n          <div className=\"overflow-hidden max-h-20 book-desc\">{book.description ?? 'N/D'}</div>\n          <div className=\"flex h-4 mt-2\">\n            <Rating votesAmount={book.votesAmount} avgRating={book.avgRating} bare />\n          </div>\n        </div>\n      </div>\n      <div>\n        <BorrowBook\n          bookId={book.id}\n          profileId={loggedUser?.id}\n          date={new Date()}\n          returnDate={new Date(new Date().setMonth(new Date().getMonth() + 1))}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Sidebar = () => {\n  const [value, setValue] = useState(0);\n  const [query, setQuery] = useState('*');\n  const handleSlideChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(Number(event?.target?.value));\n  };\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (String(event?.target?.value).length > 0) setQuery(String(event?.target?.value));\n    else setQuery('*');\n  };\n  const [toggle, setToggled] = useState(true);\n  const history = useHistory();\n\n  return (\n    <div className=\"flex justify-between bg-white\">\n      <div className={`bg-white inline z-40 ${toggle ? 'hidden' : 'fixed lg:static'}`}>\n        <button\n          type=\"button\"\n          className=\"btn-sidebar lg:hidden\"\n          onClick={() => setToggled(!toggle)}\n        >\n          ⮜\n        </button>\n      </div>\n      <div\n        className={`lg:block z-30 inset-0 flex-none min-h-screen h-full lg:h-auto bg-white ml-6 lg:mt-0 lg:ml-0 pb-10 lg:pt-0\n        w-72 shadow-sm dark:bg-gray-800 overflow-y-auto lg:overflow-y-visible ${toggle ? 'hidden' : 'fixed lg:static'}`}\n      >\n        <div className=\"items-center justify-between scrolling-touch fixed top-14 max-h-screen overflow-y-auto pb-8\">\n          <div className=\"border-b border-gray-400 mx-4 my-5 pl-2 text-l font-bold\">\n            Filters\n          </div>\n          <nav className=\"mx-4 my-3\">\n            <div className=\"border-b border-gray-200 mx-1 pb-5 mt-5\">\n              <label htmlFor=\"searchbar\" className=\"mr-2\">Search</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter book name\"\n                id=\"searchbar\"\n                className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none\n                  transition duration-300 ease-in-out focus:ring-2 ring-gray-200\"\n                onChange={handleQueryChange}\n              />\n            </div>\n            <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n              <ul className=\"list-disc\">\n                <li>Fiction</li>\n                <li>Literature of fact, journalism</li>\n                <li>Popular science literature</li>\n                <li>Children&apos;s literature</li>\n                <li>Comics</li>\n                <li>Poetry, drama satire</li>\n                <li>Other</li>\n              </ul>\n            </div>\n            <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n              <input type=\"range\" min=\"0\" max=\"10\" defaultValue=\"0\" onChange={handleSlideChange} />\n              <span className=\"ml-2\" id=\"range\">{value > 0 ? value : 'All'}</span>\n            </div>\n            <div className=\"flex border-b border-gray-200 mx-1 pl-4 pb-5 mt-5 place-content-center\">\n              <button\n                className=\"btn-page w-2/3\"\n                type=\"button\"\n                onClick={() => history.replace(`/books-list/${query}/${value}`)}\n              >\n                Filter\n              </button>\n            </div>\n          </nav>\n        </div>\n      </div>\n      <div className={`inline z-40 ${toggle ? 'fixed' : 'hidden'}`}>\n        <button\n          type=\"button\"\n          className=\"btn-sidebar lg:hidden\"\n          onClick={() => { setToggled(!toggle); }}\n        >\n          ⮞\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { IBook } from '../interfaces/IBook.interface';\nimport supabase from '../utils/supabase';\nimport Book from '../components/Book';\nimport Sidebar from '../components/Sidebar';\n\ninterface IParams {\n  q: string;\n  rating: string;\n}\n\nconst BookListView = () => {\n  const [data, setData] = useState<IBook[] | null>([]);\n  const params: IParams = useParams();\n  const { rating } = params;\n  useEffect(() => {\n    if (params?.q?.length < 1) params.q = '*';\n    const getAllBooks = async () => {\n      const q = `%${params.q ? params.q : '*'}%`;\n      const { data: books } = await supabase\n        .from<IBook>('books')\n        .select('*')\n        .ilike('title', q)\n        .gte('avgRating', rating);\n      if (books !== null) {\n        setData(books);\n      }\n    };\n    getAllBooks();\n  }, [params, rating]);\n  return (\n    <div className=\"content-container\">\n      <Sidebar />\n      <div className=\"mt-16 w-full\">\n        {data && data?.map((book) => (\n          <Book key={book.id} book={book} />\n        ))}\n        {data && data?.length < 1 && (\n          <div className=\"flex justify-center italic\">No results</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BookListView;\n","import React, { FC } from 'react';\n\ninterface IModalDialogProps {\n  title: string;\n  okButtonLabel: string;\n  onVisibilityChange: () => void;\n  onOkButtonClick: () => void;\n}\n\nconst ModalDialog: FC<IModalDialogProps> = ({ title, okButtonLabel, onVisibilityChange, onOkButtonClick, children }) => {\n  return (\n    <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\">\n      <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n        <div className=\"flex justify-between\">\n          <h1 className=\"font-bold\">{title}</h1>\n          <button type=\"button\" onClick={() => onVisibilityChange()} className=\"btn-exit\">\n            X\n          </button>\n        </div>\n        <div>\n          {children}\n        </div>\n        <button type=\"submit\" className=\"btn-page\" onClick={() => onOkButtonClick()}>\n          {okButtonLabel}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalDialog;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { getUserAvatarURL, useUserUpdate } from './UserContext';\nimport ModalDialog from './ModalDialog';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\n\nconst LoginButton = () => {\n  const setUser = useUserUpdate();\n  const [loginModalShown, setLoginModalShown] = useState(false);\n  const [status, setStatus] = useState<string>();\n\n  const formikLogin = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n    },\n    onSubmit: async (values) => {\n      const { user, error } = await supabase.auth.signIn({\n        email: values.emailAdress,\n        password: values.password,\n      });\n      if (error) {\n        setStatus(error.message);\n        return;\n      }\n\n      if (user && setUser) {\n        // TODO: get the default avatar directly from the supabase avatar store\n        setUser({\n          id: user?.id,\n          firstName: 'unknown',\n          lastName: 'unknown',\n          email: user?.email ?? 'no email',\n          avatarUrl: (await getUserAvatarURL())?.signedURL\n            ?? `${process.env.PUBLIC_URL}/image-not-found.png`,\n        });\n        setLoginModalShown(!loginModalShown);\n        setStatus('');\n      }\n    },\n  });\n\n  const checkEmail = async () => {\n    const { data } = await supabase\n      .from<IBasicUserInfo>('profiles')\n      .select('email')\n      .eq('email', formikLogin.values.emailAdress);\n    if (!data?.length) {\n      setStatus('There\\'s no user associated with this email');\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"btn-nav text-left relative\">\n        <button\n          type=\"button\"\n          onClick={() => setLoginModalShown(!loginModalShown)}\n        >\n          Sign In\n        </button>\n      </div>\n      {loginModalShown && (\n        <ModalDialog\n          title=\"Login\"\n          okButtonLabel=\"Sign In\"\n          onOkButtonClick={() => formikLogin.submitForm()}\n          onVisibilityChange={() => setLoginModalShown(!loginModalShown)}\n        >\n          <form onSubmit={formikLogin.handleSubmit}>\n            <div className=\"flex content-between\">\n              <div className=\"mr-1 flex-auto\">\n                <label htmlFor=\"email-adress\" className=\"text-xs block\">Email adress:</label>\n                <input\n                  id=\"emailAdress\"\n                  name=\"emailAdress\"\n                  type=\"email\"\n                  placeholder=\"Email-adress\"\n                  onChange={formikLogin.handleChange}\n                  onBlur={checkEmail}\n                  value={formikLogin.values.emailAdress}\n                  className=\"input-pri\"\n                />\n              </div>\n              <div className=\"flex flex-auto flex-col items-end\">\n                <div>\n                  <label htmlFor=\"password\" className=\"text-xs block\">Password:</label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={formikLogin.handleChange}\n                    value={formikLogin.values.password}\n                    className=\"input-pri\"\n                  />\n                </div>\n              </div>\n            </div>\n            <p className=\"text-red-500 mb-4\">{status}</p>\n          </form>\n        </ModalDialog>\n      )}\n    </div>\n  );\n};\n\nexport default LoginButton;\n","import React, { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface DropdownItem {\n  link: string;\n  label: string;\n}\n\ninterface UserDropdownProps {\n  title: string | undefined;\n  items: DropdownItem[];\n  logOut: () => void;\n}\n\nconst UserDropdown: FC<UserDropdownProps> = ({ title, items, logOut }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"relative btn-nav-end\">\n      <button\n        type=\"button\"\n        className=\"navbar-nav text-left relative\"\n        onClick={() => setOpen(!open)}\n      >\n        {title}\n      </button>\n\n      {open && (\n        <>\n          <div\n            className=\"hidden md:flex md:fixed left-0 top-0 pin z-40 overflow-auto bg-white bg-opacity-0 h-screen w-screen\"\n            onClick={() => setOpen(!open)}\n          >\n            &nbsp;\n          </div>\n          <div\n            className=\"dropdown block md:absolute top-0 left-0 w-auto overflow-hidden md:-translate-y-0 z-50 bg-gray-700\n          md:bg-gray-600 text-white border-none md:border border-gray-400 md:border-gray-800 rounded-sm\"\n          >\n            {items.map((item) => (\n              <div className=\"menu-item border-b border-gray-400 md:border-gray-700\">\n                <button type=\"button\">\n                  <Link\n                    to={`${item.link}`}\n                    className=\"cursor-pointer transition duration-400 ease-in-out hover:text-indigo-500\"\n                  >\n                    {item.label}\n                  </Link>\n                </button>\n              </div>\n            ))}\n\n            <div className=\"menu-item\">\n              <button\n                type=\"button\"\n                onClick={logOut}\n                className=\"cursor-pointer transition duration-400 ease-in-out hover:text-indigo-500\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n\n    </div>\n  );\n};\n\nexport default UserDropdown;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport ModalDialog from './ModalDialog';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\n\nconst RegisterButton = () => {\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [status, setStatus] = useState<string>();\n  const formikRegister = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n    },\n    onSubmit: async (values) => {\n      const { user, error } = await supabase.auth.signUp({\n        email: values.emailAdress,\n        password: values.password,\n      });\n      if (error) {\n        setStatus(error.message);\n        return;\n      }\n      if (user) {\n        await supabase.from<IBasicUserInfo>('profiles').insert({\n          id: user.id,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          email: values.emailAdress,\n        }).then((resp) => {\n          setStatus(resp.statusText);\n        });\n        setModalVisibility(!modalVisibility);\n      }\n    },\n  });\n  const checkEmail = async () => {\n    const { data } = await supabase\n      .from<IBasicUserInfo>('profiles')\n      .select('email')\n      .eq('email', formikRegister.values.emailAdress);\n    if (!data?.length) {\n      setStatus('A user with this email address has already been registered');\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"btn-nav-end text-left relative\">\n        <button\n          type=\"button\"\n          onClick={() => setModalVisibility(!modalVisibility)}\n        >Sign Up\n        </button>\n      </div>\n      {modalVisibility\n        && (\n          <ModalDialog\n            title=\"Register\"\n            okButtonLabel=\"Sign Up\"\n            onOkButtonClick={() => formikRegister.submitForm()}\n            onVisibilityChange={() => setModalVisibility(!modalVisibility)}\n          >\n            <form onSubmit={formikRegister.handleSubmit}>\n              <div className=\"flex justify-between\">\n                <div>\n                  <label htmlFor=\"firstName\" className=\"text-xs block\">First Name:</label>\n                  <input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.firstName}\n                    className=\"input-pri\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"lastName\" className=\"text-xs block\">Last Name:</label>\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.lastName}\n                    className=\"input-pri\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex justify-between\">\n                <div>\n                  <label htmlFor=\"email-adress\" className=\"text-xs block\">Email adress:</label>\n                  <input\n                    id=\"emailAdress\"\n                    name=\"emailAdress\"\n                    type=\"email\"\n                    placeholder=\"Email-adress\"\n                    onChange={formikRegister.handleChange}\n                    onBlur={checkEmail}\n                    value={formikRegister.values.emailAdress}\n                    className=\"input-pri\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"password\" className=\"text-xs block\">Password:</label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.password}\n                    className=\"input-pri\"\n                  />\n                </div>\n              </div>\n              <p className=\"text-red-500 mb-4\">{status}</p>\n            </form>\n          </ModalDialog>\n        )}\n    </div>\n  );\n};\n\nexport default RegisterButton;\n","import { useState, useEffect } from 'react';\nimport supabase from '../utils/supabase';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst useUserInfo = (id: string | null) => {\n  const [data, setData] = useState<IProfile[] | null>();\n  useEffect(() => {\n    if (!id) return;\n    const getUser = async () => {\n      const { data: user } = await supabase\n        .from<IProfile>('profiles')\n        .select(`\n      *\n    `).eq('id', id);\n      setData(user);\n    };\n    getUser();\n  }, [id]);\n\n  if (data?.[0]?.id !== id) {\n    return null;\n  }\n\n  return id ? data?.[0] : null;\n};\n\nexport default useUserInfo;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport LoginButton from './LoginButton';\nimport UserDropdown from './UserDropdown';\nimport RegisterButton from './RegisterButton';\nimport { isLoggedIn, useUser, useUserUpdate, isAdmin } from './UserContext';\nimport supabase from '../utils/supabase';\nimport useUserInfo from '../hooks/useUserInfo';\n\nconst Navigation = () => {\n  const loggedUser = useUser();\n\n  const setUser = useUserUpdate();\n  const [toggle, setToggled] = useState(false);\n  const history = useHistory();\n  const userInfo = useUserInfo(loggedUser?.id ?? null);\n  const [items, setItems] = useState([{ link: '/user', label: 'User Profile' }, { link: '/user/books', label: 'User Books' }]);\n\n  useEffect(() => {\n    if (isAdmin(userInfo)) {\n      setItems([{ link: '/user', label: 'User Profile' }, { link: '/user/books', label: 'User Books' },\n      { link: '/admin/owned', label: 'Owned' }, { link: '/admin/store', label: 'Store' }]);\n    } else {\n      setItems([{ link: '/user', label: 'User Profile' }, { link: '/user/books', label: 'User Books' }]);\n    }\n  }, [userInfo]);\n\n  const logout = () => {\n    if (setUser) {\n      setUser({\n        id: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        avatarUrl: '',\n      });\n    }\n    supabase.auth.signOut();\n    history.push('/');\n  };\n\n  return (\n    <nav className=\"bg-gray-700 shadow dark:bg-gray-800\">\n      <div className=\"container px-6 py-3 mx-auto md:flex md:justify-between md:items-center\">\n        <div className=\"flex items-center justify-between\">\n          <Link to=\"/\">\n            <div>\n              <span className=\"text-xl font-bold text-white dark:text-white md:text-2xl\">\n                Books\n              </span>\n            </div>\n          </Link>\n          <button\n            type=\"button\"\n            className=\"border-gray-400 text-gray-200 rounded-md border max-h-full px-1\n            transition duration-500 ease-in-out hover:bg-gray-200 hover:text-gray-700 md:hidden\"\n            onClick={() => setToggled(!toggle)}\n          >\n            ☰\n          </button>\n        </div>\n\n        <div className={toggle ? 'block items-center md:flex' : 'hidden md:block items-center'}>\n          <div className=\"flex flex-col md:flex-row my-2 md:my-0 md:mx-6\">\n            <button\n              type=\"button\"\n              className=\"btn-nav text-left relative\"\n            >\n              <Link\n                to=\"/\"\n              >\n                Home\n              </Link>\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn-nav text-left relative\"\n            >\n              <Link\n                to=\"/books-list\"\n              >\n                Book List\n              </Link>\n            </button>\n\n            {isLoggedIn() ? (\n              <UserDropdown\n                title={loggedUser?.email}\n                items={items}\n                logOut={logout}\n              />\n            ) : (\n              <>\n                <LoginButton />\n                <RegisterButton />\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { FC } from 'react';\n\ninterface ISpecsTableProps {\n  items: ISpecsItem[]\n}\n\ninterface ISpecsItem {\n  key: string\n  value: string\n}\n\nconst SpecificationTable: FC<ISpecsTableProps> = ({ items }) => {\n  const tableRows = [];\n  for (let i = 0; i < items.length; i++) {\n      tableRows.push(\n        <div className=\"flex flex-wrap flex-col md:flex-row justify-between border-b\">\n          <div className=\"max-w-1/2 md:text-right p-2 mr-10 text-gray-500\">{items[i].key}</div>\n          <div className=\"max-w-1/2 p-2\">{items[i].value}</div>\n        </div>\n);\n  }\n  return (\n    <div>\n      {tableRows}\n    </div>\n  );\n};\n\nexport default SpecificationTable;\n","import { FC, useState } from 'react';\nimport { ITab } from '../interfaces/ITab.interface';\n\ninterface ITablistProps {\n  tabs: ITab[],\n  defaultTab: number\n}\n\nconst Tablist: FC<ITablistProps> = ({ tabs, defaultTab }) => {\n  const [currTabID, setCurrTabID] = useState(defaultTab);\n\n  const tabChangeHandler = (newTabId: number) => {\n    setCurrTabID(newTabId);\n  };\n\n  const tabTitleElements = [];\n  for (let i = 0; i < tabs.length; i++) {\n    tabTitleElements.push(\n      <button\n        type=\"button\"\n        className=\"flex-initial p-4 cursor-pointer auto-rows-min border-r border-gray-300\"\n        onClick={() => tabChangeHandler(i)}\n      >\n        {tabs[i].title}\n      </button>\n);\n  }\n\n  // todo: set the height of the tablist to the maximum height of a tab content\n  return (\n    <div\n      className=\"grid grid-rows-2 grid-cols-1 shadow-md border border-gray-400\"\n      style={{ gridTemplateRows: 'min-content auto' }}\n    >\n      <div className=\"flex border-b border-gray-300\">\n        {tabTitleElements}\n      </div>\n      <div className=\"p-1 md:p-4\">\n        {tabs[currTabID].content}\n      </div>\n    </div>\n  );\n};\n\nexport default Tablist;\n","import { useState, FC, useEffect } from 'react';\nimport { IBook } from '../interfaces/IBook.interface';\nimport getBookImage from '../utils/utils';\nimport BorrowBook from './BorrowBook';\nimport Rating from './Rating';\nimport SpecificationTable from './SpecificationTable';\nimport Tablist from './Tablist';\nimport { useUser } from './UserContext';\n\ninterface IBookInfoProps {\n  book: IBook\n}\n\nconst BookInfo: FC<IBookInfoProps> = ({ book }) => {\n  const [specsTabList] = useState([{\n    key: 'Rok wydania',\n    value: book.publishedDate,\n  }, {\n    key: 'ID',\n    value: book.id,\n  }, {\n    key: 'Tytul',\n    value: book.title,\n  }, {\n    key: 'ISBN',\n    value: book.isbn,\n  }, {\n    key: 'Autorzy',\n    value: book.authors?.join(', '),\n  }, {\n    key: 'Kategorie',\n    value: book.categories?.join(', '),\n  }]);\n\n  const [tabList] = useState([{\n    title: 'Szczegóły',\n    content:\n  <div className=\"flex justify-center p-1 md:p-4\">\n    <SpecificationTable items={specsTabList} />\n  </div>,\n  }]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const [enlarged, setEnlarged] = useState(false);\n  const loggedUser = useUser();\n\n  return (\n    <div className=\"w-11/12 m-auto mt-8\">\n      <div className=\"md:w-11/12 m-auto flex flex-wrap flex-col md:flex-row items-start\">\n        <div className=\"m-auto flex flex-wrap flex-col items-start md:flex-row md:w-2/6\">\n          <img\n            onClick={() => setEnlarged(true)}\n            src={book.imageLinks[0]}\n            alt=\"A book.\"\n            className=\"m-auto md:w-1/3 max-h-56 object-scale-down\n            transform hover:scale-110 cursor-pointer w-32 pr-2\n            transition duration-400 ease-in-out hover:-translate-y-1\"\n          />\n        </div>\n        <div className=\"lg:w-2/3 flex-col lg:flex-row flex flex-wrap\">\n          <div className=\"lg:w-6/12 flex flex-auto flex-col\">\n            <span className=\"text-xl\">{book.title}</span> <br />\n            <div className=\"flex\">\n              <div className=\"w-1/2 text-gray-600\">{book.categories?.join(', ')}</div>\n              <div className=\"w-1/2 text-right text-gray-600\">{book.authors?.join(', ')}</div>\n            </div>\n            <div className=\"mt-12 text-sm text-gray-700 text-justify\">\n              {book.description}\n            </div>\n          </div>\n          <div className=\"lg:w-2/12 mt-4 lg:ml-4\">\n            <Rating bare={false} votesAmount={book.votesAmount} avgRating={book.avgRating} />\n            <BorrowBook\n              bookId={book.id}\n              profileId={loggedUser?.id}\n              date={new Date()}\n              returnDate={new Date(new Date().setMonth(new Date().getMonth() + 1))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"w-full md:w-2/3 mt-8 m-auto\">\n        <Tablist tabs={tabList} defaultTab={0} />\n      </div>\n      {enlarged && (\n        <div\n          className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\"\n          onClick={() => setEnlarged(false)}\n        >\n          <div className=\"relative m-auto flex-col flex rounded-md shadow-xl transform scale-150\">\n            <img src={getBookImage(book)} alt=\"A book.\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookInfo;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BookInfo from '../components/BookInfo';\nimport Sidebar from '../components/Sidebar';\nimport { IBook } from '../interfaces/IBook.interface';\nimport supabase from '../utils/supabase';\n\ninterface BookInfoURLParams {\n  id: string\n}\n\nconst BookInfoPage = () => {\n  const params = useParams<BookInfoURLParams>();\n  const [book, setBook] = useState<IBook>();\n\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const { data } = await supabase\n        .from<IBook>('books')\n        .select('*')\n        .eq('id', params.id);\n      if (data !== null) {\n        setBook(data[0]);\n      }\n    };\n    getAllBooks();\n  }, [params]);\n  return book ? (\n    <div className=\"content-container\">\n      <Sidebar />\n      <div className=\"mt-16 w-full\">\n        <BookInfo book={book} />\n      </div>\n    </div>\n) : <span>Book doesn&apos;t exist</span>;\n};\n\nexport default BookInfoPage;\n","import { PostgrestError } from '@supabase/supabase-js';\nimport React, { FC, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { supabase } from '../utils/supabase';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  onBookDelete: () => void;\n}\nconst DeleteBook: FC<IBookProps> = ({ id, onBookDelete, title }) => {\n  const [modal, setModal] = useState(false);\n  const [err, setErr] = useState<PostgrestError | null>();\n  const Delete = async () => {\n    const { error } = await supabase\n      .from('books')\n      .delete()\n      .match({ id });\n      setErr(error);\n    onBookDelete();\n  };\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"btn-page\"\n        onClick={() => setModal(true)}\n      >\n        - Delete book\n      </button>\n      {modal && (\n        <div\n          className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\"\n          onClick={() => setModal(false)}\n        >\n          <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n            <p>Are you sure you want to delete this book from the stock: &quot;{title}&quot;?</p>\n            <button\n              type=\"button\"\n              className=\"btn-page\"\n              onClick={Delete}\n            >\n              - Delete book from stock\n            </button>\n          </div>\n        </div>\n      )}\n      {err && (\n        toast.error('There was a problem with deleting this book!', {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          })\n      )}\n    </div>\n  );\n};\n\nexport default DeleteBook;\n","import React, { FC } from 'react';\nimport DeleteBook from './DeleteBook';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  image: string;\n  isbn: string;\n  authors?: string[];\n  categories?: string[];\n  quantity?: number;\n  onBookDelete: () => void;\n}\n\nconst OwnedBook: FC<IBookProps> = ({\n  id,\n  title,\n  authors,\n  image,\n  categories,\n  quantity,\n  onBookDelete,\n}) => {\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-100 shadow-md p-3 m-3 mx-6\">\n      <img\n        src={image}\n        alt=\"A book.\"\n        className=\"m-3 w-32\"\n      />\n      <div className=\"ml-2 w-full flex flex-col\">\n        {/* <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">{title}</span> */}\n        {title}\n        <span className=\"text-gray-400\">{authors?.join(' ')}</span>\n        <span className=\"text-gray-400\">{categories}</span>\n        <span className=\"text-gray-400\">Quantity of books in stock: {quantity}</span>\n      </div>\n      <div>\n        <DeleteBook\n          id={id}\n          title={title}\n          onBookDelete={onBookDelete}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default OwnedBook;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SidebarAdmin = () => {\n  const [toggle, setToggled] = useState(true);\n\n  return (\n    <div className=\"flex justify-between bg-white\">\n      <div className={`bg-white inline z-40 ${toggle ? 'hidden' : 'fixed lg:static'}`}>\n        <button\n          type=\"button\"\n          className=\"btn-sidebar\"\n          onClick={() => setToggled(!toggle)}\n        >\n          ⮜\n        </button>\n      </div>\n      <div\n        className={`lg:block z-30 inset-0 flex-none h-full lg:h-auto bg-white ml-6 lg:mt-0 lg:ml-0 pb-10 lg:pt-0\n        w-72 shadow-sm dark:bg-gray-800 overflow-y-auto lg:overflow-y-visible ${toggle ? 'hidden' : 'fixed lg:static'}`}\n      >\n        <div className=\"items-center justify-between scrolling-touch fixed top-14 max-h-screen overflow-y-auto pb-8\">\n          <div className=\"border-b border-gray-400 mx-4 my-5 pl-2 text-l font-bold\">\n            Admin sidebar\n          </div>\n          <nav className=\"mx-4 my-3\">\n            <Link to=\"/admin/owned\">\n              <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n                In stock\n              </div>\n            </Link>\n            <Link to=\"/admin/store\">\n              <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n                All goods\n              </div>\n            </Link>\n          </nav>\n        </div>\n      </div>\n      <div className={`inline z-40 ${toggle ? 'fixed' : 'hidden'}`}>\n        <button\n          type=\"button\"\n          className=\"btn-sidebar\"\n          onClick={() => setToggled(!toggle)}\n        >\n          ⮞\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarAdmin;\n","import React, { useState, useEffect } from 'react';\nimport { IBook } from '../interfaces/IBook.interface';\nimport supabase from '../utils/supabase';\nimport OwnedBook from '../components/OwnedBook';\nimport SidebarAdmin from '../components/SidebarAdmin';\n\nconst BookListViewAdmin = () => {\n  const [dataSupabase, setDataSupabase] = useState<IBook[] | null>([]);\n  const getAllBooks = async () => {\n    const { data: books } = await supabase\n      .from<IBook>('books')\n      .select('*');\n    if (books !== null) {\n      setDataSupabase(books);\n    }\n  };\n  useEffect(() => {\n    getAllBooks();\n  }, []);\n  return (\n    <div className=\"container w-full h-full max-w-8xl mx-auto flex mt-12 z-10\">\n      <SidebarAdmin />\n      <div className=\"min-w-0 w-full pl-5 pt-3 flex-auto lg:static lg:max-h-full lg:overflow-visible shadow-inner\">\n        {dataSupabase && dataSupabase?.map((book) => (\n          <OwnedBook\n            key={book.id}\n            id={book.id}\n            title={book.title}\n            image={book.imageLinks[0]}\n            isbn={book.isbn}\n            authors={book.authors}\n            publishedDate={book.publishedDate}\n            categories={book.categories}\n            description={book.description}\n            quantity={book.quantity}\n            onBookDelete={getAllBooks}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default BookListViewAdmin;\n","import React, { FC } from 'react';\nimport { supabase } from '../utils/supabase';\nimport { IBook } from '../interfaces/IBook.interface';\n\ninterface IBookProps {\n  id?: string;\n  quantity?: number;\n  onQuantityUpdate: (quantity: number) => void;\n}\n\nconst UpdateBook: FC<IBookProps> = ({ id, quantity, onQuantityUpdate }) => {\n  const Update = async () => {\n    await supabase.from<IBook>('books')\n      .update({ quantity })\n      .match({ id });\n    onQuantityUpdate(quantity ?? 0);\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"btn-page\"\n        onClick={Update}\n      >\n        + Add books to the stock\n      </button>\n    </div>\n  );\n};\n\nexport default UpdateBook;\n","import React, { FC, useState } from 'react';\nimport { PostgrestError } from '@supabase/supabase-js';\nimport { toast } from 'react-toastify';\nimport { supabase } from '../utils/supabase';\nimport { IBook } from '../interfaces/IBook.interface';\nimport { useUser } from './UserContext';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  image: string;\n  isbn: string;\n  authors?: string[];\n  categories?: string[];\n  quantity: number;\n}\n\nconst AddBook: FC<IBookProps> = ({ id, title, authors, image, description, isbn, publishedDate, categories, quantity }) => {\n  const globalUser = useUser();\n  const [err, setErr] = useState<PostgrestError | null>();\n  const addToStore = async () => {\n    const { error } = await supabase\n    .from<IBook>('books')\n    .insert({\n      id,\n      title,\n      description,\n      publishedDate,\n      categories,\n      isbn,\n      imageLinks: [image],\n      authors,\n      votesAmount: Math.floor(Math.random() * 1000) + 1,\n      avgRating: Math.floor(Math.random() * 10) + 1,\n      addedById: globalUser?.id,\n      addedDate: new Date(),\n      quantity,\n    });\n    setErr(error);\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"btn-page\"\n        onClick={addToStore}\n      >\n        + Dodaj książkę do magazynu\n      </button>\n      {err && (\n        toast.error(err.message, {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        })\n      )}\n    </div>\n  );\n};\n\nexport default AddBook;\n","import React, { FC, useState, useEffect } from 'react';\nimport UpdateBook from './UpdateBook';\nimport supabase from '../utils/supabase';\nimport AddBook from './AddBook';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  image: string;\n  isbn: string;\n  authors?: string[];\n  categories?: string[];\n  quantity?: number;\n}\n\nconst StoreBook: FC<IBookProps> = ({\n  id,\n  title,\n  authors,\n  image,\n  publishedDate,\n  categories,\n  description,\n  isbn,\n}) => {\n  const [quantityInput, setQuantityInput] = useState('1');\n  const [quantity, setQuantity] = useState<number | null>(null);\n  const [data, setData] = useState<IBookProps[] | null>([]);\n\n  useEffect(() => {\n    const getBookData = async () => {\n      const { data: bookData } = await supabase\n        .from<IBookProps>('books')\n        .select(`\n      id, quantity\n    `).eq('id', id);\n      if (bookData !== null) {\n        setData(bookData);\n        setQuantity(bookData[0]?.quantity ?? 0);\n      }\n    };\n    getBookData();\n  }, [id]);\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-100 shadow-md p-3 m-3 mx-6\">\n      <img\n        src={image}\n        alt=\"A book.\"\n        className=\"transform m-3 w-32\"\n      />\n      <div className=\"ml-2 w-full flex flex-col\">\n        {/* <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">{title}</span> */}\n        {title}\n        <span className=\"text-gray-400\">{authors?.join(' ')}</span>\n        <span className=\"text-gray-400\">{categories}</span>\n      </div>\n      <div>\n        <p>Quantity:</p>\n        <input\n          id=\"quantity\"\n          name=\"quantity\"\n          type=\"number\"\n          onChange={(event) => setQuantityInput(event.target.value)}\n        />\n        {data?.length !== 0 && (\n          <div>\n            <div className=\"bg-red-500 text-white\">In a stock: {quantity} </div>\n            <UpdateBook\n              id={id}\n              quantity={Number(quantityInput) + (quantity ?? 0)}\n              onQuantityUpdate={(q) => setQuantity(q)}\n            />\n          </div>\n        )}\n        {data?.length === 0 && (\n          <AddBook\n            id={id}\n            title={title}\n            authors={authors}\n            image={image}\n            description={description}\n            isbn={isbn}\n            publishedDate={publishedDate}\n            categories={categories}\n            quantity={Number(quantityInput)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StoreBook;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { IGoogleBooksAPIVolumes } from '../interfaces/IGoogleBooksAPIVolumes.interface';\nimport StoreBook from '../components/StoreBook';\n\nconst BookListViewAdminStore = () => {\n  const [dataAPI, setDataAPI] = useState<IGoogleBooksAPIVolumes>();\n  const [error, setError] = useState<boolean>();\n  const [filter, setFilter] = useState('book');\n  const formikFilter = useFormik({\n    initialValues: {\n      filter: '',\n    },\n  onSubmit: (values) => {\n    setFilter(values.filter);\n  },\n});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setError(false);\n        const res = await axios.get(`https://www.googleapis.com/books/v1/volumes?q=${filter}`);\n        setDataAPI(res.data);\n      } catch (e) {\n        setError(true);\n      }\n    };\n    fetchData();\n  }, [filter]);\n  return (\n    <div>\n      <form onSubmit={formikFilter.handleSubmit}>\n        <input\n          id=\"filter\"\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={formikFilter.handleChange}\n          className=\"input-pri\"\n        />\n      </form>\n      <div>\n        {dataAPI && dataAPI?.items.map((book) => (\n          <StoreBook\n            key={book.id ?? 'N/D'}\n            id={book.id ?? 'N/D'}\n            title={book.volumeInfo.title ?? 'N/D'}\n            description={book.volumeInfo.description ?? 'N/D'}\n            publishedDate={book.volumeInfo.publishedDate ?? 'N/D'}\n            image={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : `${process.env.PUBLIC_URL}/image-not-found.png`}\n            authors={book.volumeInfo.authors}\n            categories={book.volumeInfo.categories ?? ['N/D']}\n            isbn={(book.volumeInfo.industryIdentifiers ? book.volumeInfo.industryIdentifiers[0].identifier : 'N/D')}\n          />\n          ))}\n        {error && <p className=\"text-red-600\">There was an error while trying to fetch data!</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default BookListViewAdminStore;\n","import React from 'react';\nimport {\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { IProfile } from '../interfaces/IProfile.interface';\nimport { isAdmin } from './UserContext';\n\ninterface IPrivateRouteProps {\n  path: string;\n  exact: boolean;\n  user: IProfile | null;\n}\n\nconst PrivateRoute: React.FC<IPrivateRouteProps> = ({ path, exact, user, children }) => {\n    return isAdmin(user) ? (<Route path={path} exact={exact}> {children} </Route>)\n    : (<Redirect to=\"/\" />);\n  };\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { useLocation } from 'react-router';\n\nconst NoMatch404 = () => {\n  const location = useLocation();\n\n  return (\n    <div className=\"flex flex-col items-center w-full\">\n      <h1 className=\"text-9xl tracking-wider\">404</h1>\n      <h3 className=\"text-3xl\">\n        No match for path: <code className=\"font-black\">{location.pathname}</code>\n      </h3>\n    </div>\n  );\n};\n\nexport default NoMatch404;\n","import React, { FC } from 'react';\n\ninterface IAvatarProps {\n    url: string\n    className: string\n}\n\nconst Avatar: FC<IAvatarProps> = ({ url, className }) => {\n    return (\n      <img\n        className={`w-32 h-32 rounded-full object-cover ${className}`}\n        src={url}\n        alt=\"Zdjęcie użytkownika\"\n      />\n    );\n};\n\nexport default Avatar;\n","import React, { useEffect, useRef, useState } from 'react';\n// To jest nasze rozwiazanie - Cezary Bula 2021\n// eslint-disable-next-line\nimport FileType from 'file-type';\nimport supabase from '../utils/supabase';\nimport { getUserAvatarURL, useUser } from './UserContext';\nimport Avatar from './Avatar';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\n\nconst EditUserComponent = () => {\n    const usr: IBasicUserInfo | null = useUser();\n    const [fileInput] = useState(useRef<HTMLInputElement>(null));\n    const [status, setStatus] = useState<string>();\n    const [avatarLink, setAvatarLink] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      await getUserAvatarURL().then((data) => {\n        if (data?.signedURL) {\n          setAvatarLink(data?.signedURL);\n        }\n      });\n    })();\n  }, [avatarLink]);\n\n  const upload = async (f: File | undefined) => {\n    if (f === undefined) {\n      setStatus('File not found.');\n      return;\n    }\n    if (!usr || !usr.id) {\n      setStatus('Unknown user');\n      return;\n    }\n    // type checking\n    const type = await FileType.fromBuffer(await f.arrayBuffer());\n    if (type?.mime !== 'image/jpeg' && type?.mime !== 'image/png') {\n      setStatus('Invalid file type. Supported types: jpg, png.');\n      return;\n    }\n\n    setStatus('Uploading...');\n    await supabase\n      .storage.from('images')\n      .remove([`avatars/${usr?.id}`]);\n\n    supabase\n      .storage.from('images/avatars')\n      .upload(`${usr?.id}`, f)\n      .then(async (data) => {\n        if (data.error !== null) {\n          throw data.error;\n        }\n        setStatus('Upload successful.');\n        const avatarUrl = await getUserAvatarURL();\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript#other_types\n        if (avatarUrl?.signedURL) {\n          setAvatarLink(avatarUrl?.signedURL);\n        }\n      }).catch((error) => {\n        setStatus(`Upload error (${JSON.stringify(error)})`);\n      });\n  };\n\n  const onUploadButtonClickHandler = () => {\n    if (fileInput?.current?.files && fileInput?.current?.files.length > 0) {\n      upload(fileInput?.current?.files[0]);\n    } else {\n      setStatus('File not selected.');\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl\">Zmiana zdjęcia użytkownika</h1>\n      <div className=\"flex flex-wrap\">\n        <Avatar url={avatarLink} className=\"\" />\n        <div className=\"flex flex-col flex-wrap place-content-end m-2\">\n          <input type=\"file\" accept=\"image/jpeg, image/png\" ref={fileInput} required />\n          <div className=\"mt-4\">\n            <button type=\"button\" onClick={onUploadButtonClickHandler}>Upload file</button>\n            <div className=\"text-xs h-4\"><label className=\"text-gray-500\">Status: </label>{status}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUserComponent;\n","import ChangeAvatarComponent from './ChangeAvatarComponent';\n\nconst EditUserComponent = () => {\n    return (\n      <div className=\"m-4\">\n        <ChangeAvatarComponent />\n      </div>\n    );\n};\n\nexport default EditUserComponent;\n","import React, { useEffect, useState } from 'react';\nimport Avatar from '../components/Avatar';\nimport EditUserComponent from '../components/EditUserComponent';\nimport { getUserAvatarURL, useUser } from '../components/UserContext';\nimport { IBasicUserInfo } from '../interfaces/IBasicUserInfo.interface';\nimport './UserpageView.css';\n// guard urla\n\nconst UserpageView = () => {\n    const usr: IBasicUserInfo | null = useUser();\n    const [avatarUrl, setAvatarLink] = useState('');\n    const styleBg = {\n        // eslint-disable-next-line max-len\n        backgroundImage: 'url(https://image.freepik.com/free-photo/hand-painted-watercolor-background-with-sky-clouds-shape_24972-1095.jpg)',\n    };\n\n    useEffect(() => {\n      (async () => {\n          await getUserAvatarURL().then((data) => {\n              if (data?.signedURL) {\n                setAvatarLink(data?.signedURL);\n              }\n          });\n      })();\n  }, []);\n\n    return (\n      <div className=\"container mx-auto mt-16\">\n        <div className=\"h-32 bg-gray-500 bg-no-repeat bg-center\" style={styleBg} />\n        <div className=\"mx-16 bg-white relative -top-4 z-30\">\n          <div className=\"shadow-md\">\n            <div className=\"flex flex-col md:flex-row\">\n              <div className=\"w-1/4 relative h-24\">\n                <Avatar url={avatarUrl} className=\"relative -top-16 left-2\" />\n              </div>\n              <div className=\"mt-2 w-1/2\">\n                <div className=\"flex uppercase\">\n                  <div className=\"w-min md:mr-2 first-l\">{usr?.firstName}</div>\n                  <div className=\"w-min first-l\">{usr?.lastName}</div>\n                </div>\n              </div>\n              <div className=\"text-gray-400 w-1/4 flex justify-end p-4\">\n                ROLA USERA\n              </div>\n            </div>\n            <div className=\"p-2\">\n              <EditUserComponent />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n};\n\nexport default UserpageView;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Slide = ({ id = '', title = '', author = '', image = '' }) => {\n  return (\n    <Link to={`/book/${id}`} className=\"flex flex-col justify-center items-center text-center h-72 w-64 \">\n      <img src={image} alt={title} className=\"w-48 h-64 overflow-hidden\" />\n      {`${title}\\n`}\n      <span className=\"text-gray-500 text-sm\">{author}</span>\n    </Link>\n  );\n};\n\nexport default Slide;\n","import { useState, useEffect, FC } from 'react';\nimport Slide from './Slide';\n\ninterface ISliderProps {\n  entryCount: number;\n  entries: {\n    id: string;\n    title: string;\n    authors: string[];\n    image: string;\n  }[];\n}\n\nconst Slider: FC<ISliderProps> = ({ entryCount, entries }) => {\n  const [index, setIndex] = useState(0);\n  // eslint-disable-next-line\n  const [timer, setTimer] = useState<any>();\n  const delay = 2200;\n\n  useEffect(() => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    const newTimer = setTimeout(() => {\n      const changeIndex = () => {\n        if (index === entryCount - 1) return setIndex(0);\n        return setIndex((old) => old + 1);\n      };\n      changeIndex();\n    }, delay);\n    setTimer(newTimer);\n    // eslint-disable-next-line\n  }, [index]);\n\n  const changeSlide = (dir = 0) => {\n    const newIndex = index + dir;\n\n    if (newIndex >= entryCount) return setIndex(0);\n    if (newIndex <= -1) return setIndex(entryCount - 1);\n\n    return setIndex(newIndex);\n  };\n\n  return (\n    <div className=\"flex place-content-start mt-2 ml-6\">\n      <div className=\"flex flex-col items-center bg-gray-50 shadow p-2\">\n        <Slide\n          id={entries[index]?.id}\n          title={entries[index]?.title}\n          author={entries[index]?.authors?.join(' ')}\n          image={entries[index]?.image}\n        />\n        <div className=\"flex flex-row\">\n          <button\n            className=\"btn-page px-2\"\n            type=\"button\"\n            onClick={() => changeSlide(-1)}\n          >\n            ⮜\n          </button>\n          <div className=\"w-80\" />\n          <button\n            className=\"btn-page px-2\"\n            type=\"button\"\n            onClick={() => changeSlide(1)}\n          >\n            ⮞\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useEffect, useState } from 'react';\nimport Slider from '../components/Slider';\nimport { IBook } from '../interfaces/IBook.interface';\nimport { ISupplierBook } from '../interfaces/ISupplierBook.interface';\nimport supabase from '../utils/supabase';\n\nconst SliderDemo = () => {\n  const [data, setData] = useState<IBook[] | null>([]);\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const { data: books } = await supabase\n        .from<IBook>('books')\n        .select(`\n      *\n    `);\n      setData(books);\n    };\n    getAllBooks();\n  }, []);\n\n  if (data) {\n    return (\n      <Slider\n        entries={data?.map((book: ISupplierBook) => {\n          return {\n            id: book.id,\n            title: book.title,\n            authors: book.authors,\n            image: book.imageLinks[0],\n          };\n        })}\n        entryCount={data.length}\n      />\n    );\n  }\n  return <p>Loading...</p>;\n};\n\nexport default SliderDemo;\n","import React, { FC } from 'react';\nimport { IBook } from '../interfaces/IBook.interface';\nimport getBookImage from '../utils/utils';\nimport Rating from './Rating';\nimport './Book.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\ninterface IBookProps {\n  book: IBook;\n  returnDate: Date;\n  date: Date;\n}\n\nconst BorrowedBook: FC<IBookProps> = ({\n  book,\n  returnDate,\n  date,\n}) => {\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-50 shadow p-3 m-3 mx-6\">\n      <div className=\"m-3 flex justify-center flex-wrap flex-col\">\n        <div>\n          <img\n            src={getBookImage(book)}\n            alt={`Zdjecie okladki ${book.title ?? 'N/D'}`}\n            className=\"transform hover:scale-110 cursor-pointer w-32\n            transition duration-400 ease-in-out hover:-translate-y-1\"\n          />\n        </div>\n      </div>\n      <div className=\"ml-2 mb-4 md:mb-0 w-full\">\n        <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">\n          {book.title ?? 'N/D'}\n        </span>\n        <div className=\"text-gray-400 flex flex-col\">\n          <span>{book.authors?.join(' ') ?? 'N/D'}</span>\n          <span>{book.categories ?? 'N/D'}</span>\n          <div className=\"overflow-hidden max-h-20 book-desc\">{book.description ?? 'N/D'}</div>\n          <div className=\"flex h-4 mt-2\">\n            <Rating votesAmount={book.votesAmount} avgRating={book.avgRating} bare />\n          </div>\n        </div>\n        <p className=\"text-right\">Date: {date}</p>\n        <p className=\"text-right\">Return date: {returnDate}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BorrowedBook;\n","import React, { useState, useEffect } from 'react';\nimport supabase from '../utils/supabase';\nimport { useUser } from '../components/UserContext';\nimport { IBook } from '../interfaces/IBook.interface';\nimport BorrowedBook from '../components/BorrowedBook';\n\ninterface IBookProfileId {\n  book: IBook;\n  date: Date;\n  returnDate: Date;\n  profileId: string | undefined;\n}\nconst BorrowedBooksView = () => {\n  const [info, setInfo] = useState<null | IBookProfileId[]>([]);\n  const loggedUser = useUser();\n\n  useEffect(() => {\n    const getBorrowedBooks = async () => {\n      const { data } = await supabase\n        .from<IBookProfileId>('borrowedBooks')\n        .select('date, returnDate, book:books(*)')\n        .eq('profileId', loggedUser?.id);\n      if (data !== null) {\n        setInfo(data);\n      }\n    };\n    getBorrowedBooks();\n  }, [loggedUser]);\n\n  return (\n    <div>\n      {info && info?.map((book) => (\n        <BorrowedBook key={book.book.id} book={book.book} returnDate={book.returnDate} date={book.date} />\n      ))}\n      {info && info?.length < 1 && (\n        <div> NIE MA </div>\n      )}\n    </div>\n  );\n};\n\nexport default BorrowedBooksView;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport BookListView from '../views/BookListView';\nimport Navigation from './Navigation';\nimport BookInfoPage from '../views/BookInfoView';\nimport BookListViewAdminOwned from '../views/BookListViewAdminOwned';\nimport BookListViewAdminStore from '../views/BookListViewAdminStore';\nimport PrivateRoute from './PrivateRoute';\nimport { useUser } from './UserContext';\nimport useUserInfo from '../hooks/useUserInfo';\nimport NoMatch404 from './NoMatch404';\nimport UserpageView from '../views/UserpageView';\nimport SliderDemo from '../views/SliderDemo';\nimport BorrowedBooksView from '../views/BorrowedBooksView';\n\nconst AddRouter = () => {\n  const loggedUser = useUser();\n  const userInfo = useUserInfo(loggedUser?.id ?? null);\n\n  return (\n    <div className=\"h-full\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <header className=\"fixed w-full top-0 h-10 z-50\">\n          <Navigation />\n        </header>\n        <Switch>\n          <Route path=\"/internships-2021\" exact>\n            <Redirect to=\"/\" />\n          </Route>\n          <Route path=\"/\" exact>\n            <SliderDemo />\n          </Route>\n          <Route path=\"/user\" exact>\n            <UserpageView />\n          </Route>\n          <Route path=\"/user/books\" exact>\n            <BorrowedBooksView />\n          </Route>\n          <PrivateRoute path=\"/admin/owned\" exact user={userInfo}>\n            <BookListViewAdminOwned />\n          </PrivateRoute>\n          <PrivateRoute path=\"/admin/store\" exact user={userInfo}>\n            <BookListViewAdminStore />\n          </PrivateRoute>\n          <Route path=\"/books-list\" exact>\n            <Redirect to=\"/books-list/*/0\" />\n          </Route>\n          <Route path=\"/books-list/:q?/:rating?\">\n            <BookListView />\n          </Route>\n          <Route path=\"/book/:id\" exact>\n            <BookInfoPage />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch404 />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default AddRouter;\n","import { UserProvider } from './UserContext';\nimport AddRouter from './Router';\n\nconst App = () => {\n  return (\n    <UserProvider>\n      <AddRouter />\n    </UserProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Slide, ToastContainer } from 'react-toastify';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastContainer\n      position=\"top-right\"\n      transition={Slide}\n      autoClose={6000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n    />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}