{"version":3,"sources":["utils/supabase.ts","hooks/useSupaBase.ts","hooks/useProfile.ts","components/Navigation.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["supabaseUrl","String","process","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_TOKEN","supabase","createClient","useSupaBase","asyncFunction","useState","status","setStatus","response","setResponse","undefined","error","setError","execute","useCallback","a","useEffect","useProfile","id","supabaseQuery","from","select","eq","Navigation","className","to","App","fetchCallback","auth","signUp","email","password","user","insert","firstName","lastName","then","catch","path","exact","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAEMA,EAAcC,OAAOC,oJAAYC,wBACjCC,EAAcH,OAAOC,oJAAYG,0BAKxBC,EAJSC,YAAaP,EAAaI,G,QCgCnCI,EAhCK,SAClBC,GAMA,MAA4BC,mBAAiB,QAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,mBAAmB,MAAnD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,wBAAkBK,GAA5C,mBAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAUC,sBAAW,sBAAC,sBAAAC,EAAA,6DAC1BR,EAAU,WACVE,EAAY,MACZG,EAAS,MAHiB,cAKxBH,EALwB,SAKNL,IALM,kCAMxBG,EAAU,WANc,kDAQxBK,EAAS,EAAD,IACRL,EAAU,SATc,0DAWzB,CAACH,IAMJ,OAJAY,qBAAU,WACRH,MACC,CAACA,IAEG,CAAEP,SAAQE,WAAUG,UCVdM,EAhBI,SAACC,GAElB,IAAMC,EAAgBL,sBAAW,sBAAC,sBAAAC,EAAA,+EACzBd,EACJmB,KAAmB,YACnBC,OAFI,uBAKJC,GAAG,KAAMJ,IANoB,2CAO/B,CACDA,IAGF,OAAOf,EAAYgB,I,OC4BNI,MA9Cf,WACE,OACE,8BACE,qBAAKC,UAAU,mCAAf,SACE,sBAAKA,UAAU,yEAAf,UACE,qBAAKA,UAAU,oCAAf,SACE,8BACE,sBAAMA,UAAU,2GAAhB,yBAMJ,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,oCAAf,UAEE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAU,6IAFZ,kBAOA,cAAC,IAAD,CACEC,GAAG,QACHD,UAAU,6IAFZ,kBAOA,cAAC,IAAD,CACEC,GAAG,SACHD,UAAU,yJAFZ,gCCmCCE,MAvDf,WAEYT,EAAW,wCAArB,IAEMU,EAAgBb,sBAAW,sBAAC,8BAAAC,EAAA,sEAEFd,EAAS2B,KAAKC,OAAO,CACjDC,MAAO,qBACPC,SAAU,yBAJoB,mBAExBC,EAFwB,EAExBA,KAFwB,EAElBrB,OAIVqB,EAN4B,gCAOxB/B,EAASmB,KAAe,YAAYa,OAAO,CAC/Cf,GAAIc,EAAKd,GACTgB,UAAW,KACXC,SAAU,SAVkB,2CAa/B,IAMH,OAJAnB,qBAAU,WACRW,IAAgBS,OAAOC,UACtB,CAACV,IAGF,qBAAKH,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,KAAK,oBAAoBC,OAAK,EAArC,SACE,cAAC,IAAD,CAAUd,GAAG,QAEf,eAAC,IAAD,CAAOa,KAAK,IAAIC,OAAK,EAArB,iBAEE,yBAAQf,UAAU,aAAlB,UACE,sCACO,+CADP,0BAGA,mBACEA,UAAU,WACVgB,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,gCAUJ,cAAC,IAAD,CAAOJ,KAAK,QAAQC,OAAK,IACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,aC9CrBI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae1b14f0.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = String(process.env.REACT_APP_SUPABASE_URL);\nconst supabaseKey = String(process.env.REACT_APP_SUPABASE_TOKEN);\nexport const supabase = createClient(supabaseUrl, supabaseKey);\n\n// REACT_APP_SUPABASE_URL=xxx REACT_APP_SUPABASE_TOKEN=xxx npm run start\n\nexport default supabase;\n","import { useCallback, useEffect, useState } from 'react';\n\ntype Status = 'idle' | 'pending' | 'success' | 'error';\n\nconst useSupaBase = <R = unknown>(\n  asyncFunction: (...args: unknown[]) => Promise<R>,\n): {\n  status: Status,\n  response: R | null,\n  error: unknown,\n} => {\n  const [status, setStatus] = useState<Status>('idle');\n  const [response, setResponse] = useState<R | null>(null);\n  const [error, setError] = useState<unknown>(undefined);\n\n  // eslint-disable-next-line space-before-function-paren\n  const execute = useCallback(async () => {\n    setStatus('pending');\n    setResponse(null);\n    setError(null);\n    try {\n      setResponse(await asyncFunction());\n      setStatus('success');\n    } catch (err) {\n      setError(err);\n      setStatus('error');\n    }\n  }, [asyncFunction]);\n\n  useEffect(() => {\n    execute();\n  }, [execute]);\n\n  return { status, response, error };\n};\n\nexport default useSupaBase;\n","import { useCallback } from 'react';\nimport supabase from '../utils/supabase';\nimport { IProfile } from '../interfaces/IProfile.interface';\nimport useSupaBase from './useSupaBase';\n\ntype ProfileQuery = IProfile;\n\nconst useProfile = (id: string) => {\n  // eslint-disable-next-line space-before-function-paren\n  const supabaseQuery = useCallback(async () => {\n    return supabase\n      .from<ProfileQuery>('profiles')\n      .select(`\n        *\n      `)\n      .eq('id', id);\n  }, [\n    id,\n  ]);\n\n  return useSupaBase(supabaseQuery);\n};\n\nexport default useProfile;\n","import { Link } from 'react-router-dom';\n\nfunction Navigation() {\n  return (\n    <div>\n      <nav className=\"bg-white shadow dark:bg-gray-800\">\n        <div className=\"container px-6 py-3 mx-auto md:flex md:justify-between md:items-center\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <span className=\"text-xl font-bold text-gray-800 dark:text-white md:text-2xl hover:text-gray-700 dark:hover:text-gray-300\">\n                Ksiazki\n              </span>\n            </div>\n          </div>\n\n          <div className=\"items-center md:flex\">\n            <div className=\"flex flex-col md:flex-row md:mx-6\">\n\n              <Link\n                to=\"/\"\n                className=\"my-1 pl-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-gray-400\"\n              >\n                Home\n              </Link>\n              <Link\n                to=\"/user\"\n                className=\"my-1 pl-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-gray-400\"\n              >\n                User\n              </Link>\n              <Link\n                to=\"/admin\"\n                className=\"my-1 px-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-r md:border-gray-400\"\n              >\n                Admin\n              </Link>\n            </div>\n          </div>\n\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React, { useCallback, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport useProfile from '../hooks/useProfile';\nimport { IProfile } from '../interfaces/IProfile.interface';\nimport supabase from '../utils/supabase';\nimport Navigation from './Navigation';\n\nfunction App() {\n  // eslint-disable-next-line space-before-function-paren\n  const a = useProfile('1e7b2a5f-7423-4cc4-aa70-003db70da303');\n  // eslint-disable-next-line space-before-function-paren\n  const fetchCallback = useCallback(async () => {\n    // eslint-disable-next-line\n    const { user, error } = await supabase.auth.signUp({\n      email: 'somesone@email.com',\n      password: 'nhLLRVQzFHZGKbGhgAAU',\n    });\n    if (user) {\n      await supabase.from<IProfile>('profiles').insert({\n        id: user.id,\n        firstName: 'fr',\n        lastName: 'rfsd',\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchCallback().then().catch();\n  }, [fetchCallback]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route path=\"/internships-2021\" exact>\n            <Redirect to=\"/\" />\n          </Route>\n          <Route path=\"/\" exact>\n            main\n            <header className=\"App-header\">\n              <p>\n                Edit <code>src/App.tsx</code> and save to reload.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn Reacta\n              </a>\n            </header>\n          </Route>\n          <Route path=\"/user\" exact />\n          <Route path=\"/admin\" exact />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}