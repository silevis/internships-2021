{"version":3,"sources":["components/UserContext.tsx","utils/supabase.ts","components/AddBook.tsx","components/Book.tsx","views/BookListView.tsx","components/Login.tsx","components/Register.tsx","components/Navigation.tsx","components/Sidebar.tsx","components/Router.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserContext","React","createContext","UserUpdateContext","useUser","useContext","UserProvider","children","useState","id","firstName","lastName","user","setUser","Provider","value","newUser","supabaseUrl","String","process","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_TOKEN","supabase","createClient","AddBook","title","authors","image","description","isbn","publishedDate","categories","globalUser","Add","a","from","insert","imageLinks","votesAmount","Math","floor","random","avgRating","addedById","addedDate","Date","type","className","onClick","Book","src","alt","join","BookListView","data","setData","error","setError","useEffect","axios","get","res","fetchData","items","map","book","volumeInfo","thumbnail","industryIdentifiers","identifier","Login","login","setLogin","formikLogin","useFormik","initialValues","emailAdress","password","onSubmit","values","auth","signIn","email","handleSubmit","htmlFor","name","placeholder","onChange","handleChange","Register","register","setRegister","formikRegister","signUp","Navigation","to","Sidebar","setValue","min","max","event","Number","target","AddRouter","basename","path","exact","href","rel","REACT_APP_ADMIN_ID","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b24870ef.chunk.js","sourcesContent":["import React, { FC, useContext, useState } from 'react';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst UserContext = React.createContext<IProfile | null>(null);\nconst UserUpdateContext = React.createContext<((newUser: IProfile) => void) | null>(null);\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n\nexport const useUserUpdate = () => {\n  return useContext(UserUpdateContext);\n};\n\nexport const UserProvider: FC = ({ children }) => {\n  const [user, setUser] = useState<IProfile>({\n    id: '',\n    firstName: '',\n    lastName: '',\n  });\n\n  const toggleUser = (newUser: IProfile) => {\n    setUser(newUser);\n  };\n\n  return (\n    <UserContext.Provider value={user}>\n      <UserUpdateContext.Provider value={toggleUser}>\n        {children}\n      </UserUpdateContext.Provider>\n    </UserContext.Provider>\n  );\n};\n","import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = String(process.env.REACT_APP_SUPABASE_URL);\nconst supabaseKey = String(process.env.REACT_APP_SUPABASE_TOKEN);\nexport const supabase = createClient(supabaseUrl, supabaseKey);\n\n// REACT_APP_SUPABASE_URL=xxx REACT_APP_SUPABASE_TOKEN=xxx npm run start\n\nexport default supabase;\n","import React, { FC } from 'react';\nimport { supabase } from '../utils/supabase';\nimport { IBook } from '../interfaces/IBook.interface';\nimport { useUser } from './UserContext';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  image: string;\n  isbn: string;\n  authors?: string[];\n  categories?: string[];\n}\n\nconst AddBook: FC<IBookProps> = ({ id, title, authors, image, description, isbn, publishedDate, categories }) => {\n  const globalUser = useUser();\n  const Add = async () => {\n    await supabase.from<IBook>('books').insert({\n      id,\n      title,\n      description,\n      publishedDate,\n      categories,\n      isbn,\n      imageLinks: [image],\n      authors,\n      votesAmount: Math.floor(Math.random() * 1000) + 1,\n      avgRating: (Math.random() * 10) + Math.random(),\n      addedById: globalUser?.id,\n      addedDate: new Date(),\n    });\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className=\"border-gray-400 text-gray-400 rounded-sm border-2 max-h-full ml-2 p-2\n      transition duration-500 ease-in-out hover:bg-gray-400 hover:text-gray-100\"\n      onClick={Add}\n    >\n      + Dodaj książkę do magazynu\n    </button>\n  );\n};\n\nexport default AddBook;\n","import React, { FC } from 'react';\nimport AddBook from './AddBook';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  image: string;\n  isbn: string;\n  authors?: string[];\n  categories?: string[];\n}\n\nconst Book: FC<IBookProps> = ({\n  id,\n  title,\n  authors,\n  image,\n  publishedDate,\n  categories,\n  description,\n  isbn,\n}) => {\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-100 shadow-md p-3 m-3 mx-6\">\n      <img\n        src={image}\n        alt=\"A book.\"\n        className=\"transform hover:scale-110 cursor-pointer m-3 w-32\n        transition duration-400 ease-in-out hover:-translate-y-1\"\n      />\n      <div className=\"ml-2 w-full\">\n        <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">{title}</span>\n        <br />\n        <span className=\"text-gray-400\">{authors?.join(' ')}</span>\n      </div>\n      <div>\n        <AddBook\n          id={id}\n          title={title}\n          authors={authors}\n          image={image}\n          description={description}\n          isbn={isbn}\n          publishedDate={publishedDate}\n          categories={categories}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Book from '../components/Book';\nimport { IGoogleBooksAPIVolumes } from '../interfaces/IGoogleBooksAPIVolumes.interface';\n\nconst BookListView = () => {\n  const [data, setData] = useState<IGoogleBooksAPIVolumes>();\n  const [error, setError] = useState<boolean>();\n\n  useEffect(() => {\n    // eslint-disable-next-line space-before-function-paren\n    const fetchData = async () => {\n      try {\n        setError(false);\n        const res = await axios.get('https://www.googleapis.com/books/v1/volumes?q=search+terms');\n        setData(res.data);\n      } catch (e) {\n        setError(true);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {data?.items && data?.items.map((book) => (\n        <Book\n          key={book.id}\n          id={book.id}\n          title={book.volumeInfo.title}\n          description={book.volumeInfo.description}\n          publishedDate={book.volumeInfo.publishedDate}\n          image={book.volumeInfo.imageLinks.thumbnail}\n          authors={book.volumeInfo.authors}\n          categories={book.volumeInfo.categories}\n          isbn={book.volumeInfo.industryIdentifiers[0].identifier}\n        />\n      ))}\n      {error && <p className=\"text-red-600\">There was an error while trying to fetch data!</p>}\n    </div>\n  );\n};\n\nexport default BookListView;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { useUserUpdate } from './UserContext';\n\nconst Login = () => {\n  const setUser = useUserUpdate();\n  const [login, setLogin] = useState(false);\n  const formikLogin = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n    },\n    // eslint-disable-next-line\n    onSubmit: async (values) => {\n      // eslint-disable-next-line\n      const { user, error } = await supabase.auth.signIn({\n        email: values.emailAdress,\n        password: values.password,\n      });\n      setLogin(!login);\n      // eslint-disable-next-line no-unused-expressions\n      setUser && setUser({\n        id: user?.id,\n        firstName: user?.email,\n        lastName: 'unknown',\n      });\n    },\n  });\n\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setLogin(!login)} className=\"border-solid bg-red-300 rounded-md\">Login</button>\n      {login && (\n        <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\">\n          <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n            <button type=\"button\" onClick={() => setLogin(!login)} className=\"border-solid bg-red-300 rounded-md\">Exit</button>\n            <div>\n              <form onSubmit={formikLogin.handleSubmit}>\n                <label htmlFor=\"email-adress\">Email adress:</label>\n                <input\n                  id=\"emailAdress\"\n                  name=\"emailAdress\"\n                  type=\"email\"\n                  placeholder=\"Email-adress\"\n                  onChange={formikLogin.handleChange}\n                  value={formikLogin.values.emailAdress}\n                  className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                />\n                <br />\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={formikLogin.handleChange}\n                  value={formikLogin.values.password}\n                  className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                />\n                <br />\n                <button\n                  type=\"submit\"\n                  className=\"border-solid bg-blue-300 rounded-md\"\n                >\n                  Login\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n      )}\n\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst Register = () => {\n  const [register, setRegister] = useState(false);\n  const formikRegister = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n    },\n    // eslint-disable-next-line\n    onSubmit: async (values) => {\n      // eslint-disable-next-line\n      const { user, error } = await supabase.auth.signUp({\n        email: values.emailAdress,\n        password: values.password,\n      });\n\n      if (user) {\n        await supabase.from<IProfile>('profiles').insert({\n          id: user.id,\n          firstName: values.firstName,\n          lastName: values.lastName,\n        });\n      }\n      setRegister(!register);\n    },\n  });\n\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setRegister(!register)} className=\"border-solid bg-red-300 rounded-md\">Register</button>\n      {register\n        && (\n          <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\">\n            <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n              <button type=\"button\" onClick={() => setRegister(!register)} className=\"border-solid bg-red-300 rounded-md\">Exit</button>\n              <div>\n                <form onSubmit={formikRegister.handleSubmit}>\n                  <label htmlFor=\"email-adress\">Email adress:</label>\n                  <input\n                    id=\"emailAdress\"\n                    name=\"emailAdress\"\n                    type=\"email\"\n                    placeholder=\"Email-adress\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.emailAdress}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <label htmlFor=\"password\">Password:</label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.password}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <label htmlFor=\"firstName\">First Name:</label>\n                  <input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.firstName}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <label htmlFor=\"lastName\">Last Name:</label>\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.lastName}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <button\n                    type=\"submit\"\n                    className=\"border-solid bg-blue-300 rounded-md\"\n                  >\n                    Register\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default Register;\n","import { Link } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport { useUser } from './UserContext';\n\nfunction Navigation() {\n  const globalUser = useUser();\n  return (\n    <div className=\"\">\n      <nav className=\"bg-white shadow dark:bg-gray-800\">\n        <div className=\"container px-6 py-3 mx-auto md:flex md:justify-between md:items-center\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <span className=\"text-xl font-bold text-gray-800 dark:text-white md:text-2xl hover:text-gray-700 dark:hover:text-gray-300\">\n                Books\n              </span>\n            </div>\n          </div>\n\n          <div className=\"items-center md:flex\">\n            <div className=\"flex flex-col md:flex-row md:mx-6\">\n\n              <Link\n                to=\"/\"\n                className=\"my-1 pl-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-gray-400\"\n              >\n                Home\n              </Link>\n              <Link\n                to=\"/user\"\n                className=\"my-1 pl-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-gray-400\"\n              >\n                {globalUser !== null && globalUser.id !== '' ? globalUser.firstName : 'User'}\n              </Link>\n              <Link\n                to=\"/admin\"\n                className=\"my-1 px-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-r md:border-gray-400\"\n              >\n                Admin\n              </Link>\n              <Login />\n              <Register />\n            </div>\n          </div>\n\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from 'react';\n\nfunction Sidebar() {\n  const [value, setValue] = useState(0);\n  const handleSlideChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(Number(event?.target?.value));\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  // eslint-disable-next-line no-unused-vars\n\n  return (\n    <div\n      className=\"fixed z-40 inset-0 flex-none h-full bg-opacity-25 w-full lg:static lg:h-auto\n      lg:overflow-y-visible lg:pt-0 lg:w-60 xl:w-72 lg:block hidden shadow-sm dark:bg-gray-800\"\n    >\n      <div className=\"items-center justify-between overflow-y-auto scrolling-touch\">\n        <div className=\"border-b border-gray-400 mx-4 my-5 pl-2 text-l font-bold\">\n          Filters\n        </div>\n        <nav className=\"mx-4 my-3\">\n          <div className=\"border-b border-gray-200 mx-1 pb-5 mt-5\">\n            <label htmlFor=\"searchbar\" className=\"mr-2\">Search</label>\n            <input\n              type=\"text\"\n              placeholder=\"Insert book name\"\n              id=\"searchbar\"\n              className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none\"\n            />\n          </div>\n          <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n            <ul className=\"list-disc\">\n              <li>Fiction</li>\n              <li>Literature of fact, journalism</li>\n              <li>Popular science literature</li>\n              <li>Children&apos;s literature</li>\n              <li>Comics</li>\n              <li>Poetry, drama satire</li>\n              <li>Other</li>\n            </ul>\n          </div>\n          <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n            <input type=\"range\" min=\"0\" max=\"10\" onChange={handleSlideChange} />\n            <span className=\"ml-2\" id=\"range\">{ value }</span>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport BookListView from '../views/BookListView';\nimport Navigation from './Navigation';\nimport Sidebar from './Sidebar';\nimport { useUser } from './UserContext';\n\nfunction AddRouter() {\n  const globalUser = useUser();\n  return (\n    <div className=\"App h-full\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <header className=\"App-header fixed w-full top-0 h-10 z-50\">\n          <Navigation />\n        </header>\n        <div className=\"container w-full h-screen max-w-8xl mx-auto flex mt-12 z-10\">\n          <Sidebar />\n          <div className=\"min-w-0 w-full pl-5 pt-3 flex-auto lg:static lg:max-h-full lg:overflow-visible shadow-inner\">\n            <Switch>\n              <Route path=\"/internships-2021\" exact>\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/\" exact>\n                main\n                <main>\n                  <p>\n                    Edit <code>src/App.tsx</code> and save to reload.\n                  </p>\n                  <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Learn Reacta\n                  </a>\n                </main>\n              </Route>\n              <Route path=\"/user\" exact />\n              <Route path=\"/admin\" exact>\n                { globalUser?.id === process.env.REACT_APP_ADMIN_ID ? <div>Witaj adminie</div> : <Redirect to=\"/\" />}\n              </Route>\n              <Route path=\"/books-list\" exact>\n                <BookListView />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default AddRouter;\n","import { UserProvider } from './UserContext';\nimport AddRouter from './Router';\n\nfunction App() {\n    return (\n      <UserProvider>\n        <AddRouter />\n      </UserProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}