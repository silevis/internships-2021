{"version":3,"sources":["components/SVGRatingIcon.tsx","components/Rating.tsx","components/SpecificationTable.tsx","components/Tablist.tsx","components/BookInfo.tsx","views/BookInfoView.tsx","components/Book.tsx","views/BookListView.tsx","components/Slide.tsx","components/Slider.tsx","views/SliderDemo.tsx","utils/supabase.ts","components/UserContext.tsx","components/Login.tsx","components/Register.tsx","components/Navigation.tsx","components/Sidebar.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SVGRatingIcon","urlBlank","urlFull","fillingPercent","fullIconStyle","clipPath","src","alt","className","style","RatingIconURL","process","RatingIconFilledURL","Rating","bare","votesAmount","icons","scoreRemaining","avgRating","i","push","Math","floor","max","min","SpecificationTable","items","tableRows","length","key","value","Tablist","tabs","defaultTab","useState","currTabID","setCurrTabID","tabTitleElements","type","onClick","title","gridTemplateRows","content","BookInfoPage","book","year","getFullYear","toString","id","ISBN","authors","join","specsTabList","tabList","imageLinks","description","bookStatic","addedById","addedYear","Date","params","useParams","BookInfo","Book","image","BookListView","data","setData","error","setError","useEffect","a","axios","get","res","fetchData","map","volumeInfo","publishedDate","industryIdentifiers","thumbnail","categories","Slide","author","Slider","entryCount","entries","index","setIndex","timer","setTimer","changeSlide","dir","newIndex","clearTimeout","newTimer","setTimeout","old","SliderDemo","undefined","books","setBooks","console","supabaseUrl","String","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_TOKEN","supabase","createClient","UserContext","React","createContext","UserUpdateContext","UserProvider","children","firstName","lastName","user","setUser","Provider","newUser","Login","useContext","login","setLogin","formikLogin","useFormik","initialValues","emailAdress","password","onSubmit","values","auth","signIn","email","handleSubmit","htmlFor","name","placeholder","onChange","handleChange","Register","register","setRegister","formikRegister","signUp","from","insert","Navigation","globalUser","to","Sidebar","setValue","event","Number","target","App","path","exact","href","rel","BookInfoView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0c9a5c4.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\ninterface SVGRatingIconProps {\n  urlFull: string\n  urlBlank: string\n  fillingPercent: number\n}\n\nconst SVGRatingIcon: FC<SVGRatingIconProps> = ({ urlBlank, urlFull, fillingPercent }) => {\n  const fullIconStyle = {\n    clipPath: `polygon(0 0, ${fillingPercent}% 0, ${fillingPercent}% 100%, 0 100%)`,\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/alt-text\n    <div>\n      {fillingPercent === 100 ? <img src={urlFull} alt=\"Filled ranking icon\" /> : (\n        <div className=\"grid grid-cols-1 grid-rows-1\">\n          <img src={urlFull} style={fullIconStyle} alt=\"Blank ranking icon\" className=\"col-start-1 col-end-2 row-start-1 row-end-2\" />\n          <img src={urlBlank} alt=\"Blank ranking icon\" className=\"col-start-1 col-end-2 row-start-1 row-end-2\" />\n        </div>\n)}\n    </div>\n  );\n};\n\nexport default SVGRatingIcon;\n","import React, { FC } from 'react';\nimport SVGRatingIcon from './SVGRatingIcon';\n\nconst IconsAmount = 5;\nexport const MaxScoreFromAPI = 5;\nconst RatingIconURL = `${process.env.PUBLIC_URL}/star_border_black.svg`;\nconst RatingIconFilledURL = `${process.env.PUBLIC_URL}/star_black.svg`;\n\ninterface RatingProps {\n  bare: boolean\n  votesAmount: number | null\n  avgRating: number\n}\n\nconst Rating: FC<RatingProps> = ({ bare, votesAmount, avgRating }) => {\n  const icons = [];\n  const scorePerIcon = 100 / IconsAmount;\n\n  let scoreRemaining = (avgRating / MaxScoreFromAPI) * 100;\n  for (let i = 0; i < IconsAmount; i++) {\n    icons.push(<SVGRatingIcon\n      urlBlank={RatingIconURL}\n      urlFull={RatingIconFilledURL}\n      fillingPercent={Math.floor(Math.max(0, Math.min(100, scoreRemaining * IconsAmount)))}\n    />);\n    scoreRemaining -= scorePerIcon;\n  }\n\n  return (\n    <div className=\"flex flex-wrap justify-center items-center flex-col\">\n      <div className=\"flex\">\n        {icons}\n      </div>\n      {!bare && <span className=\"text-gray-600 text-xs mt-1\">Ilosc głosów: {votesAmount}</span>}\n    </div>\n  );\n};\n\nexport default Rating;\n","import React, { FC } from 'react';\n\ninterface ISpecsTableProps {\n  items: ISpecsItem[]\n}\n\ninterface ISpecsItem {\n  key: string\n  value: string\n}\n\nconst SpecificationTable: FC<ISpecsTableProps> = ({ items }) => {\n  const tableRows = [];\n  for (let i = 0; i < items.length; i++) {\n      tableRows.push(\n        <div className=\"flex flex-wrap flex-col md:flex-row justify-between border-b\">\n          <div className=\"max-w-1/2 md:text-right p-2 mr-10 text-gray-500\">{items[i].key}</div>\n          <div className=\"max-w-1/2 p-2\">{items[i].value}</div>\n        </div>\n);\n  }\n  return (\n    <div>\n      {tableRows}\n    </div>\n  );\n};\n\nexport default SpecificationTable;\n","import { FC, useState } from 'react';\nimport { ITab } from '../interfaces/ITab.interface';\n\ninterface ITablistProps {\n  tabs: ITab[],\n  defaultTab: number\n}\n\nconst Tablist: FC<ITablistProps> = ({ tabs, defaultTab }) => {\n  const [currTabID, setCurrTabID] = useState(defaultTab);\n\n  function tabChangeHandler(newTabId: number) {\n    setCurrTabID(newTabId);\n  }\n\n  const tabTitleElements = [];\n  for (let i = 0; i < tabs.length; i++) {\n    tabTitleElements.push(\n      <button\n        type=\"button\"\n        className=\"flex-initial p-4 cursor-pointer auto-rows-min border-r border-gray-300\"\n        onClick={() => tabChangeHandler(i)}\n      >\n        {tabs[i].title}\n      </button>\n);\n  }\n\n  // todo: set the height of the tablist to the maximum height of a tab content\n  return (\n    <div\n      className=\"grid grid-rows-2 grid-cols-1 shadow-md border border-gray-400\"\n      style={{ gridTemplateRows: 'min-content auto' }}\n    >\n      <div className=\"flex border-b border-gray-300\">\n        {tabTitleElements}\n      </div>\n      <div className=\"p-1 md:p-4\">\n        {tabs[currTabID].content}\n      </div>\n    </div>\n  );\n};\n\nexport default Tablist;\n","import { useState, FC } from 'react';\nimport { IBook } from '../interfaces/IBook.interface';\nimport Rating from './Rating';\nimport SpecificationTable from './SpecificationTable';\nimport Tablist from './Tablist';\n\ninterface IBookInfoProps {\n  book: IBook\n}\n\nconst BookInfoPage: FC<IBookInfoProps> = ({ book }) => {\n  const [specsTabList] = useState([{\n    key: 'Rok wydania',\n    value: book.year.getFullYear().toString(),\n  }, {\n    key: 'ID',\n    value: book.id,\n  }, {\n    key: 'Tytul',\n    value: book.title,\n  }, {\n    key: 'ISBN',\n    value: book.ISBN,\n  }, {\n    key: 'Autorzy',\n    value: book.authors.join(' '),\n  }]);\n\n  const [tabList] = useState([{\n    title: 'Szczegóły',\n    content:\n  <div className=\"flex justify-center p-1 md:p-4\">\n    <SpecificationTable items={specsTabList} />\n  </div>,\n  }]);\n\n  return (\n    <div className=\"w-11/12 m-auto mt-8\">\n      <div className=\"md:w-11/12 m-auto flex flex-wrap flex-col md:flex-row items-start\">\n        {/* todo: image z powiekszeniem po najechaniu (osobny component)*/}\n        <img src={book.imageLinks[0]} alt=\"ok\" className=\"m-auto md:w-1/3 max-h-56 object-scale-down\" />\n        <div className=\"lg:w-2/3 flex-col lg:flex-row flex flex-wrap\">\n          <div className=\"lg:w-6/12 flex flex-auto flex-col\">\n            <span className=\"text-xl\">{book.title}</span> <br />\n            <div className=\"flex\">\n              <div className=\"w-1/2 text-gray-600\">Podtytuł here</div>\n              <div className=\"w-1/2 text-right text-gray-600\">{book.authors}</div>\n            </div>\n            <div className=\"mt-12 text-sm text-gray-700 text-justify\">\n              {book.description}\n            </div>\n          </div>\n          <div className=\"lg:w-2/12 mt-4 lg:ml-4\">\n            <Rating bare={false} votesAmount={book.votesAmount} avgRating={book.avgRating} />\n          </div>\n        </div>\n      </div>\n      <div className=\"w-full md:w-2/3 mt-8 m-auto\">\n        <Tablist tabs={tabList} defaultTab={0} />\n      </div>\n    </div>\n  );\n};\n\nexport default BookInfoPage;\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BookInfo from '../components/BookInfo';\nimport { IBook } from '../interfaces/IBook.interface';\n\nconst bookStatic: IBook = {\n  ISBN: '157356107X',\n  authors: [\n    'Sara D. Knapp',\n  ],\n  addedById: '1',\n  addedYear: '2020',\n  // eslint-disable-next-line max-len\n  description: 'updated and expanded this invaluable resource. Unlike any other thesaurus available, this popular guide offers a wealth of natural language options in a convenient, A-to-Z format. It\\'s ideal for helping users find the appropriate word or words for computer searches in the humanities, social sciences, and business. The second edition has added more than 9,000 entries to the first edition\\'s extensive list. Now, the Thesaurus contains almost 21,000 search entries! New or expanded areas include broader coverage of business terms and humanities-including arts literature, philosophy, religion, and music',\n  id: '1',\n  imageLinks: [\n    'https://cdn-lubimyczytac.pl/upload/books/4810000/4810807/604880-352x500.jpg',\n  ],\n  title: 'The Contemporary Thesaurus of Search Terms and Synonyms',\n  year: new Date(),\n  votesAmount: 1,\n  avgRating: 3.4,\n};\n\nconst BookInfoPage = () => {\n  // 23 Promise.resolve()\n  // .then(() => {\n  //   const resp = supabase\n  //     .from<IBook>('books')\n  //     .select()\n  //     .eq('id', id)\n  //     .limit(1);\n  // });\n\n  const params = useParams<{id: string}>();\n  bookStatic.id = params.id;\n  const [book] = useState<IBook>(bookStatic);\n\n  return <BookInfo book={book} />;\n};\n\nexport default BookInfoPage;\n","import React, { FC } from 'react';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  industryIdentifiers?: unknown[];\n  image: string;\n  authors?: string[];\n  categories?: string[];\n}\n\nconst Book: FC<IBookProps> = ({ id, title, authors, image }) => {\n  return (\n    <div key={id} className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-100 shadow-md p-3 m-3 mx-6\">\n      <img\n        src={image}\n        alt=\"A book.\"\n        className=\"transform hover:scale-110 cursor-pointer m-3 w-32\n        transition duration-400 ease-in-out hover:-translate-y-1\"\n      />\n      <div className=\"ml-2 w-full\">\n        <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">{title}</span>\n        <br />\n        <span className=\"text-gray-400\">{authors?.join(' ')}</span>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          className=\"border-gray-400 text-gray-400 rounded-sm border-2 max-h-full ml-2 p-2\n          transition duration-500 ease-in-out hover:bg-gray-400 hover:text-gray-100\"\n        >\n          + Dodaj książkę do magazynu\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Book from '../components/Book';\nimport { IGoogleBooksAPIVolumes } from '../interfaces/IGoogleBooksAPIVolumes.interface';\n\nconst BookListView = () => {\n  const [data, setData] = useState<IGoogleBooksAPIVolumes>();\n  const [error, setError] = useState<boolean>();\n\n  useEffect(() => {\n    // eslint-disable-next-line space-before-function-paren\n    const fetchData = async () => {\n      try {\n        setError(false);\n        const res = await axios.get('https://www.googleapis.com/books/v1/volumes?q=search+terms');\n        setData(res.data);\n      } catch (e) {\n        setError(true);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {data?.items && data?.items.map((book) => (\n        <Book\n          key={book.id}\n          title={book.volumeInfo.title}\n          description={book.volumeInfo.description}\n          publishedDate={book.volumeInfo.publishedDate}\n          industryIdentifiers={book.volumeInfo.industryIdentifiers}\n          image={book.volumeInfo.imageLinks.thumbnail}\n          authors={book.volumeInfo.authors}\n          categories={book.volumeInfo.categories}\n        />\n      ))}\n      {error && <p className=\"text-red-600\">There was an error while trying to fetch data!</p>}\n    </div>\n  );\n};\n\nexport default BookListView;\n","import React from 'react';\n\nconst Slide = ({ title = '', author = '', image = '' }) => {\n  return (\n    <div className=\"flex flex-col justify-center items-center text-center h-72 w-64 \">\n      <img src={image} alt={title} className=\"w-48 h-64 overflow-hidden\" />\n      {title}\n      <span className=\"text-gray-500 text-sm\">{author}</span>\n    </div>\n  );\n};\n\nexport default Slide;\n","import { useState, useEffect, FC } from 'react';\nimport Slide from './Slide';\n// import { ISupplierBook } from '../interfaces/ISupplierBook.interface';\n\ninterface ISliderProps {\n  entryCount: number;\n  entries: {\n    title: string;\n    authors: string[];\n    image: string;\n  }[];\n}\n\nconst Slider: FC<ISliderProps> = ({ entryCount, entries }) => {\n  const [index, setIndex] = useState(0);\n  // eslint-disable-next-line\n  const [timer, setTimer] = useState<any>();\n  const delay = 2200;\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    timer && clearTimeout(timer);\n\n    const newTimer = setTimeout(() => {\n      const changeIndex = () => {\n        if (index === entryCount - 1) return setIndex(0);\n        return setIndex((old) => old + 1);\n      };\n      changeIndex();\n    }, delay);\n    setTimer(newTimer);\n    // eslint-disable-next-line\n  }, [index]);\n\n  function changeSlide(dir = 0) {\n    const newIndex = index + dir;\n\n    if (newIndex >= entryCount) return setIndex(0);\n    if (newIndex <= -1) return setIndex(entryCount - 1);\n\n    return setIndex(newIndex);\n  }\n\n  return (\n    <div className=\"flex place-content-center\">\n      <div className=\"flex flex-col items-center bg-gray-50 p-2 shadow\">\n        <Slide title={entries[index]?.title} author={entries[index]?.authors?.join(' ')} image={entries[index]?.image} />\n        <div className=\"flex flex-row\">\n          <button\n            className=\"flex border shadow-xl text-black-50 p-2 transition-colors duration-200 hover:text-yellow-600\"\n            type=\"button\"\n            onClick={() => changeSlide(-1)}\n          >\n            {'<<'}\n          </button>\n          <div className=\"w-80\" />\n          <button\n            className=\"flex border shadow-xl text-black-50 p-2 transition-colors duration-200 hover:text-yellow-600\"\n            type=\"button\"\n            onClick={() => changeSlide(1)}\n          >\n            {'>>'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Slider from '../components/Slider';\n\nconst SliderDemo = () => {\n  // eslint-disable-next-line\n  const [books, setBooks] = useState<any>(undefined);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get('https://www.googleapis.com/books/v1/volumes?q=search+terms');\n        setBooks(data?.items);\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (books) {\n    return (\n      <Slider\n      // eslint-disable-next-line\n        entries={books?.map((book: any) => {\n          return {\n            title: book.volumeInfo.title,\n            authors: book.volumeInfo.authors,\n            image: book.volumeInfo.imageLinks.thumbnail,\n          };\n        })}\n        entryCount={books.length}\n      />\n    );\n  }\n\n  return <p>Loading...</p>;\n};\n\nexport default SliderDemo;\n","import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = String(process.env.REACT_APP_SUPABASE_URL);\nconst supabaseKey = String(process.env.REACT_APP_SUPABASE_TOKEN);\nexport const supabase = createClient(supabaseUrl, supabaseKey);\n\n// REACT_APP_SUPABASE_URL=xxx REACT_APP_SUPABASE_TOKEN=xxx npm run start\n\nexport default supabase;\n","import React, { FC, useContext, useState } from 'react';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst UserContext = React.createContext<IProfile | null>(null);\nconst UserUpdateContext = React.createContext<((newUser: IProfile) => void) | null>(null);\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n\nexport const useUserUpdate = () => {\n  return useContext(UserUpdateContext);\n};\n\nexport const UserProvider: FC = ({ children }) => {\n  const [user, setUser] = useState<IProfile>({\n    id: '',\n    firstName: '',\n    lastName: '',\n  });\n\n  const toggleUser = (newUser: IProfile) => {\n    setUser(newUser);\n  };\n\n  return (\n    <UserContext.Provider value={user}>\n      <UserUpdateContext.Provider value={toggleUser}>\n        {children}\n      </UserUpdateContext.Provider>\n    </UserContext.Provider>\n  );\n};\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { useUserUpdate } from './UserContext';\n\nconst Login = () => {\n  const setUser = useUserUpdate();\n  const [login, setLogin] = useState(false);\n  const formikLogin = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n    },\n    // eslint-disable-next-line\n    onSubmit: async (values) => {\n      // eslint-disable-next-line\n      const { user, error } = await supabase.auth.signIn({\n        email: values.emailAdress,\n        password: values.password,\n      });\n      setLogin(!login);\n      // eslint-disable-next-line no-unused-expressions\n      setUser && setUser({\n        id: user?.id,\n        firstName: user?.email,\n        lastName: 'unknown',\n      });\n    },\n  });\n\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setLogin(!login)} className=\"border-solid bg-red-300 rounded-md\">Login</button>\n      {login && (\n        <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\">\n          <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n            <button type=\"button\" onClick={() => setLogin(!login)} className=\"border-solid bg-red-300 rounded-md\">Exit</button>\n            <div>\n              <form onSubmit={formikLogin.handleSubmit}>\n                <label htmlFor=\"email-adress\">Email adress:</label>\n                <input\n                  id=\"emailAdress\"\n                  name=\"emailAdress\"\n                  type=\"email\"\n                  placeholder=\"Email-adress\"\n                  onChange={formikLogin.handleChange}\n                  value={formikLogin.values.emailAdress}\n                  className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                />\n                <br />\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={formikLogin.handleChange}\n                  value={formikLogin.values.password}\n                  className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                />\n                <br />\n                <button\n                  type=\"submit\"\n                  className=\"border-solid bg-blue-300 rounded-md\"\n                >\n                  Login\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n      )}\n\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst Register = () => {\n  const [register, setRegister] = useState(false);\n  const formikRegister = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n    },\n    // eslint-disable-next-line\n    onSubmit: async (values) => {\n      // eslint-disable-next-line\n      const { user, error } = await supabase.auth.signUp({\n        email: values.emailAdress,\n        password: values.password,\n      });\n\n      if (user) {\n        await supabase.from<IProfile>('profiles').insert({\n          id: user.id,\n          firstName: values.firstName,\n          lastName: values.lastName,\n        });\n      }\n      setRegister(!register);\n    },\n  });\n\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setRegister(!register)} className=\"border-solid bg-red-300 rounded-md\">Register</button>\n      {register\n        && (\n          <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\">\n            <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n              <button type=\"button\" onClick={() => setRegister(!register)} className=\"border-solid bg-red-300 rounded-md\">Exit</button>\n              <div>\n                <form onSubmit={formikRegister.handleSubmit}>\n                  <label htmlFor=\"email-adress\">Email adress:</label>\n                  <input\n                    id=\"emailAdress\"\n                    name=\"emailAdress\"\n                    type=\"email\"\n                    placeholder=\"Email-adress\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.emailAdress}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <label htmlFor=\"password\">Password:</label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.password}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <label htmlFor=\"firstName\">First Name:</label>\n                  <input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.firstName}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <label htmlFor=\"lastName\">Last Name:</label>\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.lastName}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <button\n                    type=\"submit\"\n                    className=\"border-solid bg-blue-300 rounded-md\"\n                  >\n                    Register\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default Register;\n","import { Link } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport { useUser } from './UserContext';\n\nfunction Navigation() {\n  const globalUser = useUser();\n  return (\n    <div className=\"\">\n      <nav className=\"bg-white shadow dark:bg-gray-800\">\n        <div className=\"container px-6 py-3 mx-auto md:flex md:justify-between md:items-center\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <span className=\"text-xl font-bold text-gray-800 dark:text-white md:text-2xl hover:text-gray-700 dark:hover:text-gray-300\">\n                Books\n              </span>\n            </div>\n          </div>\n\n          <div className=\"items-center md:flex\">\n            <div className=\"flex flex-col md:flex-row md:mx-6\">\n\n              <Link\n                to=\"/\"\n                className=\"my-1 pl-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-gray-400\"\n              >\n                Home\n              </Link>\n              <Link\n                to=\"/user\"\n                className=\"my-1 pl-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-gray-400\"\n              >\n                {globalUser !== null && globalUser.id !== '' ? globalUser.firstName : 'User'}\n              </Link>\n              <Link\n                to=\"/admin\"\n                className=\"my-1 px-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-r md:border-gray-400\"\n              >\n                Admin\n              </Link>\n              <Login />\n              <Register />\n            </div>\n          </div>\n\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from 'react';\n\nfunction Sidebar() {\n  const [value, setValue] = useState(0);\n  const handleSlideChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(Number(event?.target?.value));\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  // eslint-disable-next-line no-unused-vars\n\n  return (\n    <div\n      className=\"fixed z-40 inset-0 flex-none h-full bg-opacity-25 w-full lg:static lg:h-auto\n      lg:overflow-y-visible lg:pt-0 lg:w-60 xl:w-72 lg:block hidden shadow-sm dark:bg-gray-800\"\n    >\n      <div className=\"items-center justify-between overflow-y-auto scrolling-touch\">\n        <div className=\"border-b border-gray-400 mx-4 my-5 pl-2 text-l font-bold\">\n          Filters\n        </div>\n        <nav className=\"mx-4 my-3\">\n          <div className=\"border-b border-gray-200 mx-1 pb-5 mt-5\">\n            <label htmlFor=\"searchbar\" className=\"mr-2\">Search</label>\n            <input\n              type=\"text\"\n              placeholder=\"Insert book name\"\n              id=\"searchbar\"\n              className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none\"\n            />\n          </div>\n          <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n            <ul className=\"list-disc\">\n              <li>Fiction</li>\n              <li>Literature of fact, journalism</li>\n              <li>Popular science literature</li>\n              <li>Children&apos;s literature</li>\n              <li>Comics</li>\n              <li>Poetry, drama satire</li>\n              <li>Other</li>\n            </ul>\n          </div>\n          <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n            <input type=\"range\" min=\"0\" max=\"10\" onChange={handleSlideChange} />\n            <span className=\"ml-2\" id=\"range\">{ value }</span>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport BookInfoView from '../views/BookInfoView';\nimport BookListView from '../views/BookListView';\nimport SliderDemo from '../views/SliderDemo';\nimport Navigation from './Navigation';\nimport Sidebar from './Sidebar';\nimport { UserProvider } from './UserContext';\n\nfunction App() {\n  return (\n    <UserProvider>\n      <div className=\"App h-full\">\n        <Router>\n          <header className=\"App-header fixed w-full top-0 h-10 z-50\">\n            <Navigation />\n          </header>\n          <div className=\"container w-full h-screen max-w-8xl mx-auto flex mt-12 z-10\">\n            <Sidebar />\n            <div className=\"min-w-0 w-full pl-5 pt-3 flex-auto lg:static lg:max-h-full lg:overflow-visible shadow-inner\">\n              <Switch>\n                <Route path=\"/internships-2021\" exact>\n                  <Redirect to=\"/\" />\n                </Route>\n                <Route path=\"/\" exact>\n                  main\n                  <main>\n                    <p>\n                      Edit <code>src/App.tsx</code> and save to reload.\n                    </p>\n                    <a\n                      className=\"App-link\"\n                      href=\"https://reactjs.org\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Learn Reacta\n                    </a>\n                  </main>\n                </Route>\n                <Route path=\"/user\" exact />\n                <Route path=\"/admin\" exact />\n                <Route path=\"/books-list\" exact>\n                  <BookListView />\n                </Route>\n                <Route path=\"/slider-demo\" exact>\n                  <SliderDemo />\n                </Route>\n                <Route path=\"/book/:id\" exact>\n                  <BookInfoView />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </div>\n    </UserProvider>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}