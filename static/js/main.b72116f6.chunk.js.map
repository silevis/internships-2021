{"version":3,"sources":["components/UserContext.tsx","utils/supabase.ts","components/Book.tsx","views/BookListView.tsx","components/Login.tsx","components/Register.tsx","components/Navigation.tsx","components/Sidebar.tsx","components/Slide.tsx","components/Slider.tsx","views/SliderDemo.tsx","components/SVGRatingIcon.tsx","components/Rating.tsx","components/SpecificationTable.tsx","components/Tablist.tsx","components/BookInfo.tsx","views/BookInfoView.tsx","components/Router.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserContext","React","createContext","UserUpdateContext","useUser","useContext","useUserUpdate","UserProvider","children","useState","id","firstName","lastName","user","setUser","Provider","value","newUser","supabaseUrl","String","process","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_TOKEN","supabase","createClient","Book","title","authors","image","categories","className","src","alt","join","type","BookListView","data","setData","useEffect","a","from","select","books","error","getAllBooks","map","book","imageLinks","isbn","publishedDate","description","Login","login","setLogin","formikLogin","useFormik","initialValues","emailAdress","password","onSubmit","values","auth","signIn","email","onClick","handleSubmit","htmlFor","name","placeholder","onChange","handleChange","Register","register","setRegister","formikRegister","signUp","insert","Navigation","globalUser","toggle","setToggled","to","REACT_APP_ADMIN_ID","Sidebar","setValue","min","max","event","Number","target","Slide","author","Slider","entryCount","entries","index","setIndex","timer","setTimer","changeSlide","dir","newIndex","clearTimeout","newTimer","setTimeout","old","SliderDemo","length","SVGRatingIcon","urlBlank","urlFull","fillingPercent","fullIconStyle","clipPath","style","RatingIconURL","RatingIconFilledURL","Rating","bare","votesAmount","icons","scoreRemaining","avgRating","i","push","Math","floor","SpecificationTable","items","tableRows","key","Tablist","tabs","defaultTab","currTabID","setCurrTabID","tabTitleElements","gridTemplateRows","content","BookInfoPage","specsTabList","tabList","params","useParams","setBook","eq","BookInfo","AddRouter","basename","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b72116f6.chunk.js","sourcesContent":["import React, { FC, useContext, useState } from 'react';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst UserContext = React.createContext<IProfile | null>(null);\nconst UserUpdateContext = React.createContext<((newUser: IProfile) => void) | null>(null);\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n\nexport const useUserUpdate = () => {\n  return useContext(UserUpdateContext);\n};\n\nexport const UserProvider: FC = ({ children }) => {\n  const [user, setUser] = useState<IProfile>({\n    id: '',\n    firstName: '',\n    lastName: '',\n  });\n\n  const toggleUser = (newUser: IProfile) => {\n    setUser(newUser);\n  };\n\n  return (\n    <UserContext.Provider value={user}>\n      <UserUpdateContext.Provider value={toggleUser}>\n        {children}\n      </UserUpdateContext.Provider>\n    </UserContext.Provider>\n  );\n};\n","import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = String(process.env.REACT_APP_SUPABASE_URL);\nconst supabaseKey = String(process.env.REACT_APP_SUPABASE_TOKEN);\nexport const supabase = createClient(supabaseUrl, supabaseKey);\n\n// REACT_APP_SUPABASE_URL=xxx REACT_APP_SUPABASE_TOKEN=xxx npm run start\n\nexport default supabase;\n","import React, { FC } from 'react';\n// import AddBook from './AddBook';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  image: string;\n  isbn: string;\n  authors?: string[];\n  categories?: string[];\n}\n\nconst Book: FC<IBookProps> = ({\n  id,\n  title,\n  authors,\n  image,\n  // publishedDate,\n  categories,\n  // description,\n  // isbn,\n}) => {\n  return (\n    <div className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-100 shadow-md p-3 m-3 mx-6\">\n      <img\n        src={image}\n        alt=\"A book.\"\n        className=\"transform hover:scale-110 cursor-pointer m-3 w-32\n        transition duration-400 ease-in-out hover:-translate-y-1\"\n      />\n      <div className=\"ml-2 w-full\">\n        <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">{title}</span>\n        <br />\n        <span className=\"text-gray-400\">{authors?.join(' ')}</span>\n        <br />\n        <span className=\"text-gray-400\">{categories}</span>\n        <br />\n        <span className=\"text-gray-400\">{id}</span>\n      </div>\n      <div>\n        {/* <AddBook\n          id={id}\n          title={title}\n          authors={authors}\n          image={image}\n          description={description}\n          isbn={isbn}\n          publishedDate={publishedDate}\n          categories={categories}\n        />*/}\n        <button\n          type=\"button\"\n          className=\"border-gray-400 text-gray-400 rounded-sm border-2 max-h-full ml-2 p-2\n          transition duration-500 ease-in-out hover:bg-gray-400 hover:text-gray-100\"\n        >\n          Kup naszom ksionszke\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useState, useEffect } from 'react';\nimport { IBook } from '../interfaces/IBook.interface';\nimport supabase from '../utils/supabase';\nimport Book from '../components/Book';\n\nconst BookListView = () => {\n  const [data, setData] = useState<IBook[] | null>([]);\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    const getAllBooks = async () => {\n      // eslint-disable-next-line\n      const { data: books, error } = await supabase\n        .from<IBook>('books')\n        .select(`\n      *\n    `);\n      if (books !== null) {\n        setData(books);\n      }\n    };\n    getAllBooks();\n  }, []);\n  return (\n    <div>\n      {data && data?.map((book) => (\n        <Book\n          id={book.id}\n          title={book.title}\n          image={book.imageLinks[0]}\n          isbn={book.isbn}\n          authors={book.authors}\n          publishedDate={book.publishedDate}\n          categories={book.categories}\n          description={book.description}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default BookListView;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { useUserUpdate } from './UserContext';\n\nconst Login = () => {\n  const setUser = useUserUpdate();\n  const [login, setLogin] = useState(false);\n  const formikLogin = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n    },\n    // eslint-disable-next-line\n    onSubmit: async (values) => {\n      // eslint-disable-next-line\n      const { user, error } = await supabase.auth.signIn({\n        email: values.emailAdress,\n        password: values.password,\n      });\n      setLogin(!login);\n      if (user) {\n        // eslint-disable-next-line no-unused-expressions\n        setUser && setUser({\n          id: user?.id,\n          firstName: user?.email,\n          lastName: 'unknown',\n        });\n      }\n    },\n  });\n\n  return (\n    <div>\n      <div\n        onClick={() => setLogin(!login)}\n        className=\"my-1 pl-4 pb-1 md:pb-0 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n        md:mr-4 md:my-0 border-b md:border-b-0 md:border-l border-gray-400 w-full\"\n      >Sign In\n      </div>\n      {login && (\n        <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\">\n          <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n            <div className=\"flex justify-between\">\n              <h1 className=\"font-bold\">Login</h1>\n              <button\n                type=\"button\"\n                onClick={() => setLogin(!login)}\n                className=\"border-red-400 text-red-400 rounded-sm border-2 max-h-full px-2\n              transition duration-500 hover:bg-red-400 hover:text-white\"\n              >\n                X\n              </button>\n            </div>\n            <div>\n              <form onSubmit={formikLogin.handleSubmit}>\n                <div className=\"flex\">\n                  <div className=\"mr-1\">\n                    <label htmlFor=\"email-adress\" className=\"text-xs block\">Email adress:</label>\n                    <input\n                      id=\"emailAdress\"\n                      name=\"emailAdress\"\n                      type=\"email\"\n                      placeholder=\"Email-adress\"\n                      onChange={formikLogin.handleChange}\n                      value={formikLogin.values.emailAdress}\n                      className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none mb-2\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"password\" className=\"text-xs block\">Password:</label>\n                    <input\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      onChange={formikLogin.handleChange}\n                      value={formikLogin.values.password}\n                      className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none mb-2\"\n                    />\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"border-gray-400 text-gray-400 rounded-sm border-2 max-h-full p-1\n                  transition duration-500 ease-in-out hover:bg-gray-400 hover:text-white\"\n                >\n                  Sign In\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n      )}\n\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst Register = () => {\n  const [register, setRegister] = useState(false);\n  const formikRegister = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n    },\n    // eslint-disable-next-line\n    onSubmit: async (values) => {\n      // eslint-disable-next-line\n      const { user, error } = await supabase.auth.signUp({\n        email: values.emailAdress,\n        password: values.password,\n      });\n\n      if (user) {\n        await supabase.from<IProfile>('profiles').insert({\n          id: user.id,\n          firstName: values.firstName,\n          lastName: values.lastName,\n        });\n      }\n      setRegister(!register);\n    },\n  });\n\n  return (\n    <div>\n      <div\n        onClick={() => setRegister(!register)}\n        className=\"my-1 pl-4 pb-1 md:pb-0 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n         md:mr-4 md:my-0 border-b md:border-b-0 md:border-l md:border-r border-gray-400 w-full\"\n      >Sign Up\n      </div>\n      {register\n        && (\n          <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-600 bg-opacity-50 flex h-screen w-screen\">\n            <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n              <div className=\"flex justify-between\">\n                <h1 className=\"font-bold\">Register</h1>\n                <button\n                  type=\"button\"\n                  onClick={() => setRegister(!register)}\n                  className=\"border-red-400 text-red-400 rounded-sm border-2 max-h-full px-2\n                    transition duration-500 hover:bg-red-400 hover:text-white\"\n                >\n                  X\n                </button>\n              </div>\n              <div>\n                <form onSubmit={formikRegister.handleSubmit}>\n                  <div className=\"flex justify-between\">\n                    <div>\n                      <label htmlFor=\"firstName\" className=\"text-xs block\">First Name:</label>\n                      <input\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        onChange={formikRegister.handleChange}\n                        value={formikRegister.values.firstName}\n                        className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none mb-2\"\n                      />\n                    </div>\n                    <div>\n                      <label htmlFor=\"lastName\" className=\"text-xs block\">Last Name:</label>\n                      <input\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                        onChange={formikRegister.handleChange}\n                        value={formikRegister.values.lastName}\n                        className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <div>\n                      <label htmlFor=\"email-adress\" className=\"text-xs block\">Email adress:</label>\n                      <input\n                        id=\"emailAdress\"\n                        name=\"emailAdress\"\n                        type=\"email\"\n                        placeholder=\"Email-adress\"\n                        onChange={formikRegister.handleChange}\n                        value={formikRegister.values.emailAdress}\n                        className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none mb-2\"\n                      />\n                    </div>\n                    <div>\n                      <label htmlFor=\"password\" className=\"text-xs block\">Password:</label>\n                      <input\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={formikRegister.handleChange}\n                        value={formikRegister.values.password}\n                        className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none mb-2\"\n                      />\n                    </div>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"border-gray-400 text-gray-400 rounded-sm border-2 max-h-full p-1\n                    transition duration-500 ease-in-out hover:bg-gray-400 hover:text-white\"\n                  >\n                    Sign Up\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport { useUser, useUserUpdate } from './UserContext';\n\nfunction Navigation() {\n  const globalUser = useUser();\n  const setUser = useUserUpdate();\n  const [toggle, setToggled] = useState(false);\n\n  const logout = () => {\n    // eslint-disable-next-line no-unused-expressions\n    setUser && setUser({\n      id: '',\n      firstName: '',\n      lastName: '',\n    });\n  };\n\n  return (\n    <nav className=\"bg-white shadow dark:bg-gray-800\">\n      <div className=\"container px-6 py-3 mx-auto md:flex md:justify-between md:items-center\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <span className=\"text-xl font-bold text-gray-800 dark:text-white md:text-2xl hover:text-gray-700 dark:hover:text-gray-300\">\n              Books\n            </span>\n          </div>\n          <button\n            type=\"button\"\n            className=\"border-gray-400 text-gray-400 rounded-md border max-h-full px-1\n            transition duration-500 ease-in-out hover:bg-gray-400 hover:text-white md:hidden\"\n            onClick={() => setToggled(!toggle)}\n          >\n            ☰\n          </button>\n        </div>\n\n        <div className={toggle === true ? 'block items-center md:flex' : 'hidden md:block items-center'}>\n          <div className=\"flex flex-col md:flex-row my-2 md:my-0 md:mx-6\">\n\n            <Link\n              to=\"/\"\n              className=\"my-1 py-1 md:py-0 pl-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n              md:mr-4 md:my-0 border-b border-t md:border-t-0 md:border-b-0 md:border-l border-gray-400\"\n            >\n              Home\n            </Link>\n            {globalUser !== null && globalUser.id === process.env.REACT_APP_ADMIN_ID && globalUser.firstName !== '' ? (\n              <Link\n                to=\"/admin\"\n                className=\"my-1 pl-4 pb-1 md:pb-0 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 border-b md:border-b-0 md:border-l border-gray-400\"\n              >\n                Admin\n              </Link>\n            ) : ''}\n            {globalUser !== null && globalUser.id !== process.env.REACT_APP_ADMIN_ID && globalUser.firstName !== '' ? (\n              <Link\n                to=\"/user\"\n                className=\"my-1 pl-4 pb-1 md:pb-0 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 border-b md:border-b-0 md:border-l border-gray-400\"\n              >\n                {globalUser.firstName}\n              </Link>\n            ) : ''}\n            {globalUser !== null && globalUser.id !== '' && globalUser.firstName !== '' ? (\n              <div\n                onClick={logout}\n                className=\"my-1 pl-4 pb-1 md:pb-0 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:pr-4 md:mr-4 md:my-0 border-b md:border-b-0 md:border-l md:border-r border-gray-400\"\n              >\n                Logout\n              </div>\n            ) : (\n              <div className=\"flex flex-col md:flex-row w-full\">\n                <Login />\n                <Register />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from 'react';\n\nfunction Sidebar() {\n  const [value, setValue] = useState(0);\n  const handleSlideChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(Number(event?.target?.value));\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  // eslint-disable-next-line no-unused-vars\n  const [toggle, setToggled] = useState(true);\n\n  return (\n    <div className=\"flex justify-between\">\n      <div className={`inline z-40 ${toggle === true ? 'hidden' : 'fixed'}`}>\n        <button\n          type=\"button\"\n          className=\"border-gray-400 bg-white text-gray-400 rounded-md border max-h-full px-1 mt-2\n            transition duration-500 ease-in-out hover:bg-gray-400 hover:text-white lg:hidden\"\n          onClick={() => setToggled(!toggle)}\n        >\n          ⮜\n        </button>\n      </div>\n      <div\n        className={`lg:block z-30 inset-0 flex-none h-full bg-opacity-25 w-full lg:h-auto\n      lg:overflow-y-visible lg:pt-0 lg:w-60 xl:w-72 shadow-sm dark:bg-gray-800 ${toggle === true ? 'hidden' : ''}`}\n      >\n        <div className=\"items-center justify-between overflow-y-auto scrolling-touch\">\n          <div className=\"border-b border-gray-400 mx-4 my-5 pl-2 text-l font-bold\">\n            Filters\n          </div>\n          <nav className=\"mx-4 my-3\">\n            <div className=\"border-b border-gray-200 mx-1 pb-5 mt-5\">\n              <label htmlFor=\"searchbar\" className=\"mr-2\">Search</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter book name\"\n                id=\"searchbar\"\n                className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none\"\n              />\n            </div>\n            <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n              <ul className=\"list-disc\">\n                <li>Fiction</li>\n                <li>Literature of fact, journalism</li>\n                <li>Popular science literature</li>\n                <li>Children&apos;s literature</li>\n                <li>Comics</li>\n                <li>Poetry, drama satire</li>\n                <li>Other</li>\n              </ul>\n            </div>\n            <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n              <input type=\"range\" min=\"0\" max=\"10\" onChange={handleSlideChange} />\n              <span className=\"ml-2\" id=\"range\">{value}</span>\n            </div>\n          </nav>\n        </div>\n      </div>\n      <div className={`inline z-40 ${toggle === true ? 'fixed' : 'hidden'}`}>\n        <button\n          type=\"button\"\n          className=\"border-gray-400 bg-white text-gray-400 rounded-md border max-h-full px-1 mt-2\n            transition duration-500 ease-in-out hover:bg-gray-400 hover:text-white lg:hidden\"\n          onClick={() => setToggled(!toggle)}\n        >\n          ⮞\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from 'react';\n\nconst Slide = ({ title = '', author = '', image = '' }) => {\n  return (\n    <div className=\"flex flex-col justify-center items-center text-center h-72 w-64 \">\n      <img src={image} alt={title} className=\"w-48 h-64 overflow-hidden\" />\n      {title}\n      <span className=\"text-gray-500 text-sm\">{author}</span>\n    </div>\n  );\n};\n\nexport default Slide;\n","import { useState, useEffect, FC } from 'react';\nimport Slide from './Slide';\n// import { ISupplierBook } from '../interfaces/ISupplierBook.interface';\n\ninterface ISliderProps {\n  entryCount: number;\n  entries: {\n    title: string;\n    authors: string[];\n    image: string;\n  }[];\n}\n\nconst Slider: FC<ISliderProps> = ({ entryCount, entries }) => {\n  const [index, setIndex] = useState(0);\n  // eslint-disable-next-line\n  const [timer, setTimer] = useState<any>();\n  const delay = 2200;\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    timer && clearTimeout(timer);\n\n    const newTimer = setTimeout(() => {\n      const changeIndex = () => {\n        if (index === entryCount - 1) return setIndex(0);\n        return setIndex((old) => old + 1);\n      };\n      changeIndex();\n    }, delay);\n    setTimer(newTimer);\n    // eslint-disable-next-line\n  }, [index]);\n\n  function changeSlide(dir = 0) {\n    const newIndex = index + dir;\n\n    if (newIndex >= entryCount) return setIndex(0);\n    if (newIndex <= -1) return setIndex(entryCount - 1);\n\n    return setIndex(newIndex);\n  }\n\n  return (\n    <div className=\"flex place-content-center mt-2\">\n      <div className=\"flex flex-col items-center bg-gray-50 p-2 shadow\">\n        <Slide title={entries[index]?.title} author={entries[index]?.authors?.join(' ')} image={entries[index]?.image} />\n        <div className=\"flex flex-row\">\n          <button\n            className=\"flex border shadow-xl text-black-50 p-2 transition-colors duration-200 hover:text-yellow-600\"\n            type=\"button\"\n            onClick={() => changeSlide(-1)}\n          >\n            {'<<'}\n          </button>\n          <div className=\"w-80\" />\n          <button\n            className=\"flex border shadow-xl text-black-50 p-2 transition-colors duration-200 hover:text-yellow-600\"\n            type=\"button\"\n            onClick={() => changeSlide(1)}\n          >\n            {'>>'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useEffect, useState } from 'react';\nimport Slider from '../components/Slider';\nimport { IBook } from '../interfaces/IBook.interface';\nimport supabase from '../utils/supabase';\n\nconst SliderDemo = () => {\n  const [data, setData] = useState<IBook[] | null>([]);\n  useEffect(() => {\n    // eslint-disable-next-line\n    const getAllBooks = async () => {\n      // eslint-disable-next-line\n      const { data: books, error } = await supabase\n        .from<IBook>('books')\n        .select(`\n      *\n    `);\n      setData(books);\n    };\n    getAllBooks();\n  }, []);\n\n  if (data) {\n    return (\n      <Slider\n        // eslint-disable-next-line\n        entries={data?.map((book: any) => {\n          return {\n            title: book.title,\n            authors: book.authors,\n            image: book.imageLinks[0],\n          };\n        })}\n        entryCount={data.length}\n      />\n    );\n  }\n  return <p>Loading...</p>;\n};\n\nexport default SliderDemo;\n","import React, { FC } from 'react';\n\ninterface SVGRatingIconProps {\n  urlFull: string\n  urlBlank: string\n  fillingPercent: number\n}\n\nconst SVGRatingIcon: FC<SVGRatingIconProps> = ({ urlBlank, urlFull, fillingPercent }) => {\n  const fullIconStyle = {\n    clipPath: `polygon(0 0, ${fillingPercent}% 0, ${fillingPercent}% 100%, 0 100%)`,\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/alt-text\n    <div>\n      {fillingPercent === 100 ? <img src={urlFull} alt=\"Filled ranking icon\" /> : (\n        <div className=\"grid grid-cols-1 grid-rows-1\">\n          <img src={urlFull} style={fullIconStyle} alt=\"Blank ranking icon\" className=\"col-start-1 col-end-2 row-start-1 row-end-2\" />\n          <img src={urlBlank} alt=\"Blank ranking icon\" className=\"col-start-1 col-end-2 row-start-1 row-end-2\" />\n        </div>\n)}\n    </div>\n  );\n};\n\nexport default SVGRatingIcon;\n","import React, { FC } from 'react';\nimport SVGRatingIcon from './SVGRatingIcon';\n\nconst IconsAmount = 5;\nexport const MaxScoreFromAPI = 5;\nconst RatingIconURL = `${process.env.PUBLIC_URL}/star_border_black.svg`;\nconst RatingIconFilledURL = `${process.env.PUBLIC_URL}/star_black.svg`;\n\ninterface RatingProps {\n  bare: boolean\n  votesAmount: number | null\n  avgRating: number\n}\n\nconst Rating: FC<RatingProps> = ({ bare, votesAmount, avgRating }) => {\n  const icons = [];\n  const scorePerIcon = 100 / IconsAmount;\n\n  let scoreRemaining = (avgRating / MaxScoreFromAPI) * 100;\n  for (let i = 0; i < IconsAmount; i++) {\n    icons.push(<SVGRatingIcon\n      urlBlank={RatingIconURL}\n      urlFull={RatingIconFilledURL}\n      fillingPercent={Math.floor(Math.max(0, Math.min(100, scoreRemaining * IconsAmount)))}\n    />);\n    scoreRemaining -= scorePerIcon;\n  }\n\n  return (\n    <div className=\"flex flex-wrap justify-center items-center flex-col\">\n      <div className=\"flex\">\n        {icons}\n      </div>\n      {!bare && <span className=\"text-gray-600 text-xs mt-1\">Ilosc głosów: {votesAmount}</span>}\n    </div>\n  );\n};\n\nexport default Rating;\n","import React, { FC } from 'react';\n\ninterface ISpecsTableProps {\n  items: ISpecsItem[]\n}\n\ninterface ISpecsItem {\n  key: string\n  value: string\n}\n\nconst SpecificationTable: FC<ISpecsTableProps> = ({ items }) => {\n  const tableRows = [];\n  for (let i = 0; i < items.length; i++) {\n      tableRows.push(\n        <div className=\"flex flex-wrap flex-col md:flex-row justify-between border-b\">\n          <div className=\"max-w-1/2 md:text-right p-2 mr-10 text-gray-500\">{items[i].key}</div>\n          <div className=\"max-w-1/2 p-2\">{items[i].value}</div>\n        </div>\n);\n  }\n  return (\n    <div>\n      {tableRows}\n    </div>\n  );\n};\n\nexport default SpecificationTable;\n","import { FC, useState } from 'react';\nimport { ITab } from '../interfaces/ITab.interface';\n\ninterface ITablistProps {\n  tabs: ITab[],\n  defaultTab: number\n}\n\nconst Tablist: FC<ITablistProps> = ({ tabs, defaultTab }) => {\n  const [currTabID, setCurrTabID] = useState(defaultTab);\n\n  function tabChangeHandler(newTabId: number) {\n    setCurrTabID(newTabId);\n  }\n\n  const tabTitleElements = [];\n  for (let i = 0; i < tabs.length; i++) {\n    tabTitleElements.push(\n      <button\n        type=\"button\"\n        className=\"flex-initial p-4 cursor-pointer auto-rows-min border-r border-gray-300\"\n        onClick={() => tabChangeHandler(i)}\n      >\n        {tabs[i].title}\n      </button>\n);\n  }\n\n  // todo: set the height of the tablist to the maximum height of a tab content\n  return (\n    <div\n      className=\"grid grid-rows-2 grid-cols-1 shadow-md border border-gray-400\"\n      style={{ gridTemplateRows: 'min-content auto' }}\n    >\n      <div className=\"flex border-b border-gray-300\">\n        {tabTitleElements}\n      </div>\n      <div className=\"p-1 md:p-4\">\n        {tabs[currTabID].content}\n      </div>\n    </div>\n  );\n};\n\nexport default Tablist;\n","import { useState, FC } from 'react';\nimport { IBook } from '../interfaces/IBook.interface';\nimport Rating from './Rating';\nimport SpecificationTable from './SpecificationTable';\nimport Tablist from './Tablist';\n\ninterface IBookInfoProps {\n  book: IBook\n}\n\nconst BookInfoPage: FC<IBookInfoProps> = ({ book }) => {\n  const [specsTabList] = useState([{\n    key: 'Rok wydania',\n    value: book.publishedDate,\n  }, {\n    key: 'ID',\n    value: book.id,\n  }, {\n    key: 'Tytul',\n    value: book.title,\n  }, {\n    key: 'ISBN',\n    value: book.isbn,\n  }, {\n    key: 'Autorzy',\n    value: book.authors.join(' '),\n  }]);\n\n  const [tabList] = useState([{\n    title: 'Szczegóły',\n    content:\n  <div className=\"flex justify-center p-1 md:p-4\">\n    <SpecificationTable items={specsTabList} />\n  </div>,\n  }]);\n\n  return (\n    <div className=\"w-11/12 m-auto mt-8\">\n      <div className=\"md:w-11/12 m-auto flex flex-wrap flex-col md:flex-row items-start\">\n        {/* todo: image z powiekszeniem po najechaniu (osobny component)*/}\n        <img src={book.imageLinks[0]} alt=\"ok\" className=\"m-auto md:w-1/3 max-h-56 object-scale-down\" />\n        <div className=\"lg:w-2/3 flex-col lg:flex-row flex flex-wrap\">\n          <div className=\"lg:w-6/12 flex flex-auto flex-col\">\n            <span className=\"text-xl\">{book.title}</span> <br />\n            <div className=\"flex\">\n              <div className=\"w-1/2 text-gray-600\">Podtytuł here</div>\n              <div className=\"w-1/2 text-right text-gray-600\">{book.authors}</div>\n            </div>\n            <div className=\"mt-12 text-sm text-gray-700 text-justify\">\n              {book.description}\n            </div>\n          </div>\n          <div className=\"lg:w-2/12 mt-4 lg:ml-4\">\n            <Rating bare={false} votesAmount={book.votesAmount} avgRating={book.avgRating} />\n          </div>\n        </div>\n      </div>\n      <div className=\"w-full md:w-2/3 mt-8 m-auto\">\n        <Tablist tabs={tabList} defaultTab={0} />\n      </div>\n    </div>\n  );\n};\n\nexport default BookInfoPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BookInfo from '../components/BookInfo';\nimport { IBook } from '../interfaces/IBook.interface';\nimport supabase from '../utils/supabase';\n\ninterface BookInfoURLParams {\n  id: string\n}\n\nconst BookInfoPage = () => {\n  const params = useParams<BookInfoURLParams>();\n  const [book, setBook] = useState<IBook>();\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    const getAllBooks = async () => {\n      // eslint-disable-next-line\n      const { data } = await supabase\n        .from<IBook>('books')\n        .select('*')\n        .eq('id', params.id);\n      if (data !== null) {\n        setBook(data[0]);\n      }\n    };\n    getAllBooks();\n  }, [params]);\n  return book ? <BookInfo book={book} /> : <span>simea</span>;\n};\n\nexport default BookInfoPage;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link,\n} from 'react-router-dom';\nimport BookListView from '../views/BookListView';\nimport Navigation from './Navigation';\nimport Sidebar from './Sidebar';\nimport { useUser } from './UserContext';\nimport SliderDemo from '../views/SliderDemo';\nimport BookInfoPage from '../views/BookInfoView';\n\nfunction AddRouter() {\n  const globalUser = useUser();\n  return (\n    <div className=\"App h-full\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <header className=\"App-header fixed w-full top-0 h-10 z-50\">\n          <Navigation />\n        </header>\n        <div className=\"container w-full h-screen max-w-8xl mx-auto flex mt-12 z-10\">\n          { globalUser?.id === process.env.REACT_APP_ADMIN_ID ? '' : <Sidebar />}\n          <div className=\"min-w-0 w-full pl-5 pt-3 flex-auto lg:static lg:max-h-full lg:overflow-visible shadow-inner\">\n            <Switch>\n              <Route path=\"/internships-2021\" exact>\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/\" exact>\n                <SliderDemo />\n                <BookListView />\n              </Route>\n              <Route path=\"/user\" exact />\n              <Route path=\"/admin\" exact>\n                { globalUser?.id === process.env.REACT_APP_ADMIN_ID ? <Link to=\"admin/store\">store</Link> : <Redirect to=\"/\" />}\n              </Route>\n              <Route path=\"/admin/store\" exact>\n                { globalUser?.id === process.env.REACT_APP_ADMIN_ID ? <BookListView /> : <Redirect to=\"/\" />}\n              </Route>\n              <Route path=\"/admin/owned\" exact>\n                { globalUser?.id === process.env.REACT_APP_ADMIN_ID ? 'placeholder' : <Redirect to=\"/\" />}\n              </Route>\n              <Route path=\"/books-list\" exact>\n                <BookListView />\n              </Route>\n              <Route path=\"/book/:id\" exact>\n                <BookInfoPage />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default AddRouter;\n","import { UserProvider } from './UserContext';\nimport AddRouter from './Router';\n\nfunction App() {\n    return (\n      <UserProvider>\n        <AddRouter />\n      </UserProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}