{"version":3,"sources":["components/Book.tsx","views/BookListView.tsx","components/Slide.tsx","components/Slider.tsx","views/SliderDemo.tsx","utils/supabase.ts","components/UserContext.tsx","components/Login.tsx","components/Register.tsx","components/Navigation.tsx","components/Sidebar.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Book","id","title","authors","image","className","src","alt","join","type","BookListView","useState","data","setData","error","setError","useEffect","a","axios","get","res","fetchData","items","map","book","volumeInfo","description","publishedDate","industryIdentifiers","imageLinks","thumbnail","categories","Slide","author","Slider","entryCount","entries","index","setIndex","timer","setTimer","changeSlide","dir","newIndex","clearTimeout","newTimer","setTimeout","old","onClick","SliderDemo","undefined","books","setBooks","console","length","supabaseUrl","String","process","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_TOKEN","supabase","createClient","UserContext","React","createContext","UserUpdateContext","UserProvider","children","firstName","lastName","user","setUser","Provider","value","newUser","Login","useContext","login","setLogin","formikLogin","useFormik","initialValues","emailAdress","password","onSubmit","values","auth","signIn","email","handleSubmit","htmlFor","name","placeholder","onChange","handleChange","Register","register","setRegister","formikRegister","signUp","from","insert","Navigation","globalUser","to","Sidebar","setValue","min","max","event","Number","target","App","path","exact","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.153648c3.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\ninterface IBookProps {\n  id?: string;\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  industryIdentifiers?: unknown[];\n  image: string;\n  authors?: string[];\n  categories?: string[];\n}\n\nconst Book: FC<IBookProps> = ({ id, title, authors, image }) => {\n  return (\n    <div key={id} className=\"flex flex-col sm:flex-row place-content-center max-w-full md:w-auto bg-gray-100 shadow-md p-3 m-3 mx-6\">\n      <img\n        src={image}\n        alt=\"A book.\"\n        className=\"transform hover:scale-110 cursor-pointer m-3 w-32\n        transition duration-400 ease-in-out hover:-translate-y-1\"\n      />\n      <div className=\"ml-2 w-full\">\n        <span className=\"break-words cursor-pointer transition duration-400 ease-in-out hover:text-gray-500\">{title}</span>\n        <br />\n        <span className=\"text-gray-400\">{authors?.join(' ')}</span>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          className=\"border-gray-400 text-gray-400 rounded-sm border-2 max-h-full ml-2 p-2\n          transition duration-500 ease-in-out hover:bg-gray-400 hover:text-gray-100\"\n        >\n          + Dodaj książkę do magazynu\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Book from '../components/Book';\nimport { IGoogleBooksAPIVolumes } from '../interfaces/IGoogleBooksAPIVolumes.interface';\n\nconst BookListView = () => {\n  const [data, setData] = useState<IGoogleBooksAPIVolumes>();\n  const [error, setError] = useState<boolean>();\n\n  useEffect(() => {\n    // eslint-disable-next-line space-before-function-paren\n    const fetchData = async () => {\n      try {\n        setError(false);\n        const res = await axios.get('https://www.googleapis.com/books/v1/volumes?q=search+terms');\n        setData(res.data);\n      } catch (e) {\n        setError(true);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {data?.items && data?.items.map((book) => (\n        <Book\n          key={book.id}\n          title={book.volumeInfo.title}\n          description={book.volumeInfo.description}\n          publishedDate={book.volumeInfo.publishedDate}\n          industryIdentifiers={book.volumeInfo.industryIdentifiers}\n          image={book.volumeInfo.imageLinks.thumbnail}\n          authors={book.volumeInfo.authors}\n          categories={book.volumeInfo.categories}\n        />\n      ))}\n      {error && <p className=\"text-red-600\">There was an error while trying to fetch data!</p>}\n    </div>\n  );\n};\n\nexport default BookListView;\n","import React from 'react';\n\nconst Slide = ({ title = '', author = '', image = '' }) => {\n  return (\n    <div className=\"flex flex-col justify-center items-center text-center h-72 w-64 \">\n      <img src={image} alt={title} className=\"w-48 h-64 overflow-hidden\" />\n      {title}\n      <span className=\"text-gray-500 text-sm\">{author}</span>\n    </div>\n  );\n};\n\nexport default Slide;\n","import { useState, useEffect, FC } from 'react';\nimport Slide from './Slide';\n// import { ISupplierBook } from '../interfaces/ISupplierBook.interface';\n\ninterface ISliderProps {\n  entryCount: number;\n  entries: {\n    title: string;\n    authors: string[];\n    image: string;\n  }[];\n}\n\nconst Slider: FC<ISliderProps> = ({ entryCount, entries }) => {\n  const [index, setIndex] = useState(0);\n  // eslint-disable-next-line\n  const [timer, setTimer] = useState<any>();\n  const delay = 2200;\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    timer && clearTimeout(timer);\n\n    const newTimer = setTimeout(() => {\n      const changeIndex = () => {\n        if (index === entryCount - 1) return setIndex(0);\n        return setIndex((old) => old + 1);\n      };\n      changeIndex();\n    }, delay);\n    setTimer(newTimer);\n    // eslint-disable-next-line\n  }, [index]);\n\n  function changeSlide(dir = 0) {\n    const newIndex = index + dir;\n\n    if (newIndex >= entryCount) return setIndex(0);\n    if (newIndex <= -1) return setIndex(entryCount - 1);\n\n    return setIndex(newIndex);\n  }\n\n  return (\n    <div className=\"flex place-content-center\">\n      <div className=\"flex flex-col items-center bg-gray-50 p-2 shadow\">\n        <Slide title={entries[index]?.title} author={entries[index]?.authors?.join(' ')} image={entries[index]?.image} />\n        <div className=\"flex flex-row\">\n          <button\n            className=\"flex border shadow-xl text-black-50 p-2 transition-colors duration-200 hover:text-yellow-600\"\n            type=\"button\"\n            onClick={() => changeSlide(-1)}\n          >\n            {'<<'}\n          </button>\n          <div className=\"w-80\" />\n          <button\n            className=\"flex border shadow-xl text-black-50 p-2 transition-colors duration-200 hover:text-yellow-600\"\n            type=\"button\"\n            onClick={() => changeSlide(1)}\n          >\n            {'>>'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Slider from '../components/Slider';\n\nconst SliderDemo = () => {\n  // eslint-disable-next-line\n  const [books, setBooks] = useState<any>(undefined);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get('https://www.googleapis.com/books/v1/volumes?q=search+terms');\n        setBooks(data?.items);\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (books) {\n    return (\n      <Slider\n      // eslint-disable-next-line\n        entries={books?.map((book: any) => {\n          return {\n            title: book.volumeInfo.title,\n            authors: book.volumeInfo.authors,\n            image: book.volumeInfo.imageLinks.thumbnail,\n          };\n        })}\n        entryCount={books.length}\n      />\n    );\n  }\n\n  return <p>Loading...</p>;\n};\n\nexport default SliderDemo;\n","import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = String(process.env.REACT_APP_SUPABASE_URL);\nconst supabaseKey = String(process.env.REACT_APP_SUPABASE_TOKEN);\nexport const supabase = createClient(supabaseUrl, supabaseKey);\n\n// REACT_APP_SUPABASE_URL=xxx REACT_APP_SUPABASE_TOKEN=xxx npm run start\n\nexport default supabase;\n","import React, { FC, useContext, useState } from 'react';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst UserContext = React.createContext<IProfile | null>(null);\nconst UserUpdateContext = React.createContext<((newUser: IProfile) => void) | null>(null);\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n\nexport const useUserUpdate = () => {\n  return useContext(UserUpdateContext);\n};\n\nexport const UserProvider: FC = ({ children }) => {\n  const [user, setUser] = useState<IProfile>({\n    id: '',\n    firstName: '',\n    lastName: '',\n  });\n\n  const toggleUser = (newUser: IProfile) => {\n    setUser(newUser);\n  };\n\n  return (\n    <UserContext.Provider value={user}>\n      <UserUpdateContext.Provider value={toggleUser}>\n        {children}\n      </UserUpdateContext.Provider>\n    </UserContext.Provider>\n  );\n};\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { useUserUpdate } from './UserContext';\n\nconst Login = () => {\n  const setUser = useUserUpdate();\n  const [login, setLogin] = useState(false);\n  const formikLogin = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n    },\n    // eslint-disable-next-line\n    onSubmit: async (values) => {\n      // eslint-disable-next-line\n      const { user, error } = await supabase.auth.signIn({\n        email: values.emailAdress,\n        password: values.password,\n      });\n      setLogin(!login);\n      // eslint-disable-next-line no-unused-expressions\n      setUser && setUser({\n        id: user?.id,\n        firstName: user?.email,\n        lastName: 'unknown',\n      });\n    },\n  });\n\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setLogin(!login)} className=\"border-solid bg-red-300 rounded-md\">Login</button>\n      {login && (\n        <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\">\n          <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n            <button type=\"button\" onClick={() => setLogin(!login)} className=\"border-solid bg-red-300 rounded-md\">Exit</button>\n            <div>\n              <form onSubmit={formikLogin.handleSubmit}>\n                <label htmlFor=\"email-adress\">Email adress:</label>\n                <input\n                  id=\"emailAdress\"\n                  name=\"emailAdress\"\n                  type=\"email\"\n                  placeholder=\"Email-adress\"\n                  onChange={formikLogin.handleChange}\n                  value={formikLogin.values.emailAdress}\n                  className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                />\n                <br />\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={formikLogin.handleChange}\n                  value={formikLogin.values.password}\n                  className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                />\n                <br />\n                <button\n                  type=\"submit\"\n                  className=\"border-solid bg-blue-300 rounded-md\"\n                >\n                  Login\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n      )}\n\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { supabase } from '../utils/supabase';\nimport { IProfile } from '../interfaces/IProfile.interface';\n\nconst Register = () => {\n  const [register, setRegister] = useState(false);\n  const formikRegister = useFormik({\n    initialValues: {\n      emailAdress: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n    },\n    // eslint-disable-next-line\n    onSubmit: async (values) => {\n      // eslint-disable-next-line\n      const { user, error } = await supabase.auth.signUp({\n        email: values.emailAdress,\n        password: values.password,\n      });\n\n      if (user) {\n        await supabase.from<IProfile>('profiles').insert({\n          id: user.id,\n          firstName: values.firstName,\n          lastName: values.lastName,\n        });\n      }\n      setRegister(!register);\n    },\n  });\n\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setRegister(!register)} className=\"border-solid bg-red-300 rounded-md\">Register</button>\n      {register\n        && (\n          <div className=\"fixed left-0 top-0 pin z-50 overflow-auto bg-gray-400 bg-opacity-50 flex h-screen w-screen\">\n            <div className=\"relative p-8 bg-white w-full max-w-md m-auto flex-col flex rounded-md shadow-xl\">\n              <button type=\"button\" onClick={() => setRegister(!register)} className=\"border-solid bg-red-300 rounded-md\">Exit</button>\n              <div>\n                <form onSubmit={formikRegister.handleSubmit}>\n                  <label htmlFor=\"email-adress\">Email adress:</label>\n                  <input\n                    id=\"emailAdress\"\n                    name=\"emailAdress\"\n                    type=\"email\"\n                    placeholder=\"Email-adress\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.emailAdress}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <label htmlFor=\"password\">Password:</label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.password}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <label htmlFor=\"firstName\">First Name:</label>\n                  <input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.firstName}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <label htmlFor=\"lastName\">Last Name:</label>\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    onChange={formikRegister.handleChange}\n                    value={formikRegister.values.lastName}\n                    className=\"border-solid border-4 border-blue-300 rounded-md mb-2\"\n                  />\n                  <br />\n                  <button\n                    type=\"submit\"\n                    className=\"border-solid bg-blue-300 rounded-md\"\n                  >\n                    Register\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default Register;\n","import { Link } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport { useUser } from './UserContext';\n\nfunction Navigation() {\n  const globalUser = useUser();\n  return (\n    <div className=\"\">\n      <nav className=\"bg-white shadow dark:bg-gray-800\">\n        <div className=\"container px-6 py-3 mx-auto md:flex md:justify-between md:items-center\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <span className=\"text-xl font-bold text-gray-800 dark:text-white md:text-2xl hover:text-gray-700 dark:hover:text-gray-300\">\n                Books\n              </span>\n            </div>\n          </div>\n\n          <div className=\"items-center md:flex\">\n            <div className=\"flex flex-col md:flex-row md:mx-6\">\n\n              <Link\n                to=\"/\"\n                className=\"my-1 pl-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-gray-400\"\n              >\n                Home\n              </Link>\n              <Link\n                to=\"/user\"\n                className=\"my-1 pl-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-gray-400\"\n              >\n                {globalUser !== null && globalUser.id !== '' ? globalUser.firstName : 'User'}\n              </Link>\n              <Link\n                to=\"/admin\"\n                className=\"my-1 px-4 text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400\n                md:mr-4 md:my-0 md:border-l md:border-r md:border-gray-400\"\n              >\n                Admin\n              </Link>\n              <Login />\n              <Register />\n            </div>\n          </div>\n\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from 'react';\n\nfunction Sidebar() {\n  const [value, setValue] = useState(0);\n  const handleSlideChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(Number(event?.target?.value));\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  // eslint-disable-next-line no-unused-vars\n\n  return (\n    <div\n      className=\"fixed z-40 inset-0 flex-none h-full bg-opacity-25 w-full lg:static lg:h-auto\n      lg:overflow-y-visible lg:pt-0 lg:w-60 xl:w-72 lg:block hidden shadow-sm dark:bg-gray-800\"\n    >\n      <div className=\"items-center justify-between overflow-y-auto scrolling-touch\">\n        <div className=\"border-b border-gray-400 mx-4 my-5 pl-2 text-l font-bold\">\n          Filters\n        </div>\n        <nav className=\"mx-4 my-3\">\n          <div className=\"border-b border-gray-200 mx-1 pb-5 mt-5\">\n            <label htmlFor=\"searchbar\" className=\"mr-2\">Search</label>\n            <input\n              type=\"text\"\n              placeholder=\"Insert book name\"\n              id=\"searchbar\"\n              className=\"p-1 placeholder-gray-400 text-gray-600 border outline-none\"\n            />\n          </div>\n          <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n            <ul className=\"list-disc\">\n              <li>Fiction</li>\n              <li>Literature of fact, journalism</li>\n              <li>Popular science literature</li>\n              <li>Children&apos;s literature</li>\n              <li>Comics</li>\n              <li>Poetry, drama satire</li>\n              <li>Other</li>\n            </ul>\n          </div>\n          <div className=\"border-b border-gray-200 mx-1 pl-4 pb-5 mt-5\">\n            <input type=\"range\" min=\"0\" max=\"10\" onChange={handleSlideChange} />\n            <span className=\"ml-2\" id=\"range\">{ value }</span>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport BookListView from '../views/BookListView';\nimport SliderDemo from '../views/SliderDemo';\nimport Navigation from './Navigation';\nimport Sidebar from './Sidebar';\nimport { UserProvider } from './UserContext';\n\nfunction App() {\n  return (\n    <UserProvider>\n      <div className=\"App h-full\">\n        <Router>\n          <header className=\"App-header fixed w-full top-0 h-10 z-50\">\n            <Navigation />\n          </header>\n          <div className=\"container w-full h-screen max-w-8xl mx-auto flex mt-12 z-10\">\n            <Sidebar />\n            <div className=\"min-w-0 w-full pl-5 pt-3 flex-auto lg:static lg:max-h-full lg:overflow-visible shadow-inner\">\n              <Switch>\n                <Route path=\"/internships-2021\" exact>\n                  <Redirect to=\"/\" />\n                </Route>\n                <Route path=\"/\" exact>\n                  main\n                  <main>\n                    <p>\n                      Edit <code>src/App.tsx</code> and save to reload.\n                    </p>\n                    <a\n                      className=\"App-link\"\n                      href=\"https://reactjs.org\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Learn Reacta\n                    </a>\n                  </main>\n                </Route>\n                <Route path=\"/user\" exact />\n                <Route path=\"/admin\" exact />\n                <Route path=\"/books-list\" exact>\n                  <BookListView />\n                </Route>\n                <Route path=\"/slider-demo\" exact>\n                  <SliderDemo />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </div>\n    </UserProvider>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}